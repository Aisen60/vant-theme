import{o as s,a,x as t}from"./vendor.09b5b9a9.js";!function(){const s=document.createElement("link").relList;if(!(s&&s.supports&&s.supports("modulepreload"))){for(const s of document.querySelectorAll('link[rel="modulepreload"]'))a(s);new MutationObserver((s=>{for(const t of s)if("childList"===t.type)for(const s of t.addedNodes)"LINK"===s.tagName&&"modulepreload"===s.rel&&a(s)})).observe(document,{childList:!0,subtree:!0})}function a(s){if(s.ep)return;s.ep=!0;const a=function(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerpolicy&&(a.referrerPolicy=s.referrerpolicy),"use-credentials"===s.crossorigin?a.credentials="include":"anonymous"===s.crossorigin?a.credentials="omit":a.credentials="same-origin",a}(s);fetch(s.href,a)}}();const n={class:"van-doc-markdown-body"},l=[t('<h1>Advanced Usage</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Through this chapter, you can learn about some advanced usages of Vant.</p></div><h2 id="component-usage" tabindex="-1">Component Usage</h2><div class="van-doc-card"><h3 id="component-registration" tabindex="-1">Component Registration</h3><p>Vant supports multiple ways to register components:</p><h4 id="global-registration" tabindex="-1">Global Registration</h4><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n<span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\n\n<span class="hljs-comment">// Method 1. via app.use</span>\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Button</span>);\n\n<span class="hljs-comment">// Method 2. Register via app.component</span>\napp.<span class="hljs-title function_">component</span>(<span class="hljs-title class_">Button</span>.<span class="hljs-property">name</span>, <span class="hljs-title class_">Button</span>);\n</code></pre><h4 id="local-registration" tabindex="-1">Local Registration</h4><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">components</span>: {\n    [<span class="hljs-title class_">Button</span>.<span class="hljs-property">name</span>]: <span class="hljs-title class_">Button</span>,\n  },\n};\n</code></pre><blockquote><p>For more information, please refer to <a href="https://v3.vuejs.org/guide/component-registration.html#component-registration">Vue.js - Component Registration</a>。</p></blockquote><h4 id="script-setup" tabindex="-1">&lt;script setup&gt;</h4><p>Vant components can be used directly in <code>&lt;script setup&gt;</code> without component registration.</p><pre><code class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</code></pre><h4 id="jsx-tsx" tabindex="-1">JSX/TSX</h4><p>Vant components can be used directly in JSX and TSX without component registration.</p><pre><code class="language-jsx"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">render</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Button</span> /&gt;</span></span>;\n  },\n};\n</code></pre></div><h2 id="browser-adaptation" tabindex="-1">Browser adaptation</h2><div class="van-doc-card"><h3 id="viewport-units" tabindex="-1">Viewport Units</h3><p>Vant uses <code>px</code> unit by default，you can use tools such as <a href="https://github.com/evrone/postcss-px-to-viewport">postcss–px-to-viewport</a> to transform <code>px</code> unit to viewport units (vw, vh, vmin, vmax).</p><h4 id="postcss-config" tabindex="-1">PostCSS Config</h4><p>PostCSS config example:</p><pre><code class="language-js"><span class="hljs-comment">// postcss.config.js</span>\n<span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = {\n  <span class="hljs-attr">plugins</span>: {\n    <span class="hljs-string">&#39;postcss-px-to-viewport&#39;</span>: {\n      <span class="hljs-attr">viewportWidth</span>: <span class="hljs-number">375</span>,\n    },\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="rem-unit" tabindex="-1">Rem Unit</h3><p>You can use tools such as <code>postcss-pxtorem</code> to transform <code>px</code> unit to <code>rem</code> unit.</p><ul><li><a href="https://github.com/cuth/postcss-pxtorem">postcss-pxtorem</a></li><li><a href="https://github.com/amfe/lib-flexible">lib-flexible</a></li></ul><h4 id="postcss-config-1" tabindex="-1">PostCSS Config</h4><p>PostCSS config example:</p><pre><code class="language-js"><span class="hljs-comment">// postcss.config.js</span>\n<span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = {\n  <span class="hljs-attr">plugins</span>: {\n    <span class="hljs-string">&#39;postcss-pxtorem&#39;</span>: {\n      <span class="hljs-attr">rootValue</span>: <span class="hljs-number">37.5</span>,\n      <span class="hljs-attr">propList</span>: [<span class="hljs-string">&#39;*&#39;</span>],\n    },\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-rootvalue" tabindex="-1">Custom rootValue</h3><p>If the size of the design draft is 750 or other sizes, you can adjust the <code>rootValue</code> to:</p><pre><code class="language-js"><span class="hljs-comment">// postcss.config.js</span>\n<span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = {\n  <span class="hljs-attr">plugins</span>: {\n    <span class="hljs-comment">// postcss-pxtorem version &gt;= 5.0.0</span>\n    <span class="hljs-string">&#39;postcss-pxtorem&#39;</span>: {\n      <span class="hljs-title function_">rootValue</span>(<span class="hljs-params">{ file }</span>) {\n        <span class="hljs-keyword">return</span> file.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#39;vant&#39;</span>) !== -<span class="hljs-number">1</span> ? <span class="hljs-number">37.5</span> : <span class="hljs-number">75</span>;\n      },\n      <span class="hljs-attr">propList</span>: [<span class="hljs-string">&#39;*&#39;</span>],\n    },\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="adapt-to-pc-browsers" tabindex="-1">Adapt to PC Browsers</h3><p>Vant is a mobile-first component library, if you want to use Vant in PC browsers, you can use the <a href="https://github.com/youzan/vant/tree/dev/packages/vant-touch-emulator">@vant/touch-emulator</a> module. This module will automatically convert the mouse events of the PC browser into the touch events of the mobile browser.</p><pre><code class="language-bash"><span class="hljs-comment"># Install</span>\nnpm i @vant/touch-emulator -S\n</code></pre><pre><code class="language-js"><span class="hljs-comment">// Just import this module, then Vant works in PC browser</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;@vant/touch-emulator&#39;</span>;\n</code></pre></div>',9)],e={setup:(t,{expose:e})=>(e({frontmatter:{}}),(t,e)=>(s(),a("div",n,l)))},d={class:"van-doc-markdown-body"},p=[t('<h1>进阶用法</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>通过本章节你可以了解到 Vant 的一些进阶用法，比如组件插槽用法、多种浏览器适配方式。</p></div><h2 id="zu-jian-yong-fa" tabindex="-1">组件用法</h2><div class="van-doc-card"><h3 id="zu-jian-zhu-ce" tabindex="-1">组件注册</h3><p>Vant 支持多种组件注册方式，请根据实际业务需要进行选择。</p><h4 id="quan-ju-zhu-ce" tabindex="-1">全局注册</h4><p>全局注册后，你可以在 app 下的任意子组件中使用注册的 Vant 组件。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n<span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\n\n<span class="hljs-comment">// 方式一. 通过 app.use 注册</span>\n<span class="hljs-comment">// 注册完成后，在模板中通过 &lt;van-button&gt; 或 &lt;VanButton&gt; 标签来使用按钮组件</span>\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Button</span>);\n\n<span class="hljs-comment">// 方式二. 通过 app.component 注册</span>\n<span class="hljs-comment">// 注册完成后，在模板中通过 &lt;van-button&gt; 标签来使用按钮组件</span>\napp.<span class="hljs-title function_">component</span>(<span class="hljs-title class_">Button</span>.<span class="hljs-property">name</span>, <span class="hljs-title class_">Button</span>);\n</code></pre><h4 id="ju-bu-zhu-ce" tabindex="-1">局部注册</h4><p>局部注册后，你可以在当前组件中使用注册的 Vant 组件。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">components</span>: {\n    [<span class="hljs-title class_">Button</span>.<span class="hljs-property">name</span>]: <span class="hljs-title class_">Button</span>,\n  },\n};\n</code></pre><blockquote><p>对于组件注册更详细的介绍，请参考 <a href="https://v3.cn.vuejs.org/guide/component-registration.html#%E7%BB%84%E4%BB%B6%E6%B3%A8%E5%86%8C">Vue 官方文档 - 组件注册</a>。</p></blockquote><h4 id="script-setup" tabindex="-1">&lt;script setup&gt;</h4><p>在 <code>&lt;script setup&gt;</code> 中可以直接使用 Vant 组件，不需要进行组件注册。</p><pre><code class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n</code></pre><h4 id="jsx-tsx" tabindex="-1">JSX/TSX</h4><p>在 JSX 和 TSX 中可以直接使用 Vant 组件，不需要进行组件注册。</p><pre><code class="language-jsx"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">render</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Button</span> /&gt;</span></span>;\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zu-jian-cha-cao" tabindex="-1">组件插槽</h3><p>Vant 提供了丰富的组件插槽，通过插槽可以对组件的某一部分进行个性化定制。如果你对 Vue 的插槽不太熟悉，可以阅读 Vue 官方文档中的<a href="https://v3.cn.vuejs.org/guide/component-slots.html">插槽章节</a>。下面是通过插槽来定制 Checkbox 图标的示例：</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- 使用组件提供的 icon 插槽 --&gt;</span>\n  <span class="hljs-comment">&lt;!-- 将默认图标替换为个性化图片 --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;props&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;props.checked ? activeIcon : inactiveIcon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">checked</span>: <span class="hljs-literal">true</span>,\n      <span class="hljs-attr">activeIcon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/user-active.png&#39;</span>,\n      <span class="hljs-attr">inactiveIcon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/user-inactive.png&#39;</span>,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zu-jian-shi-li-fang-fa" tabindex="-1">组件实例方法</h3><p>Vant 中的许多组件提供了实例方法，调用实例方法时，我们需要通过 <a href="https://v3.cn.vuejs.org/guide/component-template-refs.html">ref</a> 来注册组件引用信息，引用信息将会注册在父组件的<code>$refs</code>对象上。注册完成后，我们可以通过<code>this.$refs.xxx</code>访问到对应的组件实例，并调用上面的实例方法。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 通过 ref 属性将组件绑定到 this.$refs.checkbox 上 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;checkbox&quot;</span>&gt;</span> 复选框 <span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">checked</span>: <span class="hljs-literal">false</span>,\n    };\n  },\n  <span class="hljs-comment">// 注意：组件挂载后才能访问到 ref 对象</span>\n  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>.<span class="hljs-property">checkbox</span>.<span class="hljs-title function_">toggle</span>();\n  },\n};\n</code></pre></div><h2 id="liu-lan-qi-gua-pei" tabindex="-1">浏览器适配</h2><div class="van-doc-card"><h3 id="viewport-bu-ju" tabindex="-1">Viewport 布局</h3><p>Vant 默认使用 <code>px</code> 作为样式单位，如果需要使用 <code>viewport</code> 单位 (vw, vh, vmin, vmax)，推荐使用 <a href="https://github.com/evrone/postcss-px-to-viewport">postcss-px-to-viewport</a> 进行转换。</p><p><a href="https://github.com/evrone/postcss-px-to-viewport">postcss-px-to-viewport</a> 是一款 PostCSS 插件，用于将 px 单位转化为 vw/vh 单位。</p><h4 id="postcss-postcss-shi-li-pei-zhi" tabindex="-1">PostCSS PostCSS 示例配置</h4><p>下面提供了一份基本的 PostCSS 示例配置，可以在此配置的基础上根据项目需求进行修改。</p><pre><code class="language-js"><span class="hljs-comment">// postcss.config.js</span>\n<span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = {\n  <span class="hljs-attr">plugins</span>: {\n    <span class="hljs-string">&#39;postcss-px-to-viewport&#39;</span>: {\n      <span class="hljs-attr">viewportWidth</span>: <span class="hljs-number">375</span>,\n    },\n  },\n};\n</code></pre><blockquote><p>Tips: 在配置 postcss-loader 时，应避免 ignore node_modules 目录，否则将导致 Vant 样式无法被编译。</p></blockquote></div><div class="van-doc-card"><h3 id="rem-bu-ju-gua-pei" tabindex="-1">Rem 布局适配</h3><p>如果需要使用 <code>rem</code> 单位进行适配，推荐使用以下两个工具：</p><ul><li><a href="https://github.com/cuth/postcss-pxtorem">postcss-pxtorem</a> 是一款 PostCSS 插件，用于将 px 单位转化为 rem 单位</li><li><a href="https://github.com/amfe/lib-flexible">lib-flexible</a> 用于设置 rem 基准值</li></ul><h4 id="postcss-shi-li-pei-zhi" tabindex="-1">PostCSS 示例配置</h4><p>下面提供了一份基本的 PostCSS 示例配置，可以在此配置的基础上根据项目需求进行修改。</p><pre><code class="language-js"><span class="hljs-comment">// postcss.config.js</span>\n<span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = {\n  <span class="hljs-attr">plugins</span>: {\n    <span class="hljs-string">&#39;postcss-pxtorem&#39;</span>: {\n      <span class="hljs-attr">rootValue</span>: <span class="hljs-number">37.5</span>,\n      <span class="hljs-attr">propList</span>: [<span class="hljs-string">&#39;*&#39;</span>],\n    },\n  },\n};\n</code></pre><h4 id="qi-ta-she-ji-gao-chi-cun" tabindex="-1">其他设计稿尺寸</h4><p>如果设计稿的尺寸不是 375，而是 750 或其他大小，可以将 <code>rootValue</code> 配置调整为:</p><pre><code class="language-js"><span class="hljs-comment">// postcss.config.js</span>\n<span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = {\n  <span class="hljs-attr">plugins</span>: {\n    <span class="hljs-comment">// postcss-pxtorem 插件的版本需要 &gt;= 5.0.0</span>\n    <span class="hljs-string">&#39;postcss-pxtorem&#39;</span>: {\n      <span class="hljs-title function_">rootValue</span>(<span class="hljs-params">{ file }</span>) {\n        <span class="hljs-keyword">return</span> file.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&#39;vant&#39;</span>) !== -<span class="hljs-number">1</span> ? <span class="hljs-number">37.5</span> : <span class="hljs-number">75</span>;\n      },\n      <span class="hljs-attr">propList</span>: [<span class="hljs-string">&#39;*&#39;</span>],\n    },\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zhuo-mian-duan-gua-pei" tabindex="-1">桌面端适配</h3><p>Vant 是一个面向移动端的组件库，因此默认只适配了移动端设备，这意味着组件只监听了移动端的 <code>touch</code> 事件，没有监听桌面端的 <code>mouse</code> 事件。</p><p>如果你需要在桌面端使用 Vant，可以引入我们提供的 <a href="https://github.com/youzan/vant/tree/dev/packages/vant-touch-emulator">@vant/touch-emulator</a>，这个库会在桌面端自动将 <code>mouse</code> 事件转换成对应的 <code>touch</code> 事件，使得组件能够在桌面端使用。</p><pre><code class="language-bash"><span class="hljs-comment"># 安装模块</span>\nnpm i @vant/touch-emulator -S\n</code></pre><pre><code class="language-js"><span class="hljs-comment">// 引入模块后自动生效</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;@vant/touch-emulator&#39;</span>;\n</code></pre></div><div class="van-doc-card"><h3 id="di-bu-an-quan-qu-gua-pei" tabindex="-1">底部安全区适配</h3><p>iPhone X 等机型底部存在底部指示条，指示条的操作区域与页面底部存在重合，容易导致用户误操作，因此我们需要针对这些机型进行安全区适配。Vant 中部分组件提供了 <code>safe-area-inset-top</code> 或 <code>safe-area-inset-bottom</code> 属性，设置该属性后，即可在对应的机型上开启适配，如下示例：</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 在 head 标签中添加 meta 标签，并设置 viewport-fit=cover 值 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">meta</span>\n  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span>\n  <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, viewport-fit=cover&quot;</span>\n/&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 开启顶部安全区适配 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-nav-bar</span> <span class="hljs-attr">safe-area-inset-top</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 开启底部安全区适配 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span> <span class="hljs-attr">safe-area-inset-bottom</span> /&gt;</span>\n</code></pre><img src="https://img.yzcdn.cn/vant/safearea.png"></div>',11)],c={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",d,p)))},o={class:"van-doc-markdown-body"},r=[t('<h1>Changelog</h1><div class="van-doc-card"><h3 id="tips" tabindex="-1">Tips</h3><p>The current document is the changelog of Vant 3. If you want to view the changelog of Vant 2, please visit <a href="https://youzan.github.io/vant/#/en-US/changelog">Vant 2 Changelog</a>.</p></div><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Vant follows <a href="https://semver.org/lang/zh-CN/">Semantic Versioning 2.0.0</a>.</p><p><strong>Release Schedule</strong></p><ul><li>Patch version：released weekly, including features and bug fixes.</li><li>Minor version：released every one to two months, including backwards compatible features.</li><li>Major version：including breaking changes and new features.</li></ul></div><h2 id="details" tabindex="-1">Details</h2><div class="van-doc-card"><h3 id="v3.2.2" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.2.1...v3.2.2">v3.2.2</a></h3><p><code>2021-09-02</code></p><p><strong>Feature</strong></p><ul><li>Field: add id prop <a href="https://github.com/youzan/vant/issues/9347">#9347</a></li><li>Field: add <code>van-field__error</code> class when error <a href="https://github.com/youzan/vant/issues/9327">#9327</a></li><li>Field: using <code>label</code> tag for label <a href="https://github.com/youzan/vant/issues/9346">#9346</a></li><li>Popover: add show-arrow prop <a href="https://github.com/youzan/vant/issues/9372">#9372</a></li><li>Progress: add transition effect <a href="https://github.com/youzan/vant/commit/ba4ff58af6ccf67e255bf43ef905677dc64596a3">ba4ff5</a></li><li>Search: add id prop <a href="https://github.com/youzan/vant/issues/9349">#9349</a></li><li>Tab: add show-zero-badge prop <a href="https://github.com/youzan/vant/issues/9343">#9343</a></li><li>Locale: simplify locale configs <a href="https://github.com/youzan/vant/issues/9329">#9329</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>AddressEdit: remove unused finish button <a href="https://github.com/youzan/vant/issues/9364">#9364</a></li><li>Progress: fix render error when use v-show and improve performance <a href="https://github.com/youzan/vant/commit/841e09d0529961058ecb63ed26f018cf3a66a3bf">841e09</a></li><li>Progress: percentage missing default value <a href="https://github.com/youzan/vant/commit/8ac597dc3d2316d34f866dcfd7e1646c695da180">8ac597</a></li><li>fix animation css vars not work <a href="https://github.com/youzan/vant/issues/9337">#9337</a></li></ul></div><div class="van-doc-card"><h3 id="v3.2.1" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.2.0...v3.2.1">v3.2.1</a></h3><p><code>2021-08-22</code></p><p><strong>Feature</strong></p><ul><li>Circle: add start-position prop <a href="https://github.com/youzan/vant/issues/9305">#9305</a></li><li>Slider: add reverse prop <a href="https://github.com/youzan/vant/issues/9308">#9308</a></li><li>NumberKeyboard: add van-number-keyboard-key-background-color css var <a href="https://github.com/youzan/vant/issues/9303">#9303</a></li><li>PasswordInput: add password-input-text-color css var <a href="https://github.com/youzan/vant/issues/9304">#9304</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Calendar: title is undefined in month-show event <a href="https://github.com/youzan/vant/issues/9275">#9275</a></li><li>Dialog: fix beforeClose repeat trigger <a href="https://github.com/youzan/vant/issues/9283">#9283</a> <a href="https://github.com/youzan/vant/issues/9291">#9291</a></li><li>Field: should export FieldInstance type <a href="https://github.com/youzan/vant/issues/9254">#9254</a></li><li>Rate: convert count type <a href="https://github.com/youzan/vant/issues/9307">#9307</a></li><li>TreeSelect: fix negative css vars <a href="https://github.com/youzan/vant/issues/9306">#9306</a></li></ul></div><div class="van-doc-card"><h3 id="v3.2.0" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.1.5...v3.2.0">v3.2.0</a></h3><p><code>2021-08-12</code></p><p><strong>Feature</strong></p><ul><li>Form: add useCustomFieldValue api <a href="https://github.com/youzan/vant/issues/9200">#9200</a></li><li>Button: loading-size prop support number type <a href="https://github.com/youzan/vant/issues/9177">#9177</a></li><li>Style: add van-safe-area-bottom util class <a href="https://github.com/youzan/vant/issues/9205">#9205</a></li></ul><p><strong>Types</strong></p><ul><li>AddressEdit: add AddressEditInstance type <a href="https://github.com/youzan/vant/issues/9197">#9197</a></li><li>Area: add AreaInstance type <a href="https://github.com/youzan/vant/issues/9195">#9195</a></li><li>Calendar: add CalendarInstance type <a href="https://github.com/youzan/vant/issues/9165">#9165</a></li><li>Checkbox: add CheckboxInstance type <a href="https://github.com/youzan/vant/issues/9140">#9140</a></li><li>CheckboxGroup: add CheckboxGroupInstance type <a href="https://github.com/youzan/vant/issues/9142">#9142</a></li><li>CollapseItem: add CollapseItemInstance type <a href="https://github.com/youzan/vant/issues/9194">#9194</a></li><li>CountDown: add CountDownInstance type <a href="https://github.com/youzan/vant/issues/9153">#9153</a></li><li>DatetimePicker: add DatetimePickerInstance type <a href="https://github.com/youzan/vant/issues/9208">#9208</a></li><li>DropdownItem: add DropdownItemInstance type <a href="https://github.com/youzan/vant/issues/9214">#9214</a></li><li>Field: add FieldInstance type <a href="https://github.com/youzan/vant/issues/9166">#9166</a></li><li>Form: add FormInstance type <a href="https://github.com/youzan/vant/issues/9139">#9139</a></li><li>ImagePreview: add ImagePreviewInstance type <a href="https://github.com/youzan/vant/issues/9216">#9216</a></li><li>IndexBar: add IndexBarInstance type <a href="https://github.com/youzan/vant/issues/9246">#9246</a></li><li>List: add ListInstance type <a href="https://github.com/youzan/vant/issues/9159">#9159</a></li><li>NoticeBar: add NoticeBarInstance type <a href="https://github.com/youzan/vant/issues/9245">#9245</a></li><li>Picker: add PickerInstance type <a href="https://github.com/youzan/vant/issues/9183">#9183</a></li><li>Progress: add ProgressInstance type <a href="https://github.com/youzan/vant/issues/9247">#9247</a></li><li>Search: add SearchInstance type <a href="https://github.com/youzan/vant/issues/9181">#9181</a></li><li>Swipe: add SwipeInstance type <a href="https://github.com/youzan/vant/issues/9158">#9158</a></li><li>SwipeCell: add SwipeCellInstance type <a href="https://github.com/youzan/vant/issues/9179">#9179</a></li><li>Tabs: add TabsInstance type <a href="https://github.com/youzan/vant/issues/9174">#9174</a></li><li>Uploader: add UploaderInstance type <a href="https://github.com/youzan/vant/issues/9164">#9164</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Badge: minus x offset not work <a href="https://github.com/youzan/vant/issues/9199">#9199</a></li><li>Image: fix border radius value <a href="https://github.com/youzan/vant/issues/9163">#9163</a></li><li>Field: textarea scroll to top after resizing <a href="https://github.com/youzan/vant/issues/9206">#9206</a></li><li>Notify: default option is overridden <a href="https://github.com/youzan/vant/issues/9138">#9138</a></li><li>Rate: should enable flex wrap <a href="https://github.com/youzan/vant/issues/9192">#9192</a></li><li>Tabs: remove invalid head padding for card type <a href="https://github.com/youzan/vant/issues/9168">#9168</a></li><li>Toast: failed to update message <a href="https://github.com/youzan/vant/issues/9196">#9196</a></li></ul></div><div class="van-doc-card"><h3 id="v3.1.5" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.1.4...v3.1.5">v3.1.5</a></h3><p><code>2021-07-26</code></p><p><strong>Feature</strong></p><ul><li>AddressEdit: add address-edit-button-font-size var <a href="https://github.com/youzan/vant/issues/9113">#9113</a></li><li>Icon: add shield-o icon <a href="https://github.com/youzan/vant/issues/9082">#9082</a></li><li>Locale: add Russian language <a href="https://github.com/youzan/vant/issues/9088">#9088</a></li><li>Toast: improve unclickable cursor <a href="https://github.com/youzan/vant/issues/9116">#9116</a></li><li>Uploader: add click-upload event <a href="https://github.com/youzan/vant/issues/9119">#9119</a></li><li>Uploader: add readonly prop <a href="https://github.com/youzan/vant/issues/9118">#9118</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Icon: fix invitation typo <a href="https://github.com/youzan/vant/issues/9096">#9096</a></li><li>NumberKeyboard: should not emit close event when click away <a href="https://github.com/youzan/vant/issues/9108">#9108</a></li><li>Search: fix incorrect left icon color <a href="https://github.com/youzan/vant/issues/9100">#9100</a></li><li>Tabbar: fix tabbar-item-icon-margin-bottom var name <a href="https://github.com/youzan/vant/issues/9101">#9101</a></li></ul></div><div class="van-doc-card"><h3 id="v3.1.4" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.1.3...v3.1.4">v3.1.4</a></h3><p><code>2021-07-19</code></p><p><strong>Feature</strong></p><ul><li>ActionSheet: add before-close prop <a href="https://github.com/youzan/vant/issues/9068">#9068</a></li><li>Cascader: add option slot <a href="https://github.com/youzan/vant/issues/9036">#9036</a></li><li>Cascader: improve option cursor <a href="https://github.com/youzan/vant/issues/9032">#9032</a></li><li>Popup: add before-close prop <a href="https://github.com/youzan/vant/issues/9067">#9067</a></li><li>ShareSheet: add before-close prop <a href="https://github.com/youzan/vant/issues/9068">#9068</a></li><li>Tabs: add click-tab event <a href="https://github.com/youzan/vant/issues/9037">#9037</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Field: required mark position <a href="https://github.com/youzan/vant/issues/9035">#9035</a></li><li>List: should emit load event when parent tab is activated <a href="https://github.com/youzan/vant/issues/9022">#9022</a></li><li>Popup: missing open、close event in some cases <a href="https://github.com/youzan/vant/issues/9065">#9065</a></li></ul></div><div class="van-doc-card"><h3 id="v3.1.3" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.1.2...v3.1.3">v3.1.3</a></h3><p><code>2021-07-11</code></p><p><strong>Feature</strong></p><ul><li>Calendar: add click-subtitle event <a href="https://github.com/youzan/vant/issues/8981">#8981</a></li><li>Calendar: add subtitle slot <a href="https://github.com/youzan/vant/issues/8980">#8980</a></li><li>ConfigProvider: add icon-prefix prop <a href="https://github.com/youzan/vant/issues/8986">#8986</a></li><li>Slider: add drag event param <a href="https://github.com/youzan/vant/issues/8990">#8990</a></li><li>Slider: add left-button、right-button slot <a href="https://github.com/youzan/vant/issues/8989">#8989</a></li><li>touch-emulator: support data-no-touch-simulate <a href="https://github.com/youzan/vant/issues/8984">#8984</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Step: fix z-index issue <a href="https://github.com/youzan/vant/issues/9003">#9003</a></li></ul></div><div class="van-doc-card"><h3 id="v3.1.2" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.1.1...v3.1.2">v3.1.2</a></h3><p><code>2021-07-03</code></p><p><strong>Feature</strong></p><ul><li>Area: add toolbar、confirm、cancel slots <a href="https://github.com/youzan/vant/issues/8969">#8969</a></li><li>Calendar: simplify placeholder dom <a href="https://github.com/youzan/vant/issues/8955">#8955</a></li><li>Cascader: add disabled option <a href="https://github.com/youzan/vant/issues/8952">#8952</a></li><li>ConfigProvider: add tag prop <a href="https://github.com/youzan/vant/issues/8967">#8967</a></li><li>Picker: add toolbar slot <a href="https://github.com/youzan/vant/issues/8968">#8968</a></li><li>Picker: allow option text to be number type <a href="https://github.com/youzan/vant/issues/8951">#8951</a></li><li>Picker: add picker-option-padding CSS var <a href="https://github.com/youzan/vant/issues/8947">#8947</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Toast: fix word break <a href="https://github.com/youzan/vant/issues/8965">#8965</a></li></ul></div><div class="van-doc-card"><h3 id="v3.1.1" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.1.0...v3.1.1">v3.1.1</a></h3><p><code>2021-06-27</code></p><p><strong>Feature</strong></p><ul><li>Cell: add value slot <a href="https://github.com/youzan/vant/issues/8933">#8933</a></li><li>CollapseItem: add label slot <a href="https://github.com/youzan/vant/issues/8934">#8934</a></li><li>NoticeBar: add reset method <a href="https://github.com/youzan/vant/issues/8917">#8917</a></li><li>Tabs: add nav-bottom slot <a href="https://github.com/youzan/vant/issues/8915">#8915</a></li></ul></div><div class="van-doc-card"><h3 id="v3.1.0" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.1.0-beta.0...v3.1.0">v3.1.0</a></h3><p><code>2021-06-22</code></p><p><strong>New Component</strong></p><ul><li>add <a href="#/en-US/config-provider">ConfigProvider</a> Component <a href="https://github.com/youzan/vant/issues/8854">#8854</a></li></ul><p><strong>Feature</strong></p><ul><li>all components support CSS Variables <a href="https://github.com/youzan/vant/commit/aef2579a95da7c8b528ba7062b227fea698a0487">aef257</a> <a href="https://github.com/youzan/vant/commit/fe1cba97b796eba7e9b5dca0ce4ab0d1de95715c">fe1cba</a></li><li>add more CSS Variables <a href="https://github.com/youzan/vant/issues/8861">#8861</a></li><li>Checkbox: icon slot add disabled param <a href="https://github.com/youzan/vant/issues/8839">#8839</a></li><li>Cascader: add className option <a href="https://github.com/youzan/vant/issues/8882">#8882</a></li><li>Cascader: add color option <a href="https://github.com/youzan/vant/issues/8883">#8883</a></li><li>CellGroup: add inset prop <a href="https://github.com/youzan/vant/issues/8885">#8885</a></li><li>GridItem: add reverse prop <a href="https://github.com/youzan/vant/issues/8878">#8878</a></li><li>IndexBar: add teleport prop <a href="https://github.com/youzan/vant/issues/8820">#8820</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Dialog: allow message function to return html <a href="https://github.com/youzan/vant/issues/8872">#8872</a></li><li>Slider: format v-model with step correctly <a href="https://github.com/youzan/vant/issues/8893">#8893</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.18" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.17...v3.0.18">v3.0.18</a></h3><p><code>2021-06-03</code></p><p><strong>Feature</strong></p><ul><li>Button: add icon slot <a href="https://github.com/youzan/vant/issues/8783">#8783</a></li><li>CouponList: add list-footer、disabled-list-footer slot <a href="https://github.com/youzan/vant/issues/8801">#8801</a></li><li>List: remove unused Less var @list-icon-margin-right <a href="https://github.com/youzan/vant/issues/8759">#8759</a></li><li>Locale: add French translations <a href="https://github.com/youzan/vant/issues/8795">#8795</a></li><li>Popup: add icon-prefix prop <a href="https://github.com/youzan/vant/issues/8793">#8793</a></li><li>Popup: add overlay-content slot <a href="https://github.com/youzan/vant/issues/8794">#8794</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Collapse: fix safari rendering issues <a href="https://github.com/youzan/vant/issues/8788">#8788</a></li><li>NoticeBar: failed to play when inside a re-opened popup <a href="https://github.com/youzan/vant/issues/8789">#8789</a></li><li>@vant/touch-emulator: add SSR support <a href="https://github.com/youzan/vant/issues/8767">#8767</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.17" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.16...v3.0.17">v3.0.17</a></h3><p><code>2021-05-23</code></p><p><strong>Feature</strong></p><ul><li>ActionBarIcon: add icon-prefix prop <a href="https://github.com/youzan/vant/issues/8748">#8748</a></li><li>Calendar: add show-range-prompt prop <a href="https://github.com/youzan/vant/issues/8739">#8739</a></li><li>Calendar: add top-info、bottom-info slot <a href="https://github.com/youzan/vant/issues/8716">#8716</a></li><li>GridItem: add icon-color prop <a href="https://github.com/youzan/vant/issues/8753">#8753</a></li><li>NoticeBar: increase default speed to 60 <a href="https://github.com/youzan/vant/issues/8694">#8694</a></li><li>Popover: add icon-prefix prop <a href="https://github.com/youzan/vant/issues/8703">#8703</a></li><li>Toast: add transition <a href="https://github.com/youzan/vant/issues/8743">#8743</a></li><li>Uploader: max-size prop can be a function <a href="https://github.com/youzan/vant/issues/8744">#8744</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Button: add onClick event shim for tsx <a href="https://github.com/youzan/vant/issues/8665">#8665</a></li><li>Calendar: initial date incorrect <a href="https://github.com/youzan/vant/issues/8696">#8696</a></li><li>DatetimePicker: vant3 fixed incorrect value when dynamic set min/max <a href="https://github.com/youzan/vant/issues/8658">#8658</a></li><li>List: skip check when inside an inactive tab <a href="https://github.com/youzan/vant/issues/8741">#8741</a></li><li>Tabs: fix add scroll event target <a href="https://github.com/youzan/vant/issues/8734">#8734</a></li><li>Toast: should reset duration when type or message changed <a href="https://github.com/youzan/vant/issues/8742">#8742</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.16" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.15...v3.0.16">v3.0.16</a></h3><p><code>2021-05-03</code></p><p><strong>Feature</strong></p><ul><li>Swipe: indicator slot add active param <a href="https://github.com/youzan/vant/issues/8645">#8645</a></li><li>Cascader: add @cascader-header-padding less var <a href="https://github.com/youzan/vant/issues/8626">#8626</a></li><li>Steps: add icon-prefix prop <a href="https://github.com/youzan/vant/issues/8631">#8631</a></li><li>export more types <a href="https://github.com/youzan/vant/issues/8652">#8652</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Stepper: fix blur event trigger timing <a href="https://github.com/youzan/vant/issues/8620">#8620</a></li><li>SubmitBar: @submit-bar-price-font-size not work <a href="https://github.com/youzan/vant/issues/8639">#8639</a></li><li>Swipe: re-initialize when popup reopened <a href="https://github.com/youzan/vant/issues/8643">#8643</a></li><li>Tabs: setLine when popup reopened <a href="https://github.com/youzan/vant/issues/8642">#8642</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.15" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.12.14-test...v3.0.15">v3.0.15</a></h3><p><code>2021-04-25</code></p><p><strong>Feature</strong></p><ul><li>Cascader: add click-tab event <a href="https://github.com/youzan/vant/issues/8606">#8606</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Tab: failed to render during SSR <a href="https://github.com/youzan/vant/issues/8603">#8603</a></li><li>Rate: select half star correctly when clicked <a href="https://github.com/youzan/vant/issues/8580">#8580</a></li><li>Tag: incorrect border color when using plain <a href="https://github.com/youzan/vant/issues/8601">#8601</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.14" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.13...v3.0.14">v3.0.14</a></h3><p><code>2021-04-18</code></p><p><strong>Feature</strong></p><ul><li>Badge: offset prop support custom unit <a href="https://github.com/youzan/vant/commit/35edb72b5cd519d4e75443acaa0a63db16695d2d">35edb7</a></li><li>Rate: support decimal modelValue when readonly <a href="https://github.com/youzan/vant/issues/8528">#8528</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>ContactList: fix nodes type <a href="https://github.com/youzan/vant/commit/0b764b63470b09f5654d267c8d07a20bc2d31536">0b764b</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.13" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.12...v3.0.13">v3.0.13</a></h3><p><code>2021-04-11</code></p><p><strong>Feature</strong></p><ul><li>ActionBar: add @action-bar-icon-background-color less var <a href="https://github.com/youzan/vant/issues/8474">#8474</a></li><li>Popover: bump @popperjs/core@2.9.2 <a href="https://github.com/youzan/vant/commit/0d132337d5d263957a7993d60e47a18efec7313e">0d1323</a></li><li>perf: reduce bundle size <a href="https://github.com/youzan/vant/commit/ba3e6d56a0bc7ae3acc25b1380f054da3b9b020f">ba3e6d</a></li></ul><p><strong>Types</strong></p><ul><li>Popup: fix PopupCloseIconPosition type <a href="https://github.com/youzan/vant/commit/15d901ad6aace3826881cb3c6e0499f75b71df80">15d901</a></li><li>Search: missing some props in jsx <a href="https://github.com/youzan/vant/issues/8485">#8485</a></li><li>Stepper: improve theme prop typing <a href="https://github.com/youzan/vant/issues/8489">#8489</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Field: autofocus prop not work <a href="https://github.com/youzan/vant/issues/8488">#8488</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.12" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.11...v3.0.12">v3.0.12</a></h3><p><code>2021-04-05</code></p><p><strong>Feature</strong></p><ul><li>CollapseItem: add readonly prop <a href="https://github.com/youzan/vant/issues/8445">#8445</a></li><li>Field: add clear-icon prop <a href="https://github.com/youzan/vant/issues/8438">#8438</a></li><li>Search: add clear-icon prop <a href="https://github.com/youzan/vant/issues/8439">#8439</a></li><li>Search: add error-message prop <a href="https://github.com/youzan/vant/issues/8442">#8442</a></li><li>Search: add formatter、format-trigger prop <a href="https://github.com/youzan/vant/issues/8441">#8441</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>fix incorrect tag prompts under Webstorm <a href="https://github.com/youzan/vant/issues/8450">#8450</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.11" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.10...v3.0.11">v3.0.11</a></h3><p><code>2021-03-30</code></p><p><strong>Feature</strong></p><ul><li>Cascader: add swipeable prop <a href="https://github.com/youzan/vant/issues/8383">#8383</a></li><li>Dialog: add footer slot <a href="https://github.com/youzan/vant/issues/8382">#8382</a></li><li>Dialog: allow to render JSX message <a href="https://github.com/youzan/vant/issues/8420">#8420</a></li><li>Image: add icon-size prop <a href="https://github.com/youzan/vant/issues/8395">#8395</a></li><li>Row: add wrap prop <a href="https://github.com/youzan/vant/issues/8393">#8393</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Field: should not reset validation after blurred <a href="https://github.com/youzan/vant/issues/8409">#8409</a></li><li>Sticky: Element not exist during SSR <a href="https://github.com/youzan/vant/issues/8407">#8407</a></li><li>Tabs: incorrect horizontal slip judgment <a href="https://github.com/youzan/vant/issues/8388">#8388</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.10" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.9...v3.0.10">v3.0.10</a></h3><p><code>2021-03-19</code></p><p><strong>Feature</strong></p><ul><li>ActionSheet: add cancel slot <a href="https://github.com/youzan/vant/issues/8333">#8333</a></li><li>Badge: add show-zero prop <a href="https://github.com/youzan/vant/issues/8381">#8381</a></li><li>Cascader: add close-icon prop <a href="https://github.com/youzan/vant/issues/8334">#8334</a></li><li>Popover: add close-on-click-overlay prop <a href="https://github.com/youzan/vant/issues/8351">#8351</a></li><li>Popover: add duration prop <a href="https://github.com/youzan/vant/issues/8355">#8355</a></li><li>Popover: add overlay-class prop <a href="https://github.com/youzan/vant/issues/8353">#8353</a></li><li>Popover: add overlay-style prop <a href="https://github.com/youzan/vant/issues/8354">#8354</a></li><li>ShareSheet: add cancel slot <a href="https://github.com/youzan/vant/issues/8335">#8335</a></li><li>Sticky: add change event <a href="https://github.com/youzan/vant/issues/8374">#8374</a></li><li>Tag: close event param <a href="https://github.com/youzan/vant/issues/8337">#8337</a></li><li>Toast: add iconSize option <a href="https://github.com/youzan/vant/issues/8338">#8338</a></li></ul><p><strong>Feature</strong></p><ul><li>ContactList: add @contact-list-item-radio-icon-color var <a href="https://github.com/youzan/vant/issues/8322">#8322</a></li><li>Coupon: add @coupon-corner-checkbox-icon-color var <a href="https://github.com/youzan/vant/issues/8323">#8323</a></li><li>List: add @list-loading-icon-size less var <a href="https://github.com/youzan/vant/issues/8365">#8365</a></li><li>Loading: add @button-loading-icon-size less var <a href="https://github.com/youzan/vant/commit/465bf07095c58e8292b23ef0c64be1550aa9d430">465bf0</a></li><li>PullRefresh: add @pull-refresh-loading-icon-size less var <a href="https://github.com/youzan/vant/issues/8366">#8366</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Popover: close-on-click-outside not work <a href="https://github.com/youzan/vant/issues/8352">#8352</a></li><li>Swipe: incorrect item width after scaled <a href="https://github.com/youzan/vant/issues/8330">#8330</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.9" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.8...v3.0.9">v3.0.9</a></h3><p><code>2021-03-08</code></p><p><strong>Feature</strong></p><ul><li>AddressList: add tag slots <a href="https://github.com/youzan/vant/issues/8292">#8292</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>fix custom theme not work <a href="https://github.com/youzan/vant/issues/8301">#8301</a></li><li>fix failed to install component in TypeScript <a href="https://github.com/youzan/vant/issues/8308">#8308</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.8" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.7...v3.0.8">v3.0.8</a></h3><p><code>2021-03-07</code></p><p><strong>Types</strong></p><ul><li>Build types from source code <a href="https://github.com/youzan/vant/issues/8264">#8264</a></li></ul><p><strong>Feature</strong></p><ul><li>ImagePreview: add overlay-style prop <a href="https://github.com/youzan/vant/issues/8276">#8276</a></li><li>ImagePreview: add transition prop <a href="https://github.com/youzan/vant/issues/8275">#8275</a></li><li>Locale: add th-TH lang <a href="https://github.com/youzan/vant/issues/8297">#8297</a></li><li>PullRefresh: add pull-distance prop <a href="https://github.com/youzan/vant/issues/8280">#8280</a></li><li>Button: add some less vars <a href="https://github.com/youzan/vant/issues/8281">#8281</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>ImagePreview: add test cases <a href="https://github.com/youzan/vant/issues/8282">#8282</a></li><li>ActionSheet: should not reopen when closed <a href="https://github.com/youzan/vant/issues/8272">#8272</a></li><li>Stepper: incorrect text color in iOS14 when disabled <a href="https://github.com/youzan/vant/issues/8277">#8277</a></li><li>Swipe: should render dynamic swipe item correctly <a href="https://github.com/youzan/vant/issues/8288">#8288</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.7" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.6...v3.0.7">v3.0.7</a></h3><p><code>2021-02-28</code></p><p><strong>Feature</strong></p><ul><li>Notify: add lockScroll option <a href="https://github.com/youzan/vant/issues/8168">#8168</a></li><li>Popup: click-overlay event add <code>Event</code> param <a href="https://github.com/youzan/vant/issues/8107">#8107</a></li><li>ShareSheet: add overlay-style prop <a href="https://github.com/youzan/vant/issues/8225">#8225</a></li><li>ShareSheet: add overlay-class prop <a href="https://github.com/youzan/vant/issues/8225">#8225</a></li><li>Step: add finish-icon slot <a href="https://github.com/youzan/vant/issues/8241">#8241</a></li><li>Steps: add finish-icon prop <a href="https://github.com/youzan/vant/issues/8103">#8103</a></li><li>Uploader: add @uploader-mask-text-color var <a href="https://github.com/youzan/vant/issues/8064">#8064</a></li></ul><p><strong>perf</strong></p><ul><li>adjust browserslist to fit Vue 3 <a href="https://github.com/youzan/vant/issues/8227">#8227</a></li><li>disable enableObjectSlots to reduce bundle size <a href="https://github.com/youzan/vant/issues/8226">#8226</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>ActionSheet: fix safe-area-inset-bottom prop not work <a href="https://github.com/youzan/vant/issues/8085">#8085</a></li><li>DateTimePicker: fix incorrect initial value <a href="https://github.com/youzan/vant/issues/8193">#8193</a></li><li>Form: may scroll to incorrect field after submitted <a href="https://github.com/youzan/vant/issues/8159">#8159</a></li><li>ImagePreview: fix incorrect image display during the second call <a href="https://github.com/youzan/vant/issues/8060">#8060</a></li><li>IndexBar: failed to render active anchor when inited <a href="https://github.com/youzan/vant/issues/8164">#8164</a></li><li>Popup: should watch lockScroll <a href="https://github.com/youzan/vant/issues/8169">#8169</a></li><li>Swipe: active may outrange when initialize <a href="https://github.com/youzan/vant/issues/8061">#8061</a></li><li>SwipeCell: incorrect position param when clicking outside <a href="https://github.com/youzan/vant/issues/8108">#8108</a></li><li>Tabbar: incorrect active tab when name is zero <a href="https://github.com/youzan/vant/issues/8125">#8125</a></li><li>Tabs: incorrect active tab when active prop is zero <a href="https://github.com/youzan/vant/issues/8074">#8074</a></li><li>Toast: ssr error <a href="https://github.com/youzan/vant/issues/8214">#8214</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.6" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.5...v3.0.6">v3.0.6</a></h3><p><code>2021-01-31</code></p><p><strong>Feature</strong></p><ul><li>Area: support more than 6-digit area code <a href="https://github.com/youzan/vant/issues/8001">#8001</a></li><li>Form: adjust show-error default value to false <a href="https://github.com/youzan/vant/issues/8016">#8016</a></li><li>Form: allow validator to return message <a href="https://github.com/youzan/vant/issues/8052">#8052</a></li><li>NumberKeyboard: add blur-on-close prop <a href="https://github.com/youzan/vant/issues/8033">#8033</a></li><li>Popover: add click-overlay event <a href="https://github.com/youzan/vant/issues/8050">#8050</a></li><li>Popover: support config action color <a href="https://github.com/youzan/vant/issues/8049">#8049</a></li><li>Sticky: add position、offset-bottom prop <a href="https://github.com/youzan/vant/issues/7979">#7979</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Button: should not submit form when loading <a href="https://github.com/youzan/vant/issues/8018">#8018</a></li><li>Calendar: should expose scrollToDate method <a href="https://github.com/youzan/vant/issues/7983">#7983</a></li><li>Empty: linearGradient id conflict <a href="https://github.com/youzan/vant/issues/8013">#8013</a></li><li>Toast: closeOnClickOverlay not work <a href="https://github.com/youzan/vant/issues/8044">#8044</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.5" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.4...v3.0.5">v3.0.5</a></h3><p><code>2021-01-24</code></p><p><strong>Feature</strong></p><ul><li>Badge: add offset prop <a href="https://github.com/youzan/vant/commit/e0b463630108b5031a02a8afcd0c141a7fdbac9e">e0b463</a></li><li>Calendar: reset method support specified date <a href="https://github.com/youzan/vant/issues/7966">#7966</a></li><li>Icons: add wechat icon, rename wechat-pay icon <a href="https://github.com/youzan/vant/commit/b3cd8c14aea9e542a9de4ba9999e50c3ecbf3b3c">b3cd8c</a></li><li>ImagePreview: reset scale after swiping <a href="https://github.com/youzan/vant/issues/7972">#7972</a></li><li>ImagePreview: adjust default swipeDuration to 300ms <a href="https://github.com/youzan/vant/issues/7970">#7970</a></li><li>ShareSheet: add wechat-moments icon <a href="https://github.com/youzan/vant/commit/ca66fbca36c5c839e3a294d465b0fc2bd7bf5039">ca66fb</a></li><li>Slider: add readonly prop <a href="https://github.com/youzan/vant/commit/4cd991dfec01bd5342cb59b750d0dfa5901b8dc8">4cd991</a></li></ul><p><strong>style</strong></p><ul><li>ShareSheet: update qrcode icon <a href="https://github.com/youzan/vant/commit/32a08bb6807d9d38027e03eef376d82b6eab282e">32a08b</a></li><li>TreeSelect: add active feedback <a href="https://github.com/youzan/vant/commit/bada315fb3b0fbdf30c663170c867bbbc274687c">bada31</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Calendar: should reset to default date when calling reset method <a href="https://github.com/youzan/vant/issues/7967">#7967</a></li><li>Dialog: failed to render when toggling allowHtml <a href="https://github.com/youzan/vant/issues/7968">#7968</a></li><li>ImagePreview: scale event index is undefined <a href="https://github.com/youzan/vant/issues/7971">#7971</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.4" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.3...v3.0.4">v3.0.4</a></h3><p><code>2021-01-17</code></p><p><strong>Feature</strong></p><ul><li>Cascader: add field-names prop <a href="https://github.com/youzan/vant/issues/7933">#7933</a></li><li>Cell: allow to disable clickable when using is-link <a href="https://github.com/youzan/vant/issues/7923">#7923</a></li><li>DropdownItem: title-class can be array or object type <a href="https://github.com/youzan/vant/issues/7926">#7926</a></li><li>Popup: overlay-class can be array or object <a href="https://github.com/youzan/vant/issues/7924">#7924</a></li><li>Toast: add overlayClass option <a href="https://github.com/youzan/vant/issues/7925">#7925</a></li><li>Toast: add overlayStyle option <a href="https://github.com/youzan/vant/issues/7898">#7898</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>AddressEdit: should expose setAreaCode method <a href="https://github.com/youzan/vant/commit/6a184f8e930fea31035680dd44f40bc007aba4cd">6a184f</a></li><li>Circle: the gradient color is incorrect <a href="https://github.com/youzan/vant/issues/7909">#7909</a></li><li>NumberKeyboard: fix delete、extra-key slot not work <a href="https://github.com/youzan/vant/commit/52a0e5a8c70dcc07b87140e33318acefcbdd3ef9">52a0e5</a></li><li>Search: fix update:modelValue emits warning <a href="https://github.com/youzan/vant/issues/7872">#7872</a></li><li>Swipe: should stop autoplay when page is hidden <a href="https://github.com/youzan/vant/commit/1c428f240cd44d3389510263dd7f03973cfbfa2b">1c428f</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.3" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.2...v3.0.3">v3.0.3</a></h3><p><code>2021-01-10</code></p><p><strong>Feature</strong></p><ul><li>Field: add autocomplate prop <a href="https://github.com/youzan/vant/issues/7877">#7877</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Area: should expose getValues method <a href="https://github.com/youzan/vant/commit/03c7b46b04d8c543f952cbf8399ec21ca39f979f">03c7b4</a></li><li>ImagePreview: close-on-popstate not work <a href="https://github.com/youzan/vant/issues/7880">#7880</a></li><li>List: should watch error prop and check position <a href="https://github.com/youzan/vant/commit/b79c32183f6159a663dad42f6189a939061f9f32">b79c32</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.2" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.1...v3.0.2">v3.0.2</a></h3><p><code>2021-01-02</code></p><p><strong>Feature</strong></p><ul><li>Calendar: add scrollToDate method <a href="https://github.com/youzan/vant/issues/7847">#7847</a></li><li>Form: add disabled prop <a href="https://github.com/youzan/vant/issues/7830">#7830</a></li><li>Form: add readonly prop <a href="https://github.com/youzan/vant/issues/7830">#7830</a></li><li>Loading: add text-color prop <a href="https://github.com/youzan/vant/issues/7806">#7806</a></li><li>Picker: add columns-field-names prop <a href="https://github.com/youzan/vant/issues/7791">#7791</a></li><li>NumberKeyboard: add random-key-order prop <a href="https://github.com/youzan/vant/issues/7841">#7841</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Calendar: title slot not work <a href="https://github.com/youzan/vant/issues/7826">#7826</a></li><li>Calendar: failed to watch defaultDate <a href="https://github.com/youzan/vant/issues/7815">#7815</a></li><li>Popup: should remove lock scroll before destroyed <a href="https://github.com/youzan/vant/issues/7835">#7835</a></li><li>Stepper: should format model-value <a href="https://github.com/youzan/vant/commit/81494dfa13e6ab9a3f12995f481290d27d14ab7a">81494d</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.1" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.0...v3.0.1">v3.0.1</a></h3><p><code>2020-12-27</code></p><p><strong>Feature</strong></p><ul><li>Form: support valdiate multiple names <a href="https://github.com/youzan/vant/issues/7810">#7810</a></li><li>Form: resetValidation support multiple names <a href="https://github.com/youzan/vant/issues/7811">#7811</a></li><li>Stepper: add show-input prop <a href="https://github.com/youzan/vant/issues/7812">#7812</a></li><li>IndexBar: add scrollTo method <a href="https://github.com/youzan/vant/issues/7794">#7794</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>CountDown: fix ssr memory leak <a href="https://github.com/youzan/vant/issues/7808">#7808</a></li><li>Image: mismatching warning during ssr <a href="https://github.com/youzan/vant/issues/7822">#7822</a></li><li>Popup: lockScroll not work <a href="https://github.com/youzan/vant/issues/7738">#7738</a></li><li>Stepper: change event emitted twice <a href="https://github.com/youzan/vant/issues/7820">#7820</a></li><li>Swipe: incorrect size during ssr <a href="https://github.com/youzan/vant/issues/7821">#7821</a></li><li>Swipe: incorrect active swipe when children changed <a href="https://github.com/youzan/vant/issues/7802">#7802</a></li><li>Swipe: incorrect active tab when activated <a href="https://github.com/youzan/vant/issues/7772">#7772</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.0" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.12.0...v3.0.0">v3.0.0</a></h3><p><code>2020-12-23</code></p><p><strong>Content</strong></p><p>Reference: <a href="https://github.com/youzan/vant/issues/7797">Vant 3.0 正式发布：全面拥抱 Vue 3</a>。</p></div><div class="van-doc-card"><h3 id="v3.0.0-rc.4" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.12.0-beta.0...v3.0.0-rc.4">v3.0.0-rc.4</a></h3><p><code>2020-12-21</code></p><p><strong>New Component</strong></p><ul><li>add Cascader component <a href="https://github.com/youzan/vant/pull/7771">#7771</a></li></ul><img src="https://b.yzcdn.cn/vant/cascader_1221.png"><p><strong>Feature</strong></p><ul><li>Stepper: add show-input prop <a href="https://github.com/youzan/vant/issues/7785">#7785</a></li><li>uploader: add single uploader preview image style <a href="https://github.com/youzan/vant/issues/7731">#7731</a></li></ul><p><strong>Types</strong></p><ul><li>Lazyload: fix typing <a href="https://github.com/youzan/vant/issues/7757">#7757</a></li><li>Contains all features and bug fixes of <code>v2.12.0-beta.0</code> version</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-rc.3" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.11.2...v3.0.0-rc.3">v3.0.0-rc.3</a></h3><p><code>2020-12-10</code></p><p><strong>Breaking Change</strong></p><ul><li>Stepper: rename async-change to before-change <a href="https://github.com/youzan/vant/commit/e026d2d83f66bb25c66f805cf8085de70d8e009f">e026d2</a></li></ul><p><strong>perf</strong></p><ul><li>Stepper: improve bundle size <a href="https://github.com/youzan/vant/issues/7675">#7675</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Stepper: disabled not work <a href="https://github.com/youzan/vant/commit/c277603160a7a17685dc532304b9a0c2444db959">c27760</a></li><li>Tabs: failed to set active tab <a href="https://github.com/youzan/vant/issues/7717">#7717</a></li><li>Contains all features and bug fixes of <code>v2.11.3</code> version</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-rc.2" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.0-rc.1...v3.0.0-rc.2">v3.0.0-rc.2</a></h3><p><code>2020-12-04</code></p><p><strong>perf</strong></p><ul><li>reduce bundle size <a href="https://github.com/youzan/vant/issues/7675">#7675</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Lazyload: missing esm output <a href="https://github.com/youzan/vant/issues/7685">#7685</a></li><li>NumberKeyboard: fix hide-on-click-outside prop not working <a href="https://github.com/youzan/vant/issues/7668">#7668</a> <a href="https://github.com/youzan/vant/issues/7667">#7667</a></li><li>Uploader: fix change status is not valid <a href="https://github.com/youzan/vant/issues/7681">#7681</a></li><li>Types: fix teleport typing <a href="https://github.com/youzan/vant/issues/7687">#7687</a></li><li>Contains all features and bug fixes of <code>v2.11.2</code> version</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-rc.1" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.11.1...v3.0.0-rc.1">v3.0.0-rc.1</a></h3><p><code>2020-12-01</code></p><p><strong>Breaking Change</strong></p><ul><li>Popover: adjust trigger default value to click <a href="https://github.com/youzan/vant/commit/1699d9927240373867f065355136fd27ac04b0e5">1699d9</a></li></ul><p><strong>Feature</strong></p><ul><li>Lazyload: support Vue 3 <a href="https://github.com/youzan/vant/commit/d3ca404f98ffd572035d7048c949e8942b89fc55">d3ca40</a></li><li>Contains all features and bug fixes of <code>v2.11.1</code> version</li></ul><p><strong>style</strong></p><ul><li>Circle: add @circle-color less var <a href="https://github.com/youzan/vant/commit/1a6cf64f548bb19c6bd478db67f2e0a1d7c9a145">1a6cf6</a></li><li>Circle: add @circle-layer-color less var <a href="https://github.com/youzan/vant/commit/65a5ed85537b7a406655bd39f7e4f5332d780a82">65a5ed</a></li><li>Circle: add @circle-size less var <a href="https://github.com/youzan/vant/commit/b57f7e9d9810ce95047334f0897899ebddaac6f3">b57f7e</a></li><li>IndexBar: adjust default highlight color to red <a href="https://github.com/youzan/vant/commit/65b6807a7e6b8a415b5f228c5d55426cd81a1dfa">65b680</a></li><li>IndexBar: adjust sticky anchor color to red <a href="https://github.com/youzan/vant/commit/87b0a034958296a720409ded893e708081c35bc5">87b0a0</a></li><li>IndexBar: increase right padding to 8px <a href="https://github.com/youzan/vant/commit/aad055906484d8b6c38a9f84a768f09522b13a41">aad055</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Image: lazy-load prop not work <a href="https://github.com/youzan/vant/commit/0ba8187bf540abc0c593c6571554f1b72e8d3e19">0ba818</a></li><li>Lazyload: fix typing <a href="https://github.com/youzan/vant/commit/d0c4c26d758f18ac3f33fc7d4867a98b731b129d">d0c4c2</a></li><li>Popup: transition-appear prop not work <a href="https://github.com/youzan/vant/commit/dd6930533593a363e25f56717e5c17184ef6e867">dd6930</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.10" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.0-beta.9...v3.0.0-beta.10">v3.0.0-beta.10</a></h3><p><code>2020-11-22</code></p><p><strong>Bug Fixes</strong></p><ul><li>Radio: failed to bind group <a href="https://github.com/youzan/vant/commit/0f7c9a317cc9a7219ec8431bae0658a5e84d43af">0f7c9a</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.9" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.11.0...v3.0.0-beta.9">v3.0.0-beta.9</a></h3><p><code>2020-11-22</code></p><p><strong>Feature</strong></p><ul><li>Search: add blur method <a href="https://github.com/youzan/vant/commit/d26282e54245a47075fed01baf6304e0d84559e0">d26282</a></li><li>Search: add focus method <a href="https://github.com/youzan/vant/commit/2833bc03f5243370e5a3aeece5b823fc2ebde64c">2833bc</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Checkbox: bind-group prop not work <a href="https://github.com/youzan/vant/issues/7447">#7447</a></li><li>Badge: fix missing typing <a href="https://github.com/youzan/vant/commit/c487b394efa946f6fae5059f1e1a69be11a25a6e">c487b3</a></li><li>Contains all features and bug fixes of <code>v2.11.0</code> version</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.8" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.10.14...v3.0.0-beta.8">v3.0.0-beta.8</a></h3><p><code>2020-11-15</code></p><p><strong>Bug Fixes</strong></p><ul><li>ActionSheet: incorrect behavior when clicking disabled option <a href="https://github.com/youzan/vant/commit/996598686955b90bb5cf7589b5ca1589e17e2016">996598</a></li><li>ActionSheet: missing callback option <a href="https://github.com/youzan/vant/commit/27b761f534186a6bfa2e8e54cc78ccb51ec48e25">27b761</a></li><li>Calendar: failed to render when default-date is null #7519 <a href="https://github.com/youzan/vant/issues/7519">#7519</a></li><li>cli: should not collect coverage from test dir <a href="https://github.com/youzan/vant/commit/c2151708bbffee95ceb169176bfa5deb5f7e9317">c21517</a></li><li>DatetimePicker: inherit correct props <a href="https://github.com/youzan/vant/commit/ed332daf319e2005995f279026a57d4f30a339f6">ed332d</a></li><li>NavBar: safe-area-inset-top css incorrect <a href="https://github.com/youzan/vant/issues/7535">#7535</a></li><li>NoticeBar: avoid repeated start <a href="https://github.com/youzan/vant/commit/0712d920634e7b70b77f49c71337172bf3ece470">0712d9</a></li><li>Swipe: failed to render in lazy-render mode <a href="https://github.com/youzan/vant/commit/e06ba480a9ec02af8659616ff6ceb5155defddad">e06ba4</a></li><li>Swipe: avoid repeated initialization <a href="https://github.com/youzan/vant/commit/c9417341e0adb681db6108cf1383bab77ab90da9">c94173</a></li><li>Tabs: avoid repeated initialization <a href="https://github.com/youzan/vant/commit/599e817cd4f4239b4a93c75f34118731d47891b5">599e81</a></li><li>Contains all features and bug fixes of <code>v2.10.14</code> version</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.7" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.10.13...v3.0.0-beta.7">v3.0.0-beta.7</a></h3><p><code>2020-11-08</code></p><p><strong>Bug Fixes</strong></p><ul><li>Calendar: incorrect initial date <a href="https://github.com/youzan/vant/issues/7412">#7412</a></li><li>DropdownMenu: can’t disable closeOnClickOutside <a href="https://github.com/youzan/vant/issues/7473">#7473</a></li><li>Uploader: before-read return true not work <a href="https://github.com/youzan/vant/issues/7493">#7493</a></li><li>Uploader: can’t get index in delete event <a href="https://github.com/youzan/vant/issues/7481">#7481</a></li><li>Contains all features and bug fixes of <code>v2.10.13</code> version</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.6" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.10.12...v3.0.0-beta.6">v3.0.0-beta.6</a></h3><p><code>2020-11-01</code></p><p><strong>Bug Fixes</strong></p><ul><li>Calendar: watch maxData/minDate and reset <a href="https://github.com/youzan/vant/issues/7412">#7412</a></li><li>Swipe: incorrect lazy render when loop is false <a href="https://github.com/youzan/vant/issues/7465">#7465</a></li><li>Swipe: item should only rendered once <a href="https://github.com/youzan/vant/issues/7466">#7466</a></li><li>Tabs: skip initial animation <a href="https://github.com/youzan/vant/commit/49e87756c70b33e1a56620ebee3c0aa53fb9fc86">49e877</a></li><li>ActionBar: fix typing <a href="https://github.com/youzan/vant/issues/7440">#7440</a> <a href="https://github.com/youzan/vant/issues/7442">#7442</a></li><li>Contains all features and bug fixes of <code>v2.10.12</code> version</li></ul></div>',41)],i={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",o,r)))},h={class:"van-doc-markdown-body"},j=[t('<h1>更新日志</h1><div class="van-doc-card"><h3 id="ti-shi" tabindex="-1">提示</h3><p>当前文档为 Vant 3 的更新日志，如需查询 Vant 2 的更新内容，请访问 <a href="https://youzan.github.io/vant/#/zh-CN/changelog">Vant 2 更新日志</a>。</p></div><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>Vant 遵循 <a href="https://semver.org/lang/zh-CN/">Semver</a> 语义化版本规范。</p><p><strong>发布节奏</strong></p><ul><li>修订号：每周发布，包含新特性和问题修复。</li><li>次版本号：每隔一至二个月发布，包含新特性和较大的功能更新，向下兼容。</li><li>主版本号：无固定的发布时间，包含不兼容更新和重大功能更新。</li></ul></div><h2 id="geng-xin-nei-rong" tabindex="-1">更新内容</h2><div class="van-doc-card"><h3 id="v3.2.2" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.2.1...v3.2.2">v3.2.2</a></h3><p><code>2021-09-02</code></p><p><strong>Feature</strong></p><ul><li>Field: 新增 id 属性 <a href="https://github.com/youzan/vant/issues/9347">#9347</a></li><li>Field: 新增 <code>van-field__error</code> 类名 <a href="https://github.com/youzan/vant/issues/9327">#9327</a></li><li>Field: label 现在会使用原生 <code>label</code> 标签 <a href="https://github.com/youzan/vant/issues/9346">#9346</a></li><li>Popover: 新增 show-arrow 属性 <a href="https://github.com/youzan/vant/issues/9372">#9372</a></li><li>Progress: 新增过渡动画效果 <a href="https://github.com/youzan/vant/commit/ba4ff58af6ccf67e255bf43ef905677dc64596a3">ba4ff5</a></li><li>Search: 新增 id 属性 <a href="https://github.com/youzan/vant/issues/9349">#9349</a></li><li>Tab: 新增 show-zero-badge 属性 <a href="https://github.com/youzan/vant/issues/9343">#9343</a></li><li>Locale: 精简一部分国际化文本配置 <a href="https://github.com/youzan/vant/issues/9329">#9329</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>AddressEdit: 移除了无效的样式变量 <a href="https://github.com/youzan/vant/issues/9364">#9364</a></li><li>Progress: 修复在 v-show 内使用时无法正确渲染的问题 <a href="https://github.com/youzan/vant/commit/841e09d0529961058ecb63ed26f018cf3a66a3bf">841e09</a></li><li>Progress: 修复 percentage 属性缺少默认值的问题 <a href="https://github.com/youzan/vant/commit/8ac597dc3d2316d34f866dcfd7e1646c695da180">8ac597</a></li><li>修复动画相关的 CSS 变量不生效的问题 <a href="https://github.com/youzan/vant/issues/9337">#9337</a></li></ul></div><div class="van-doc-card"><h3 id="v3.2.1" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.2.0...v3.2.1">v3.2.1</a></h3><p><code>2021-08-22</code></p><p><strong>Feature</strong></p><ul><li>Circle: 新增 start-position 属性 <a href="https://github.com/youzan/vant/issues/9305">#9305</a></li><li>Slider: 新增 reverse 属性 <a href="https://github.com/youzan/vant/issues/9308">#9308</a></li><li>NumberKeyboard: 新增 van-number-keyboard-key-background-color CSS 变量 <a href="https://github.com/youzan/vant/issues/9303">#9303</a></li><li>PasswordInput: add password-input-text-color CSS 变量 <a href="https://github.com/youzan/vant/issues/9304">#9304</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Calendar: 修复 month-show 事件缺少 title 参数的问题 <a href="https://github.com/youzan/vant/issues/9275">#9275</a></li><li>Dialog: 修复 beforeClose 重复触发的问题 <a href="https://github.com/youzan/vant/issues/9283">#9283</a> <a href="https://github.com/youzan/vant/issues/9291">#9291</a></li><li>Field: 修复 FieldInstance 类型未导出的问题 <a href="https://github.com/youzan/vant/issues/9254">#9254</a></li><li>Rate: 修复 count 属性传入字符串类型时展示错误的问题 <a href="https://github.com/youzan/vant/issues/9307">#9307</a></li><li>TreeSelect: 修复 CSS 负数变量不生效导致样式错误的问题 <a href="https://github.com/youzan/vant/issues/9306">#9306</a></li></ul></div><div class="van-doc-card"><h3 id="v3.2.0" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.1.5...v3.2.0">v3.2.0</a></h3><p><code>2021-08-12</code></p><p><strong>Feature</strong></p><ul><li>Form: 新增 useCustomFieldValue 方法，用于自定义表单项 <a href="https://github.com/youzan/vant/issues/9200">#9200</a></li><li>Button: loading-size 属性支持 number 类型 <a href="https://github.com/youzan/vant/issues/9177">#9177</a></li><li>Style: 新增 van-safe-area-bottom 样式类 <a href="https://github.com/youzan/vant/issues/9205">#9205</a></li></ul><p><strong>Types</strong></p><ul><li>AddressEdit: 新增 AddressEditInstance 类型 <a href="https://github.com/youzan/vant/issues/9197">#9197</a></li><li>Area: 新增 AreaInstance 类型 <a href="https://github.com/youzan/vant/issues/9195">#9195</a></li><li>Calendar: 新增 CalendarInstance 类型 <a href="https://github.com/youzan/vant/issues/9165">#9165</a></li><li>Checkbox: 新增 CheckboxInstance 类型 <a href="https://github.com/youzan/vant/issues/9140">#9140</a></li><li>CheckboxGroup: 新增 CheckboxGroupInstance 类型 <a href="https://github.com/youzan/vant/issues/9142">#9142</a></li><li>CollapseItem: 新增 CollapseItemInstance 类型 <a href="https://github.com/youzan/vant/issues/9194">#9194</a></li><li>CountDown: 新增 CountDownInstance 类型 <a href="https://github.com/youzan/vant/issues/9153">#9153</a></li><li>DatetimePicker: 新增 DatetimePickerInstance 类型 <a href="https://github.com/youzan/vant/issues/9208">#9208</a></li><li>DropdownItem: 新增 DropdownItemInstance 类型 <a href="https://github.com/youzan/vant/issues/9214">#9214</a></li><li>Field: 新增 FieldInstance 类型 <a href="https://github.com/youzan/vant/issues/9166">#9166</a></li><li>Form: 新增 FormInstance 类型 <a href="https://github.com/youzan/vant/issues/9139">#9139</a></li><li>ImagePreview: 新增 ImagePreviewInstance 类型 <a href="https://github.com/youzan/vant/issues/9216">#9216</a></li><li>IndexBar: 新增 IndexBarInstance 类型 <a href="https://github.com/youzan/vant/issues/9246">#9246</a></li><li>List: 新增 ListInstance 类型 <a href="https://github.com/youzan/vant/issues/9159">#9159</a></li><li>NoticeBar: 新增 NoticeBarInstance 类型 <a href="https://github.com/youzan/vant/issues/9245">#9245</a></li><li>Picker: 新增 PickerInstance 类型 <a href="https://github.com/youzan/vant/issues/9183">#9183</a></li><li>Progress: 新增 ProgressInstance 类型 <a href="https://github.com/youzan/vant/issues/9247">#9247</a></li><li>Search: 新增 SearchInstance 类型 <a href="https://github.com/youzan/vant/issues/9181">#9181</a></li><li>Swipe: 新增 SwipeInstance 类型 <a href="https://github.com/youzan/vant/issues/9158">#9158</a></li><li>SwipeCell: 新增 SwipeCellInstance 类型 <a href="https://github.com/youzan/vant/issues/9179">#9179</a></li><li>Tabs: 新增 TabsInstance 类型 <a href="https://github.com/youzan/vant/issues/9174">#9174</a></li><li>Uploader: 新增 UploaderInstance 类型 <a href="https://github.com/youzan/vant/issues/9164">#9164</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Badge: 修复 offset 为负数时不生效的问题 <a href="https://github.com/youzan/vant/issues/9199">#9199</a></li><li>Image: 修复圆角数值不正确的问题 <a href="https://github.com/youzan/vant/issues/9163">#9163</a></li><li>Field: 修复 Textarea 内容较多时，输入会导致页面滚动到顶部的问题 <a href="https://github.com/youzan/vant/issues/9206">#9206</a></li><li>Notify: 修复默认选项被错误覆盖的问题 <a href="https://github.com/youzan/vant/issues/9138">#9138</a></li><li>Rate: 修复星星较多时无法自动换行的问题 <a href="https://github.com/youzan/vant/issues/9192">#9192</a></li><li>Tabs: 修复 card 类型内边距错误的问题 <a href="https://github.com/youzan/vant/issues/9168">#9168</a></li><li>Toast: 修复某些情况下 message 无法更新的问题 <a href="https://github.com/youzan/vant/issues/9196">#9196</a></li></ul></div><div class="van-doc-card"><h3 id="v3.1.5" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.1.4...v3.1.5">v3.1.5</a></h3><p><code>2021-07-26</code></p><p><strong>Feature</strong></p><ul><li>AddressEdit: 新增 address-edit-button-font-size 样式变量 <a href="https://github.com/youzan/vant/issues/9113">#9113</a></li><li>Icon: 新增 shield-o 图标 <a href="https://github.com/youzan/vant/issues/9082">#9082</a></li><li>Locale: 新增 Russian 俄罗斯语言包 <a href="https://github.com/youzan/vant/issues/9088">#9088</a></li><li>Toast: 优化不可点击状态下的光标展示 <a href="https://github.com/youzan/vant/issues/9116">#9116</a></li><li>Uploader: 新增 click-upload 事件 <a href="https://github.com/youzan/vant/issues/9119">#9119</a></li><li>Uploader: 新增 readonly 属性 <a href="https://github.com/youzan/vant/issues/9118">#9118</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Icon: 修复 invitation 图标名称拼写错误 <a href="https://github.com/youzan/vant/issues/9096">#9096</a></li><li>NumberKeyboard: 修复点击外部时会触发 close 事件的问题 <a href="https://github.com/youzan/vant/issues/9108">#9108</a></li><li>Search: 修复左侧图标颜色不正确的问题 <a href="https://github.com/youzan/vant/issues/9100">#9100</a></li><li>Tabbar: 修复 tabbar-item-icon-margin-bottom 样式变量名称 <a href="https://github.com/youzan/vant/issues/9101">#9101</a></li></ul></div><div class="van-doc-card"><h3 id="v3.1.4" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.1.3...v3.1.4">v3.1.4</a></h3><p><code>2021-07-19</code></p><p><strong>Feature</strong></p><ul><li>ActionSheet: 新增 before-close 属性 <a href="https://github.com/youzan/vant/issues/9068">#9068</a></li><li>Cascader: 新增 option 插槽 <a href="https://github.com/youzan/vant/issues/9036">#9036</a></li><li>Cascader: 优化光标展示 <a href="https://github.com/youzan/vant/issues/9032">#9032</a></li><li>Popup: 新增 before-close 属性 <a href="https://github.com/youzan/vant/issues/9067">#9067</a></li><li>ShareSheet: 新增 before-close 属性 <a href="https://github.com/youzan/vant/issues/9068">#9068</a></li><li>Tabs: 新增 click-tab 事件 <a href="https://github.com/youzan/vant/issues/9037">#9037</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Field: 修复 label-align 为 right 时 required 标记位置错误的问题 <a href="https://github.com/youzan/vant/issues/9035">#9035</a></li><li>List: 修复在 Tabs 内嵌套使用时，切换 Tabs 不触发 load 事件的问题 <a href="https://github.com/youzan/vant/issues/9022">#9022</a></li><li>Popup: 修复某些情况下未正确触发 open、close 事件的问题 <a href="https://github.com/youzan/vant/issues/9065">#9065</a></li></ul></div><div class="van-doc-card"><h3 id="v3.1.3" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.1.2...v3.1.3">v3.1.3</a></h3><p><code>2021-07-11</code></p><p><strong>Feature</strong></p><ul><li>Calendar: 新增 click-subtitle 事件 <a href="https://github.com/youzan/vant/issues/8981">#8981</a></li><li>Calendar: 新增 subtitle 插槽 <a href="https://github.com/youzan/vant/issues/8980">#8980</a></li><li>ConfigProvider: 新增 icon-prefix 属性 <a href="https://github.com/youzan/vant/issues/8986">#8986</a></li><li>Slider: 新增 drag 事件参数 <a href="https://github.com/youzan/vant/issues/8990">#8990</a></li><li>Slider: 新增 left-button、right-button 插槽 <a href="https://github.com/youzan/vant/issues/8989">#8989</a></li><li>touch-emulator: 支持通过白名单排除节点 <a href="https://github.com/youzan/vant/issues/8984">#8984</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Step: 修复 z-index 过高问题 <a href="https://github.com/youzan/vant/issues/9003">#9003</a></li></ul></div><div class="van-doc-card"><h3 id="v3.1.2" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.1.1...v3.1.2">v3.1.2</a></h3><p><code>2021-07-03</code></p><p><strong>Feature</strong></p><ul><li>Area: 新增 toolbar、confirm、cancel 插槽 <a href="https://github.com/youzan/vant/issues/8969">#8969</a></li><li>Calendar: 优化日期较多时的加载性能 <a href="https://github.com/youzan/vant/issues/8955">#8955</a></li><li>Cascader: 新增 disabled 选项 <a href="https://github.com/youzan/vant/issues/8952">#8952</a></li><li>ConfigProvider: 新增 tag 属性 <a href="https://github.com/youzan/vant/issues/8967">#8967</a></li><li>Picker: 新增 toolbar 插槽，将 default 插槽标记为废弃 <a href="https://github.com/youzan/vant/issues/8968">#8968</a></li><li>Picker: 允许 Option 的值为 number 类型 <a href="https://github.com/youzan/vant/issues/8951">#8951</a></li><li>Picker: 新增 picker-option-padding CSS 变量 <a href="https://github.com/youzan/vant/issues/8947">#8947</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Toast: 修复文字换行问题 <a href="https://github.com/youzan/vant/issues/8965">#8965</a></li></ul></div><div class="van-doc-card"><h3 id="v3.1.1" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.1.0...v3.1.1">v3.1.1</a></h3><p><code>2021-06-27</code></p><p><strong>Feature</strong></p><ul><li>Cell: 新增 value 插槽，将 default 插槽标记为废弃 <a href="https://github.com/youzan/vant/issues/8933">#8933</a></li><li>CollapseItem: 新增 label 插槽 <a href="https://github.com/youzan/vant/issues/8934">#8934</a></li><li>NoticeBar: 新增 reset 方法 <a href="https://github.com/youzan/vant/issues/8917">#8917</a></li><li>Tabs: 新增 nav-bottom 插槽 <a href="https://github.com/youzan/vant/issues/8915">#8915</a></li></ul></div><div class="van-doc-card"><h3 id="v3.1.0" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.1.0-beta.0...v3.1.0">v3.1.0</a></h3><p><code>2021-06-22</code></p><p><strong>New Component</strong></p><ul><li>新增 <a href="#/zh-CN/config-provider">ConfigProvider</a> 组件，用于主题定制 <a href="https://github.com/youzan/vant/issues/8854">#8854</a></li></ul><p><strong>Feature</strong></p><ul><li>所有组件支持 CSS 变量 <a href="https://github.com/youzan/vant/commit/aef2579a95da7c8b528ba7062b227fea698a0487">aef257</a> <a href="https://github.com/youzan/vant/commit/fe1cba97b796eba7e9b5dca0ce4ab0d1de95715c">fe1cba</a></li><li>新增 primary-color 等样式变量 <a href="https://github.com/youzan/vant/issues/8861">#8861</a></li><li>Checkbox: icon 插槽新增 disabled 参数 <a href="https://github.com/youzan/vant/issues/8839">#8839</a></li><li>Cascader: 新增 className 选项 <a href="https://github.com/youzan/vant/issues/8882">#8882</a></li><li>Cascader: 新增 color 选项 <a href="https://github.com/youzan/vant/issues/8883">#8883</a></li><li>CellGroup: 新增 inset 属性 <a href="https://github.com/youzan/vant/issues/8885">#8885</a></li><li>GridItem: 新增 reverse 属性 <a href="https://github.com/youzan/vant/issues/8878">#8878</a></li><li>IndexBar: 新增 teleport 属性 <a href="https://github.com/youzan/vant/issues/8820">#8820</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Dialog: 修复 message 作为函数时返回 HTML 字符串无效的问题 <a href="https://github.com/youzan/vant/issues/8872">#8872</a></li><li>Slider: 修复设置 step 属性时，输入值格式化错误的问题 <a href="https://github.com/youzan/vant/issues/8893">#8893</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.18" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.17...v3.0.18">v3.0.18</a></h3><p><code>2021-06-03</code></p><p><strong>Feature</strong></p><ul><li>Button: 新增 icon 插槽 <a href="https://github.com/youzan/vant/issues/8783">#8783</a></li><li>CouponList: 新增 list-footer、disabled-list-footer 插槽 <a href="https://github.com/youzan/vant/issues/8801">#8801</a></li><li>Locale: 新增 French 法语语言包 <a href="https://github.com/youzan/vant/issues/8795">#8795</a></li><li>Popup: 新增 icon-prefix 属性 <a href="https://github.com/youzan/vant/issues/8793">#8793</a></li><li>Popup: 新增 overlay-content 插槽 <a href="https://github.com/youzan/vant/issues/8794">#8794</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Collapse: 修复在 safari 上可能出现渲染异常的问题 <a href="https://github.com/youzan/vant/issues/8788">#8788</a></li><li>NoticeBar: 修复在 Popup 内嵌套使用时播放异常的问题 <a href="https://github.com/youzan/vant/issues/8789">#8789</a></li><li>List: 移除未使用的 @list-icon-margin-right 变量 <a href="https://github.com/youzan/vant/issues/8759">#8759</a></li><li>@vant/touch-emulator: 修复 SSR 时报错的问题 <a href="https://github.com/youzan/vant/issues/8767">#8767</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.17" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.16...v3.0.17">v3.0.17</a></h3><p><code>2021-05-23</code></p><p><strong>Feature</strong></p><ul><li>ActionBarIcon: 新增 icon-prefix 属性 <a href="https://github.com/youzan/vant/issues/8748">#8748</a></li><li>Calendar: 新增 over-range 事件 <a href="https://github.com/youzan/vant/issues/8739">#8739</a></li><li>Calendar: 新增 show-range-prompt 属性 <a href="https://github.com/youzan/vant/issues/8739">#8739</a></li><li>Calendar: 新增 top-info、bottom-info 插槽 <a href="https://github.com/youzan/vant/issues/8716">#8716</a></li><li>GridItem: 新增 icon-color 属性 <a href="https://github.com/youzan/vant/issues/8753">#8753</a></li><li>NoticeBar: 默认 speed 由 50 调整为 60 <a href="https://github.com/youzan/vant/issues/8694">#8694</a></li><li>Popover: 新增 icon-prefix 属性 <a href="https://github.com/youzan/vant/issues/8703">#8703</a></li><li>Toast: 新增不同类型 Toast 的 transition 过渡效果 <a href="https://github.com/youzan/vant/issues/8743">#8743</a></li><li>Uploader: max-size 属性支持函数格式 <a href="https://github.com/youzan/vant/issues/8744">#8744</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Button: 修复 tsx 下使用时缺少 onClick 类型定义的问题 <a href="https://github.com/youzan/vant/issues/8665">#8665</a></li><li>Calendar: 修复默认日期不正确的问题 <a href="https://github.com/youzan/vant/issues/8696">#8696</a></li><li>DatetimePicker: 修复动态设置 minDate、maxDate 时异常的问题 <a href="https://github.com/youzan/vant/issues/8658">#8658</a></li><li>List: 修复在开启 animated 的 Tabs 下使用时加载异常的问题 <a href="https://github.com/youzan/vant/issues/8741">#8741</a></li><li>Tabs: 修复滚动事件监听不正确的问题 <a href="https://github.com/youzan/vant/issues/8734">#8734</a></li><li>Toast: 修复多次调用时持续时间不正确的问题 <a href="https://github.com/youzan/vant/issues/8742">#8742</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.16" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.15...v3.0.16">v3.0.16</a></h3><p><code>2021-05-03</code></p><p><strong>Feature</strong></p><ul><li>Swipe: 新增 indicator 插槽的 active 参数 <a href="https://github.com/youzan/vant/issues/8645">#8645</a></li><li>Cascader: 新增 @cascader-header-padding less 变量 <a href="https://github.com/youzan/vant/issues/8626">#8626</a></li><li>Steps: 新增 icon-prefix 属性 <a href="https://github.com/youzan/vant/issues/8631">#8631</a></li><li>导出更多类型定义 <a href="https://github.com/youzan/vant/issues/8652">#8652</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Stepper: 修复 blur 事件触发时机 <a href="https://github.com/youzan/vant/issues/8620">#8620</a></li><li>SubmitBar: 修复 @submit-bar-price-font-size 变量不生效的问题 <a href="https://github.com/youzan/vant/issues/8639">#8639</a></li><li>Swipe: 修复在 Popup 内时展示可能不正确的问题 <a href="https://github.com/youzan/vant/issues/8643">#8643</a></li><li>Tabs: 修复在 Popup 内时展示可能不正确的问题 <a href="https://github.com/youzan/vant/issues/8642">#8642</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.15" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.12.14-test...v3.0.15">v3.0.15</a></h3><p><code>2021-04-25</code></p><p><strong>Feature</strong></p><ul><li>Cascader: 新增 click-tab 事件 <a href="https://github.com/youzan/vant/issues/8606">#8606</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Tab: 修复 SSR 时报错的问题 <a href="https://github.com/youzan/vant/issues/8603">#8603</a></li><li>Rate: 修复点击半星时未正确选中的问题 <a href="https://github.com/youzan/vant/issues/8580">#8580</a></li><li>Tag: 修复使用 color 和 plain 属性时边框颜色错误的问题 <a href="https://github.com/youzan/vant/issues/8601">#8601</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.14" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.13...v3.0.14">v3.0.14</a></h3><p><code>2021-04-18</code></p><p><strong>Feature</strong></p><ul><li>Badge: offset 属性支持传入任意单位 <a href="https://github.com/youzan/vant/commit/35edb72b5cd519d4e75443acaa0a63db16695d2d">35edb7</a></li><li>Rate: 支持在 readonly 时渲染任意小数结果 <a href="https://github.com/youzan/vant/issues/8528">#8528</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>ContactList: 修复 nodes 类型错误 <a href="https://github.com/youzan/vant/commit/0b764b63470b09f5654d267c8d07a20bc2d31536">0b764b</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.13" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.12...v3.0.13">v3.0.13</a></h3><p><code>2021-04-11</code></p><p><strong>Feature</strong></p><ul><li>ActionBar: 新增 @action-bar-icon-background-color 样式变量 <a href="https://github.com/youzan/vant/issues/8474">#8474</a></li><li>Popover: 升级依赖的 @popperjs/core 到 2.9.2 版本 <a href="https://github.com/youzan/vant/commit/0d132337d5d263957a7993d60e47a18efec7313e">0d1323</a></li><li>perf: 优化包体积 <a href="https://github.com/youzan/vant/commit/ba3e6d56a0bc7ae3acc25b1380f054da3b9b020f">ba3e6d</a></li></ul><p><strong>Types</strong></p><ul><li>Popup: 修复 PopupCloseIconPosition 类型错误 <a href="https://github.com/youzan/vant/commit/15d901ad6aace3826881cb3c6e0499f75b71df80">15d901</a></li><li>Search: 修复在 tsx 下部分 props 不存在的问题 <a href="https://github.com/youzan/vant/issues/8485">#8485</a></li><li>Stepper: 优化 theme 属性类型定义 <a href="https://github.com/youzan/vant/issues/8489">#8489</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Field: 修复 autofocus 属性不生效的问题 <a href="https://github.com/youzan/vant/issues/8488">#8488</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.12" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.11...v3.0.12">v3.0.12</a></h3><p><code>2021-04-05</code></p><p><strong>Feature</strong></p><ul><li>CollapseItem: 新增 readonly 属性 <a href="https://github.com/youzan/vant/issues/8445">#8445</a></li><li>Field: 新增 clear-icon 属性 <a href="https://github.com/youzan/vant/issues/8438">#8438</a></li><li>Search: 新增 clear-icon 属性 <a href="https://github.com/youzan/vant/issues/8439">#8439</a></li><li>Search: 新增 error-message 属性 <a href="https://github.com/youzan/vant/issues/8442">#8442</a></li><li>Search: 新增 formatter、format-trigger 属性 <a href="https://github.com/youzan/vant/issues/8441">#8441</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>修复 Webstorm 下组件标签提示不正确的问题 <a href="https://github.com/youzan/vant/issues/8450">#8450</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.11" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.10...v3.0.11">v3.0.11</a></h3><p><code>2021-03-30</code></p><p><strong>Feature</strong></p><ul><li>Cascader: 新增 swipeable 属性 <a href="https://github.com/youzan/vant/issues/8383">#8383</a></li><li>Dialog: 新增 footer 插槽 <a href="https://github.com/youzan/vant/issues/8382">#8382</a></li><li>Dialog: 支持在 message 中传入 render 函数 <a href="https://github.com/youzan/vant/issues/8420">#8420</a></li><li>Image: 新增 icon-size 属性 <a href="https://github.com/youzan/vant/issues/8395">#8395</a></li><li>Row: 新增 wrap 属性 <a href="https://github.com/youzan/vant/issues/8393">#8393</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Field: 修复在个别情况下错误地清除错误提示的问题 <a href="https://github.com/youzan/vant/issues/8409">#8409</a></li><li>Sticky: 修复在 SSR 时提示 Element 不存在的问题 <a href="https://github.com/youzan/vant/issues/8407">#8407</a></li><li>Tabs: 修复在 safari 上左滑退出页面时手势判断错误的问题 <a href="https://github.com/youzan/vant/issues/8388">#8388</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.10" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.9...v3.0.10">v3.0.10</a></h3><p><code>2021-03-19</code></p><p><strong>Feature</strong></p><ul><li>ActionSheet: 新增 cancel 插槽 <a href="https://github.com/youzan/vant/issues/8333">#8333</a></li><li>Badge: 新增 show-zero 属性 <a href="https://github.com/youzan/vant/issues/8381">#8381</a></li><li>Cascader: 新增 close-icon 属性 <a href="https://github.com/youzan/vant/issues/8334">#8334</a></li><li>Popover: 新增 close-on-click-overlay 属性 <a href="https://github.com/youzan/vant/issues/8351">#8351</a></li><li>Popover: 新增 duration 属性 <a href="https://github.com/youzan/vant/issues/8355">#8355</a></li><li>Popover: 新增 overlay-class 属性 <a href="https://github.com/youzan/vant/issues/8353">#8353</a></li><li>Popover: 新增 overlay-style 属性 <a href="https://github.com/youzan/vant/issues/8354">#8354</a></li><li>ShareSheet: 新增 cancel 插槽 <a href="https://github.com/youzan/vant/issues/8335">#8335</a></li><li>Sticky: 新增 change event <a href="https://github.com/youzan/vant/issues/8374">#8374</a></li><li>Tag: close 事件新增 event 参数 <a href="https://github.com/youzan/vant/issues/8337">#8337</a></li><li>Toast: 新增 iconSize 选项 <a href="https://github.com/youzan/vant/issues/8338">#8338</a></li></ul><p><strong>Feature</strong></p><ul><li>ContactList: 新增 @contact-list-item-radio-icon-color Less 变量 <a href="https://github.com/youzan/vant/issues/8322">#8322</a></li><li>Coupon: 新增 @coupon-corner-checkbox-icon-color Less 变量 <a href="https://github.com/youzan/vant/issues/8323">#8323</a></li><li>List: 新增 @list-loading-icon-size Less 变量 <a href="https://github.com/youzan/vant/issues/8365">#8365</a></li><li>Loading: 新增 @button-loading-icon-size Less 变量 <a href="https://github.com/youzan/vant/commit/465bf07095c58e8292b23ef0c64be1550aa9d430">465bf0</a></li><li>PullRefresh: 新增 @pull-refresh-loading-icon-size Less 变量 <a href="https://github.com/youzan/vant/issues/8366">#8366</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Popover: 修复 close-on-click-outside 属性不生效的问题 <a href="https://github.com/youzan/vant/issues/8352">#8352</a></li><li>Swipe: 修复添加 scale 动画时宽度计算错误的问题 <a href="https://github.com/youzan/vant/issues/8330">#8330</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.9" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.8...v3.0.9">v3.0.9</a></h3><p><code>2021-03-08</code></p><p><strong>Feature</strong></p><ul><li>AddressList: 新增 tag 插槽 <a href="https://github.com/youzan/vant/issues/8292">#8292</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>修复主题定制不生效的问题 <a href="https://github.com/youzan/vant/issues/8301">#8301</a></li><li>修复在 TS 下使用 app.use 注册组件报错的问题 <a href="https://github.com/youzan/vant/issues/8308">#8308</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.8" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.7...v3.0.8">v3.0.8</a></h3><p><code>2021-03-07</code></p><p><strong>Types</strong></p><ul><li>完善所有组件的类型定义 <a href="https://github.com/youzan/vant/issues/8264">#8264</a></li></ul><p><strong>Feature</strong></p><ul><li>ImagePreview: 新增 transition 属性 <a href="https://github.com/youzan/vant/issues/8275">#8275</a></li><li>ImagePreview: 新增 overlay-style 属性 <a href="https://github.com/youzan/vant/issues/8276">#8276</a></li><li>Locale: 新增 th-TH 泰语 <a href="https://github.com/youzan/vant/issues/8297">#8297</a></li><li>PullRefresh: 新增 pull-distance 属性 <a href="https://github.com/youzan/vant/issues/8280">#8280</a></li><li>Button: 新增若干个 Less 变量 <a href="https://github.com/youzan/vant/issues/8281">#8281</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>ActionSheet: 修复返回页面时可能错误地重新打开的问题 <a href="https://github.com/youzan/vant/issues/8272">#8272</a></li><li>Stepper: 修复在 iOS14 下禁用时输入框文字不可见的问题 <a href="https://github.com/youzan/vant/issues/8277">#8277</a></li><li>Swipe: 修复动态插入轮播图时渲染错误的问题 <a href="https://github.com/youzan/vant/issues/8288">#8288</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.7" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.6...v3.0.7">v3.0.7</a></h3><p><code>2021-02-28</code></p><p><strong>Feature</strong></p><ul><li>Notify: 新增 lockScroll 选项 <a href="https://github.com/youzan/vant/issues/8168">#8168</a></li><li>Popup: click-overlay 事件新增 <code>Event</code> 参数 <a href="https://github.com/youzan/vant/issues/8107">#8107</a></li><li>ShareSheet: 新增 overlay-style 属性 <a href="https://github.com/youzan/vant/issues/8225">#8225</a></li><li>ShareSheet: 新增 overlay-class 属性 <a href="https://github.com/youzan/vant/issues/8225">#8225</a></li><li>Step: 新增 finish-icon 插槽 <a href="https://github.com/youzan/vant/issues/8241">#8241</a></li><li>Steps: 新增 finish-icon 属性 <a href="https://github.com/youzan/vant/issues/8103">#8103</a></li><li>Uploader: 新增 @uploader-mask-text-color 样式变量 <a href="https://github.com/youzan/vant/issues/8064">#8064</a></li></ul><p><strong>perf</strong></p><ul><li>包体积优化：调整适配的浏览器版本，与 Vue 3 保持一致 <a href="https://github.com/youzan/vant/issues/8227">#8227</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>ActionSheet: 修复 safe-area-inset-bottom 属性不生效的问题 <a href="https://github.com/youzan/vant/issues/8085">#8085</a></li><li>DateTimePicker: 修复 v-model 为 null 时初始值不正确的问题 <a href="https://github.com/youzan/vant/issues/8193">#8193</a></li><li>Form: 修复提交表单时可能滚动到错误的表单项的问题 <a href="https://github.com/youzan/vant/issues/8159">#8159</a></li><li>ImagePreview: 修复第二次调用时可能出现渲染不正确的问题 <a href="https://github.com/youzan/vant/issues/8060">#8060</a></li><li>IndexBar: 修复初始化时激活的锚点未正确渲染的问题 <a href="https://github.com/youzan/vant/issues/8164">#8164</a></li><li>Popup: 修复动态设置 lock-scroll 属性不生效的问题 <a href="https://github.com/youzan/vant/issues/8169">#8169</a></li><li>Swipe: 修复初始化时 active 值可能错误的问题 <a href="https://github.com/youzan/vant/issues/8061">#8061</a></li><li>SwipeCell: 修复点击外部时 click 事件参数不正确的问题 <a href="https://github.com/youzan/vant/issues/8108">#8108</a></li><li>Tabbar: 修复 name 为 0 时激活的选项可能不正确的问题 <a href="https://github.com/youzan/vant/issues/8125">#8125</a></li><li>Tabs: 修复 v-model 为 0 时激活的标签页可能不正确的问题 <a href="https://github.com/youzan/vant/issues/8074">#8074</a></li><li>Toast: 修复 SSR 时可能报错的问题 <a href="https://github.com/youzan/vant/issues/8214">#8214</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.6" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.5...v3.0.6">v3.0.6</a></h3><p><code>2021-01-31</code></p><p><strong>Feature</strong></p><ul><li>Area: 支持超过 6 位的地区码 <a href="https://github.com/youzan/vant/issues/8001">#8001</a></li><li>Form: show-error 属性的默认值调整为 false <a href="https://github.com/youzan/vant/issues/8016">#8016</a></li><li>Form: 支持在 validator 中返回错误提示 <a href="https://github.com/youzan/vant/issues/8052">#8052</a></li><li>NumberKeyboard: 新增 blur-on-close 属性 <a href="https://github.com/youzan/vant/issues/8033">#8033</a></li><li>Popover: 新增 click-overlay 事件 <a href="https://github.com/youzan/vant/issues/8050">#8050</a></li><li>Popover: 支持在 action 选项对象中配置 color 字段 <a href="https://github.com/youzan/vant/issues/8049">#8049</a></li><li>Sticky: 新增 position、offset-bottom 属性 <a href="https://github.com/youzan/vant/issues/7979">#7979</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Button: 修复加载状态下会触发表单提交的问题 <a href="https://github.com/youzan/vant/issues/8018">#8018</a></li><li>Calendar: 修复无法使用 scrollToDate 方法的问题 <a href="https://github.com/youzan/vant/issues/7983">#7983</a></li><li>Empty: 修复 linearGradient id 可能导致冲突的问题 <a href="https://github.com/youzan/vant/issues/8013">#8013</a></li><li>Toast: 修复 closeOnClickOverlay 设置为 true 不生效的问题 <a href="https://github.com/youzan/vant/issues/8044">#8044</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.5" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.4...v3.0.5">v3.0.5</a></h3><p><code>2021-01-24</code></p><p><strong>Feature</strong></p><ul><li>Badge: 新增 offset 属性 <a href="https://github.com/youzan/vant/commit/e0b463630108b5031a02a8afcd0c141a7fdbac9e">e0b463</a></li><li>Calendar: reset 方法支持重置到指定日期 <a href="https://github.com/youzan/vant/issues/7966">#7966</a></li><li>Icons: 新增 wechat 图标, 重命名原 wechat 图标为 wechat-pay <a href="https://github.com/youzan/vant/commit/b3cd8c14aea9e542a9de4ba9999e50c3ecbf3b3c">b3cd8c</a></li><li>ImagePreview: 调用 swipeTo 方法后自动重置缩放状态 <a href="https://github.com/youzan/vant/issues/7972">#7972</a></li><li>ImagePreview: 调整 swipeDuration 的默认值为 300ms <a href="https://github.com/youzan/vant/issues/7970">#7970</a></li><li>ShareSheet: 新增 wechat-moments 朋友圈图标 <a href="https://github.com/youzan/vant/commit/ca66fbca36c5c839e3a294d465b0fc2bd7bf5039">ca66fb</a></li><li>Slider: 新增 readonly 属性 <a href="https://github.com/youzan/vant/commit/4cd991dfec01bd5342cb59b750d0dfa5901b8dc8">4cd991</a></li></ul><p><strong>style</strong></p><ul><li>ShareSheet: 更新 qrcode 图标 <a href="https://github.com/youzan/vant/commit/32a08bb6807d9d38027e03eef376d82b6eab282e">32a08b</a></li><li>TreeSelect: 新增右侧选项点击反馈 <a href="https://github.com/youzan/vant/commit/bada315fb3b0fbdf30c663170c867bbbc274687c">bada31</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Calendar: 修复调用 reset 方法时未重置到默认日期的问题 <a href="https://github.com/youzan/vant/issues/7967">#7967</a></li><li>Dialog: 修复切换 allowHtml 时 message 渲染不正确的问题 <a href="https://github.com/youzan/vant/issues/7968">#7968</a></li><li>ImagePreview: 修复 scale 事件的 index 参数为 undefined 的问题 <a href="https://github.com/youzan/vant/issues/7971">#7971</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.4" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.3...v3.0.4">v3.0.4</a></h3><p><code>2021-01-17</code></p><p><strong>Feature</strong></p><ul><li>Cascader: 新增 field-names 属性，用于自定义字段名 <a href="https://github.com/youzan/vant/issues/7933">#7933</a></li><li>Cell: 支持在设置 is-link 时将 clickable 设置为 false 来禁用点击状态 <a href="https://github.com/youzan/vant/issues/7923">#7923</a></li><li>DropdownItem: 支持传入数组或对象格式的 title-class <a href="https://github.com/youzan/vant/issues/7926">#7926</a></li><li>Popup: 支持传入数组或对象格式的 overlay-class <a href="https://github.com/youzan/vant/issues/7924">#7924</a></li><li>Toast: 新增 overlayClass 选项 <a href="https://github.com/youzan/vant/issues/7925">#7925</a></li><li>Toast: 新增 overlayStyle 选项 <a href="https://github.com/youzan/vant/issues/7898">#7898</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>AddressEdit: 修复无法调用 setAreaCode 方法的问题 <a href="https://github.com/youzan/vant/commit/6a184f8e930fea31035680dd44f40bc007aba4cd">6a184f</a></li><li>Circle: 修复渐变色不生效的问题 <a href="https://github.com/youzan/vant/issues/7909">#7909</a></li><li>NumberKeyboard: 修复 delete、extra-key 插槽不生效的问题 <a href="https://github.com/youzan/vant/commit/52a0e5a8c70dcc07b87140e33318acefcbdd3ef9">52a0e5</a></li><li>Search: 修复控制台存在 update:modelValue warning 的问题 <a href="https://github.com/youzan/vant/issues/7872">#7872</a></li><li>Swipe: 修复页面隐藏时未暂停自动轮播的问题 <a href="https://github.com/youzan/vant/commit/1c428f240cd44d3389510263dd7f03973cfbfa2b">1c428f</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.3" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.2...v3.0.3">v3.0.3</a></h3><p><code>2021-01-10</code></p><p><strong>Feature</strong></p><ul><li>Field: 新增 autocomplate 属性 <a href="https://github.com/youzan/vant/issues/7877">#7877</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Area: 修复无法调用 getValues 方法的问题 <a href="https://github.com/youzan/vant/commit/03c7b46b04d8c543f952cbf8399ec21ca39f979f">03c7b4</a></li><li>ImagePreview: 修复 close-on-popstate 属性不生效的问题 <a href="https://github.com/youzan/vant/issues/7880">#7880</a></li><li>List: 修复更新 error 属性后未触发位置检查的问题 <a href="https://github.com/youzan/vant/commit/b79c32183f6159a663dad42f6189a939061f9f32">b79c32</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.2" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.1...v3.0.2">v3.0.2</a></h3><p><code>2021-01-02</code></p><p><strong>Feature</strong></p><ul><li>Calendar: 新增 scrollToDate 方法 <a href="https://github.com/youzan/vant/issues/7847">#7847</a></li><li>Form: 新增 disabled 属性 <a href="https://github.com/youzan/vant/issues/7830">#7830</a></li><li>Form: 新增 readonly 属性 <a href="https://github.com/youzan/vant/issues/7830">#7830</a></li><li>Loading: 新增 text-color 属性 <a href="https://github.com/youzan/vant/issues/7806">#7806</a></li><li>Picker: 新增 columns-field-names 属性 <a href="https://github.com/youzan/vant/issues/7791">#7791</a></li><li>NumberKeyboard: 新增 random-key-order 属性 <a href="https://github.com/youzan/vant/issues/7841">#7841</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Calendar: 修复 title 插槽不生效的问题 <a href="https://github.com/youzan/vant/issues/7826">#7826</a></li><li>Calendar: 修复动态设置 defaultDate 不生效的问题 <a href="https://github.com/youzan/vant/issues/7815">#7815</a></li><li>Popup: 修复组件销毁时未解除滚动锁定的问题 <a href="https://github.com/youzan/vant/issues/7835">#7835</a></li><li>Stepper: 修复动态设置 modelValue 时未格式化的问题 <a href="https://github.com/youzan/vant/commit/81494dfa13e6ab9a3f12995f481290d27d14ab7a">81494d</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.1" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.0...v3.0.1">v3.0.1</a></h3><p><code>2020-12-27</code></p><p><strong>Feature</strong></p><ul><li>Form: valdiate 方法支持校验多个表单项 <a href="https://github.com/youzan/vant/issues/7810">#7810</a></li><li>Form: resetValidation 方法支持重置多个表单项 <a href="https://github.com/youzan/vant/issues/7811">#7811</a></li><li>Stepper: 新增 show-input 属性，用于控制是否显示输入框 <a href="https://github.com/youzan/vant/issues/7812">#7812</a></li><li>IndexBar: 新增 scrollTo 方法 <a href="https://github.com/youzan/vant/issues/7794">#7794</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Cascader: 修复动画闪烁的问题 <a href="https://github.com/youzan/vant/issues/7802">#7802</a></li><li>CountDown: 修复 SSR 过程中内存泄露的问题 <a href="https://github.com/youzan/vant/issues/7808">#7808</a></li><li>Image: 修复 SSR 时提示 DOM 不匹配的问题 <a href="https://github.com/youzan/vant/issues/7822">#7822</a></li><li>Popup: 修复滚动穿透的问题 <a href="https://github.com/youzan/vant/issues/7738">#7738</a></li><li>Stepper: 修复 change 事件重复触发的问题 <a href="https://github.com/youzan/vant/issues/7820">#7820</a></li><li>Swipe: 修复 SSR 样式不正确的问题 <a href="https://github.com/youzan/vant/issues/7821">#7821</a></li><li>Swipe: 修复在 keepalive 标签内使用时显示不正确的问题 <a href="https://github.com/youzan/vant/issues/7772">#7772</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.0" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.12.0...v3.0.0">v3.0.0</a></h3><p><code>2020-12-23</code></p><p><strong>更新内容</strong></p><p>请参考 <a href="https://github.com/youzan/vant/issues/7797">Vant 3.0 正式发布：全面拥抱 Vue 3</a>。</p></div><div class="van-doc-card"><h3 id="v3.0.0-rc.4" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.12.0-beta.0...v3.0.0-rc.4">v3.0.0-rc.4</a></h3><p><code>2020-12-21</code></p><p><strong>New Component</strong></p><ul><li>新增 Cascader 级联选择组件 <a href="https://github.com/youzan/vant/pull/7771">#7771</a></li></ul><img src="https://b.yzcdn.cn/vant/cascader_1221.png"><p><strong>Feature</strong></p><ul><li>Stepper: 新增 show-input 属性 <a href="https://github.com/youzan/vant/issues/7785">#7785</a></li><li>uploader: 支持在 fileList 的选项中单独配置 <code>imageFit</code> <code>deletable</code> <code>previewSize</code> <code>beforeDelete</code> 字段 <a href="https://github.com/youzan/vant/issues/7731">#7731</a></li></ul><p><strong>Types</strong></p><ul><li>Lazyload: 修复类型定义错误 <a href="https://github.com/youzan/vant/issues/7757">#7757</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-rc.3" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.11.2...v3.0.0-rc.3">v3.0.0-rc.3</a></h3><p><code>2020-12-10</code></p><p><strong>Breaking Change</strong></p><ul><li>Stepper: <code>async-change</code> 属性重命名为 <code>before-change</code>，并调整使用方法 <a href="https://github.com/youzan/vant/commit/e026d2d83f66bb25c66f805cf8085de70d8e009f">e026d2</a></li></ul><p><strong>perf</strong></p><ul><li>Stepper: 优化代码包体积 <a href="https://github.com/youzan/vant/issues/7675">#7675</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Stepper: 修复禁用按钮仍然能点击的问题 <a href="https://github.com/youzan/vant/commit/c277603160a7a17685dc532304b9a0c2444db959">c27760</a></li><li>Tabs: 修复动态设置 active 值无效的问题 <a href="https://github.com/youzan/vant/issues/7717">#7717</a></li><li>包含 <code>v2.11.3</code> 版本的所有改动和修复</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-rc.2" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.0-rc.1...v3.0.0-rc.2">v3.0.0-rc.2</a></h3><p><code>2020-12-04</code></p><p><strong>perf</strong></p><ul><li>优化包体积大小 <a href="https://github.com/youzan/vant/issues/7675">#7675</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Lazyload: 修复未导出 ESModule 的问题 <a href="https://github.com/youzan/vant/issues/7685">#7685</a></li><li>NumberKeyboard: 修复 hide-on-click-outside 属性不生效的问题 <a href="https://github.com/youzan/vant/issues/7668">#7668</a> <a href="https://github.com/youzan/vant/issues/7667">#7667</a></li><li>Uploader: 修复动态修改 status 不生效的问题 <a href="https://github.com/youzan/vant/issues/7681">#7681</a></li><li>Types: 修复 teleport 类型定义错误的问题 <a href="https://github.com/youzan/vant/issues/7687">#7687</a></li><li>包含 <code>v2.11.2</code> 版本的所有改动和修复</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-rc.1" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.11.1...v3.0.0-rc.1">v3.0.0-rc.1</a></h3><p><code>2020-12-01</code></p><p><strong>Breaking Change</strong></p><ul><li>Popover: trigger 属性的默认值调整为 click <a href="https://github.com/youzan/vant/commit/1699d9927240373867f065355136fd27ac04b0e5">1699d9</a></li></ul><p><strong>Feature</strong></p><ul><li>Lazyload: 适配 Vue 3 <a href="https://github.com/youzan/vant/commit/d3ca404f98ffd572035d7048c949e8942b89fc55">d3ca40</a></li><li>包含 <code>v2.11.1</code> 版本的所有改动和修复</li></ul><p><strong>style</strong></p><ul><li>Circle: 新增 @circle-color Less 变量 <a href="https://github.com/youzan/vant/commit/1a6cf64f548bb19c6bd478db67f2e0a1d7c9a145">1a6cf6</a></li><li>Circle: 新增 @circle-layer-color Less 变量 <a href="https://github.com/youzan/vant/commit/65a5ed85537b7a406655bd39f7e4f5332d780a82">65a5ed</a></li><li>Circle: 新增 @circle-size Less 变量 <a href="https://github.com/youzan/vant/commit/b57f7e9d9810ce95047334f0897899ebddaac6f3">b57f7e</a></li><li>IndexBar: 默认高亮颜色调整为红色 <a href="https://github.com/youzan/vant/commit/65b6807a7e6b8a415b5f228c5d55426cd81a1dfa">65b680</a> <a href="https://github.com/youzan/vant/commit/87b0a034958296a720409ded893e708081c35bc5">87b0a0</a></li><li>IndexBar: 右边距调整为 8px <a href="https://github.com/youzan/vant/commit/aad055906484d8b6c38a9f84a768f09522b13a41">aad055</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Image: 修复 lazy-load 属性不生效的问题 <a href="https://github.com/youzan/vant/commit/0ba8187bf540abc0c593c6571554f1b72e8d3e19">0ba818</a></li><li>Lazyload: 修复类型定义错误的问题 <a href="https://github.com/youzan/vant/commit/d0c4c26d758f18ac3f33fc7d4867a98b731b129d">d0c4c2</a></li><li>Popup: 修复 transition-appear 属性不生效的问题 <a href="https://github.com/youzan/vant/commit/dd6930533593a363e25f56717e5c17184ef6e867">dd6930</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.10" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.0-beta.9...v3.0.0-beta.10">v3.0.0-beta.10</a></h3><p><code>2020-11-22</code></p><p><strong>Bug Fixes</strong></p><ul><li>Radio: 修复 Radio 无法操作的问题 <a href="https://github.com/youzan/vant/commit/0f7c9a317cc9a7219ec8431bae0658a5e84d43af">0f7c9a</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.9" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.11.0...v3.0.0-beta.9">v3.0.0-beta.9</a></h3><p><code>2020-11-22</code></p><p><strong>New Component</strong></p><ul><li>新增 <a href="#/zh-CN/popover">Popover 气泡弹出框</a>组件 <a href="https://github.com/youzan/vant/issues/7579">#7579</a></li></ul><p><img src="https://img.yzcdn.cn/vant/component-preview-1122.png" alt=""></p><p><strong>Feature</strong></p><ul><li>Search: 新增 blur 方法 <a href="https://github.com/youzan/vant/commit/d26282e54245a47075fed01baf6304e0d84559e0">d26282</a></li><li>Search: 新增 focus 方法 <a href="https://github.com/youzan/vant/commit/2833bc03f5243370e5a3aeece5b823fc2ebde64c">2833bc</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Checkbox: 修复 bind-group 属性不生效的问题 <a href="https://github.com/youzan/vant/issues/7447">#7447</a></li><li>Badge: 修复无类型定义的问题 <a href="https://github.com/youzan/vant/commit/c487b394efa946f6fae5059f1e1a69be11a25a6e">c487b3</a></li><li>包含 <code>v2.11.0</code> 版本的所有改动和修复</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.8" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.10.14...v3.0.0-beta.8">v3.0.0-beta.8</a></h3><p><code>2020-11-15</code></p><p><strong>Bug Fixes</strong></p><ul><li>ActionSheet: 修复选项禁用或加载时仍能点击的问题 <a href="https://github.com/youzan/vant/commit/996598686955b90bb5cf7589b5ca1589e17e2016">996598</a></li><li>ActionSheet: 修复 callback 选项不生效的问题 <a href="https://github.com/youzan/vant/commit/27b761f534186a6bfa2e8e54cc78ccb51ec48e25">27b761</a></li><li>Calendar: 修复 default-date 为 null 时渲染失败的问题 <a href="https://github.com/youzan/vant/issues/7519">#7519</a></li><li>DatetimePicker: 修复 DOM 上渲染多余属性的问题 <a href="https://github.com/youzan/vant/commit/ed332daf319e2005995f279026a57d4f30a339f6">ed332d</a></li><li>NoticeBar: 修复初始化逻辑执行多次的问题 <a href="https://github.com/youzan/vant/commit/0712d920634e7b70b77f49c71337172bf3ece470">0712d9</a></li><li>Swipe: 修复在 lazy-render 模式下渲染失败的问题 <a href="https://github.com/youzan/vant/commit/e06ba480a9ec02af8659616ff6ceb5155defddad">e06ba4</a></li><li>Swipe: 修复初始化逻辑执行多次的问题 <a href="https://github.com/youzan/vant/commit/c9417341e0adb681db6108cf1383bab77ab90da9">c94173</a></li><li>Tabs: 修复初始化逻辑执行多次的问题 <a href="https://github.com/youzan/vant/commit/599e817cd4f4239b4a93c75f34118731d47891b5">599e81</a></li><li>包含 <code>v2.10.14</code> 版本的所有改动和修复</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.7" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.10.13...v3.0.0-beta.7">v3.0.0-beta.7</a></h3><p><code>2020-11-08</code></p><p><strong>Bug Fixes</strong></p><ul><li>Calendar: 修复动态设置 minDate 和 maxDate 时展示错误的问题 <a href="https://github.com/youzan/vant/issues/7412">#7412</a></li><li>DropdownMenu: 修复无法禁用 closeOnClickOutside 属性的问题 <a href="https://github.com/youzan/vant/issues/7473">#7473</a></li><li>Uploader: 修复在 before-read 返回 true 无效的问题 <a href="https://github.com/youzan/vant/issues/7493">#7493</a></li><li>Uploader: 修复在 delete 事件中无法获取 index 的问题 <a href="https://github.com/youzan/vant/issues/7481">#7481</a></li><li>包含 <code>v2.10.13</code> 版本的所有改动和修复</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.6" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.10.12...v3.0.0-beta.6">v3.0.0-beta.6</a></h3><p><code>2020-11-01</code></p><p><strong>Bug Fixes</strong></p><ul><li>Swipe: 修复开启 lazy-render 且 loop 为 false 时渲染节点不正确的问题 <a href="https://github.com/youzan/vant/issues/7465">#7465</a></li><li>Swipe: 修复开启 lazy-render 时子节点被重复挂载的问题 <a href="https://github.com/youzan/vant/issues/7466">#7466</a></li><li>Tabs: 修复初始动画错误的问题 <a href="https://github.com/youzan/vant/commit/49e87756c70b33e1a56620ebee3c0aa53fb9fc86">49e877</a></li><li>ActionBar: 修复类型定义不存在的问题 <a href="https://github.com/youzan/vant/issues/7440">#7440</a> <a href="https://github.com/youzan/vant/issues/7442">#7442</a></li><li>包含 <code>v2.10.12</code> 版本的所有改动和修复</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.5" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.10.11...v3.0.0-beta.5">v3.0.0-beta.5</a></h3><p><code>2020-10-24</code></p><p><strong>Bug Fixes</strong></p><ul><li>Swipe: 修复动态插入轮播时无法滚动的问题 <a href="https://github.com/youzan/vant/issues/7366">#7366</a></li><li>Toast: 修复 forbidClick 属性不生效的问题 <a href="https://github.com/youzan/vant/issues/7396">#7396</a></li><li>Toast: 修复 duration 变化未生效的问题 <a href="https://github.com/youzan/vant/issues/7394">#7394</a></li><li>包含 <code>v2.10.11</code> 版本的所有改动和修复</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.4" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.10.10...v3.0.0-beta.4">v3.0.0-beta.4</a></h3><p><code>2020-10-18</code></p><p><strong>refactor</strong></p><ul><li>Layout: 默认使用 flex 布局，移除 type 属性 <a href="https://github.com/youzan/vant/commit/f7a1208a18f61eaa9dbec80db1c585f19229cd91">f7a120</a></li></ul><p><strong>style</strong></p><ul><li>Stepper: 布局方式调整为 inline-block <a href="https://github.com/youzan/vant/commit/e9c28212358cd0317442051383b92d23441920c6">e9c282</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>ContactList: 修复 select 事件重复触发的问题 <a href="https://github.com/youzan/vant/commit/1dd4083102272250637d6397bd98355d87d99bf5">1dd408</a></li><li>Search: 修复布局错误的问题 <a href="https://github.com/youzan/vant/commit/9cd48e0e333fc6f0a2f71b568b7e5b5ca2138bae">9cd48e</a></li><li>Image: 修复图片加载错误时仍会渲染图片节点的问题 <a href="https://github.com/youzan/vant/commit/59fb1d4dfcdc99773642a63c62e6b08baa3fac30">59fb1d</a></li><li>Pagination: 修复 change 事件触发时机错误的问题 <a href="https://github.com/youzan/vant/commit/3460351ce396bb418408ddbfad462ddac8ef9477">346035</a></li><li>Toast: 修复展示时会锁定滚动的问题 <a href="https://github.com/youzan/vant/commit/a622caa649baedac7cfe9614ded88e7ec1cd18e1">a622ca</a></li><li>包含 <code>v2.10.10</code> 版本的所有改动和修复</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.3" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.10.9...v3.0.0-beta.3">v3.0.0-beta.3</a></h3><p><code>2020-10-03</code></p><p><strong>breaking changes</strong></p><ul><li>Checkbox: 在 Cell 内部使用时，现在需要手动添加 <code>@click.stop</code> 来阻止事件冒泡 <a href="https://github.com/youzan/vant/issues/7023">#7023</a></li></ul><p><strong>Feature</strong></p><ul><li>新增 Badge 徽标组件 <a href="https://github.com/youzan/vant/issues/6573">#6573</a></li><li>Tab: 增加滑动切换动画 <a href="https://github.com/youzan/vant/issues/1174">#1174</a></li><li>包含 <code>v2.10.9</code> 版本的所有改动和修复</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.2" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.0-beta.1...v3.0.0-beta.2">v3.0.0-beta.2</a></h3><p><code>2020-09-28</code></p><p><strong>Bug Fixes</strong></p><ul><li>修复引入 Vant 时提示 ‘global is not defined’ 的问题 <a href="https://github.com/youzan/vant/commit/7007fcf9eaea239f5e680068d59d8e9f8202ec3b">7007fc</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.1" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.10.8...v3.0.0-beta.1">v3.0.0-beta.1</a></h3><p><code>2020-09-28</code></p><p><strong>breaking changes</strong></p><ul><li>DatetimePicker: change 事件的第一个参数调整为当前选中值 <a href="https://github.com/youzan/vant/commit/05866514dbdac098d8210f8b08e2fbc8d3479ada">058665</a></li></ul><p><strong>refactor</strong></p><p>使用 Composition API 重构以下组件：</p><ul><li>AddressEdit <a href="https://github.com/youzan/vant/commit/749e4ae73b9c07265e81237493b5e7d37afc6255">749e4a</a></li><li>Calendar <a href="https://github.com/youzan/vant/commit/fc50e26416feb1cbc3d07de23cd39bf6ba57eefc">fc50e2</a></li><li>Checkbox <a href="https://github.com/youzan/vant/commit/278ea6a439b65c1bf1ce420ab7619858a739486c">278ea6</a></li><li>ContactEdit <a href="https://github.com/youzan/vant/commit/4f0921cbdffe1f654ce75222027f8b85120ab67b">4f0921</a></li><li>DatetimePicker <a href="https://github.com/youzan/vant/commit/6388423c9609e099565e51423271e333fab38a55">638842</a></li><li>Field <a href="https://github.com/youzan/vant/commit/00dbf2cc50c44d0ac45bc43daeaa91730b1a6e23">00dbf2</a></li><li>Form <a href="https://github.com/youzan/vant/commit/92aac941fc25e028a7631be301ed895edff53487">92aac9</a></li><li>Radio <a href="https://github.com/youzan/vant/commit/aafbcfcf04e7c0a4b4f5da83291e9b158f2503c3">aafbcf</a></li><li>Tabs <a href="https://github.com/youzan/vant/commit/882e3ef5e787e587909bde1064f5dabe3d66ad72">882e3e</a></li></ul><p><strong>Feature</strong></p><ul><li>Locale: 新增德语语言包 <a href="https://github.com/youzan/vant/issues/7245">#7245</a></li><li>Pagination: 新增多个插槽 <a href="https://github.com/youzan/vant/issues/7222">#7222</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Picker: 修复 setIndex 方法无效的问题 <a href="https://github.com/youzan/vant/commit/d2a54279766acca3981403c4fb9eb34d3d586643">d2a542</a></li><li>Dialog: 修复最小高度错误的问题 <a href="https://github.com/youzan/vant/commit/bf1f0f57eb16e2308b388c4e2ccab46c65f76196">bf1f0f</a></li><li>包含 <code>v2.10.8</code> 版本的所有改动和修复</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-beta.0" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.10.7...v3.0.0-beta.0">v3.0.0-beta.0</a></h3><p><code>2020-09-18</code></p><p><strong>breaking changes</strong></p><ul><li>Dialog: allow-html 属性的默认值调整为 false <a href="https://github.com/youzan/vant/commit/02c7a75ee3d7725157b744bb710bd879f01a0065">02c7a7</a></li><li>Picker: allow-html 属性的默认值调整为 false <a href="https://github.com/youzan/vant/commit/02c7a75ee3d7725157b744bb710bd879f01a0065">02c7a7</a></li></ul><p><strong>refactor</strong></p><p>使用 Composition API 重构以下组件：</p><ul><li>ImagePreview <a href="https://github.com/youzan/vant/commit/6ab2b3bf1f53dabf272ae3a6d663221236eab47c">6ab2b3</a></li><li>Picker <a href="https://github.com/youzan/vant/commit/85d0d423eb33567d74d029991509589237214cf8">85d0d4</a></li><li>Popup <a href="https://github.com/youzan/vant/commit/9465653f429d216bf0f34cb9cf26cc1f51b3e358">946565</a></li><li>Swipe <a href="https://github.com/youzan/vant/commit/39c68c993a34f8cfb0de056f0da7edcd01bd6d4d">39c68c</a></li><li>Uploader <a href="https://github.com/youzan/vant/commit/595b062c34e34e48b5f8d730dc6b13221fcad841">595b06</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>AddressEdit: 修复 emits 未声明导致 warning 的问题 <a href="https://github.com/youzan/vant/commit/1e6a120b2e48f7262062729260d362c96355eca6">1e6a12</a></li><li>AddressEdit: 修复点击省市区弹窗的蒙层时无法关闭的问题 <a href="https://github.com/youzan/vant/commit/02e89a73c57af1e59429ab320c2a13395abc0520">02e89a</a></li><li>Field: 修复在 iOS 上中文输入过程中触发 input 事件的问题 <a href="https://github.com/youzan/vant/issues/7035">#7035</a></li><li>包含 <code>v2.10.7</code> 版本的所有改动和修复</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-alpha.5" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.10.6...v3.0.0-alpha.5">v3.0.0-alpha.5</a></h3><p><code>2020-09-13</code></p><p><strong>breaking changes</strong></p><ul><li>Button: native-type 属性的默认值调整为 button <a href="https://github.com/youzan/vant/commit/df8059eb015f2804433a7306c208a5909a4d46ac">df8059</a></li></ul><p><strong>refactor</strong></p><p>使用 Composition API 重构以下组件：</p><ul><li>DatetimePicker <a href="https://github.com/youzan/vant/commit/60e08767b313e90b13c6a4a3246a113367ed09a5">60e087</a></li><li>DropdownItem <a href="https://github.com/youzan/vant/commit/cd5f5bb65544676279e486790761c38a2a9f0fc1">cd5f5b</a></li><li>Grid <a href="https://github.com/youzan/vant/commit/38740b6c1c783d49a2201b24ba51121576e4c643">38740b</a></li><li>IndexBar <a href="https://github.com/youzan/vant/commit/f94c8ccbb93f4783814832a9363d663fb4986f10">f94c8c</a></li><li>NumberKeyboard <a href="https://github.com/youzan/vant/commit/14c1d4ea771cd9f01cb282493e57303ced897fa9">14c1d4</a></li><li>PullRefresh <a href="https://github.com/youzan/vant/commit/9f632f151e3028adfd376f8ad166bf9d8af356fc">9f632f</a></li><li>Stepper <a href="https://github.com/youzan/vant/commit/a7c28548fcefe48a2ffa95bb0423dee0a48f8e16">a7c285</a></li><li>SwipeCell <a href="https://github.com/youzan/vant/commit/b17c67ab53652a361185934cb4119eca23622d9a">b17c67</a></li></ul><p><strong>Feature</strong></p><ul><li>Button: 新增 icon-position 属性 <a href="https://github.com/youzan/vant/issues/7174">#7174</a></li><li>slider: 新增 range 属性，支持范围选择 <a href="https://github.com/youzan/vant/issues/7175">#7175</a></li><li>TabbarItem: 新增 @tabbar-item-active-background-color 变量 <a href="https://github.com/youzan/vant/issues/7162">#7162</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Sticky: 修复组件销毁时报错的问题 <a href="https://github.com/youzan/vant/issues/7169">#7169</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-alpha.4" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.10.5...v3.0.0-alpha.4">v3.0.0-alpha.4</a></h3><p><code>2020-09-06</code></p><p><strong>breaking changes</strong></p><ul><li>Dialog: <code>before-close</code> 属性用法调整，不再传入 done 函数，而是通过返回 Promise 来控制</li><li>SwipeCell: <code>before-close</code> 属性不再传入组件实例</li><li>ImagePreview: 移除 <code>async-close</code> 属性，新增 <code>before-close</code> 属性</li></ul><p><strong>refactor</strong></p><p>使用 Composition API 重构以下组件：</p><ul><li>Coupon <a href="https://github.com/youzan/vant/commit/ec5a759f684531e7c5ab751d1d746d0e65d26279">ec5a75</a></li><li>Dialog <a href="https://github.com/youzan/vant/commit/2b8284a227b6d483685cfa3a70e01774491a2ff9">2b8284</a></li><li>NumberKeyboard <a href="https://github.com/youzan/vant/commit/f735b24a4b71176ce5c214af69b7afc99deab85f">f735b2</a></li><li>Pagination <a href="https://github.com/youzan/vant/commit/1cd918395805f57a60f2cce1f5174b480cfd70f2">1cd918</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Tag: 修复 color 属性不生效的问题 <a href="https://github.com/youzan/vant/commit/4b6da2aab6acae95977579094bc5707345f3d3e9">4b6da2</a></li><li>修复在 TSX 中使用组件时提示类型错误的问题 <a href="https://github.com/youzan/vant/issues/7076">#7076</a></li><li>修复全量引入组件时提示类型错误的问题 <a href="https://github.com/youzan/vant/issues/7056">#7056</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-alpha.3" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.0-alpha.2...v3.0.0-alpha.3">v3.0.0-alpha.3</a></h3><p><code>2020-09-01</code></p><p><strong>Feature</strong></p><ul><li>ActionSheet: 新增 description 插槽 <a href="https://github.com/youzan/vant/issues/7068">#7068</a></li><li>Toast: 使用 composition api 重构 <a href="https://github.com/youzan/vant/commit/44aaa471879ac79b7baee0e07c92d7a71ff7f530">44aaa4</a></li></ul><p><strong>Types</strong></p><ul><li>修复使用 app.use 注册组件时提示类型错误的问题 <a href="https://github.com/youzan/vant/issues/7056">#7056</a></li><li>修复 $toast、$dialog 类型不存在的问题 <a href="https://github.com/youzan/vant/commit/0acbc6ec21588686b41f6387d2fdf642ae2c024e">0acbc6</a></li></ul><p><strong>Bug Fixes</strong></p><ul><li>Dialog: 修复 Dialog.close 不生效的问题 <a href="https://github.com/youzan/vant/commit/476e16ff2d22a5da3ab8b57a6c7789610b008e22">476e16</a></li><li>Toast: 修复设置 toast.message 不生效的问题 <a href="https://github.com/youzan/vant/commit/dac7feb919cfc4c3c1b8dc544431eb5547414604">dac7fe</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-alpha.2" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v3.0.0-alpha.1...v3.0.0-alpha.2">v3.0.0-alpha.2</a></h3><p><code>2020-08-28</code></p><p><strong>Bug Fixes</strong></p><ul><li>修复使用 <code>yarn add vant@next</code> 安装失败的问题</li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-alpha.1" tabindex="-1"><a href="https://github.com/youzan/vant/compare/v2.10.3...v3.0.0-alpha.1">v3.0.0-alpha.1</a></h3><p><code>2020-08-28</code></p><p><strong>refactor</strong></p><p>使用 Composition API 重构以下组件：</p><ul><li>ActionBar</li><li>AddressList</li><li>Area</li><li>Badge</li><li>Button</li><li>Circle</li><li>Col</li><li>Collapse</li><li>CountDown</li><li>Image</li><li>Row</li><li>List</li><li>Loading</li><li>NavBar</li><li>NoticeBar</li><li>Progress</li><li>Rate</li><li>Sidebar</li><li>Slider</li><li>Steps</li><li>Sticky</li><li>Tabbar</li></ul><p><strong>Bug Fixes</strong></p><ul><li>Rate: 修复控制台报 emit warning 提示的问题 <a href="https://github.com/youzan/vant/commit/c32fba0f1e7afa657c69c233d644c1994963a638">c32fba</a></li><li>Button: 修复 click 事件参数丢失的问题 <a href="https://github.com/youzan/vant/commit/cea2724321daf693a1dd36dd6923c4d28585895a">cea272</a></li><li>CellGroup: 修复 attrs 继承错误的问题 <a href="https://github.com/youzan/vant/commit/8f978addd49b7d2a5e6fcce0c952fcb05145ad1d">8f978a</a></li><li>Dialog: 修复部分弹窗相关属性不生效的问题 <a href="https://github.com/youzan/vant/commit/af94c92614b78e999e5377208e2c3c3672480210">af94c9</a></li><li>Image: 修复 loading 图标和 error 图标不展示的问题 <a href="https://github.com/youzan/vant/commit/c720eea83170b36e1b2f4eb8bdaff400e88bf714">c720ee</a></li></ul></div><div class="van-doc-card"><h3 id="v3.0.0-alpha.0" tabindex="-1">v3.0.0-alpha.0</h3><p><code>2020-08-22</code></p><p><strong>主要改动</strong></p><ul><li>完成 Vue 3 适配</li><li>调整部分组件的 v-model 和 prop.sync 用法，以适配 v-model 语法变更</li><li>调整部分组件的 prop 和 event 用法</li><li>重命名所有组件的 info 属性为 badge</li><li>重命名所有组件的 get-container 属性为 teleport</li><li>废弃 SwitchCell 组件</li><li>废弃个别 API</li></ul><p><strong>已知问题</strong></p><ul><li>Lazyload、Panel 和 Sku 组件暂未完成 Vue 3 适配</li></ul><blockquote><p>详细改动请参考 <a href="https://youzan.github.io/vant/v3/#/zh-CN/migrate-from-v2">从 v2 升级</a>。</p></blockquote></div>',53)],u={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",h,j)))},g={class:"van-doc-markdown-body"},m=[t('<h1>贡献指南</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>感谢你使用 Vant。</p><p>以下是关于向 Vant 提交反馈或代码的指南。在向 Vant 提交 issue 或者 PR 之前，请先花几分钟时间阅读以下文字。</p></div><div class="van-doc-card"><h3 id="issue-gui-fan" tabindex="-1">Issue 规范</h3><ul><li>遇到问题时，请先确认这个问题是否已经在 issue 中有记录或者已被修复</li><li>提 issue 时，请用简短的语言描述遇到的问题，并添加出现问题时的环境和复现步骤</li></ul></div><h2 id="can-yu-kai-fa" tabindex="-1">参与开发</h2><div class="van-doc-card"><h3 id="ben-di-kai-fa" tabindex="-1">本地开发</h3><p>按照下面的步骤操作，即可在本地开发 Vant 组件。</p><pre><code class="language-bash"><span class="hljs-comment"># 克隆仓库</span>\n<span class="hljs-comment"># 默认为 dev 分支，包含 Vant 3 的代码</span>\n<span class="hljs-comment"># 如果需要在 Vant 2 上进行更改，请基于 2.x 分支进行开发</span>\ngit <span class="hljs-built_in">clone</span> git@github.com:youzan/vant.git\n\n<span class="hljs-comment"># 安装依赖</span>\n<span class="hljs-built_in">cd</span> vant &amp;&amp; yarn\n\n<span class="hljs-comment"># 进入开发模式，浏览器访问 http://localhost:8080</span>\nnpm run dev\n</code></pre></div><div class="van-doc-card"><h3 id="mu-lu-jie-gou" tabindex="-1">目录结构</h3><p>项目的主要目录结构如下所示：</p><pre><code>vant\n├─ docs            # 文档\n├─ packages        # 基础包\n├─ src             # 组件源代码\n├─ test            # 单测工具类\n└─ vant.config.js  # 文档网站配置\n</code></pre><p>组件代码位于 src 目录下，每个组件一个独立的文件夹。</p></div><div class="van-doc-card"><h3 id="zu-jian-mu-lu-jie-gou" tabindex="-1">组件目录结构</h3><p>添加新组件时，请按照下面的目录结构组织文件，并在 <code>vant.config.js</code> 中配置组件名称。</p><pre><code>src\n└─ button\n   ├─ demo             # 示例代码\n   ├─ test             # 单元测试\n   ├─ Component.ts     # 组件\n   ├─ index.ts         # 组件入口\n   ├─ index.less       # 样式\n   ├─ var.less         # 样式变量\n   ├─ README.md        # 英文文档\n   └─ README.zh-CN.md  # 中文文档\n</code></pre></div><h2 id="ti-jiao-pr" tabindex="-1">提交 PR</h2><div class="van-doc-card"><h3 id="pull-request-gui-fan" tabindex="-1">Pull Request 规范</h3><p>如果你是第一次在 GitHub 上提 Pull Request ，可以阅读下面这两篇文章来学习：</p><ul><li><a href="https://segmentfault.com/a/1190000000736629">如何优雅地在 GitHub 上贡献代码</a></li><li><a href="https://github.com/firstcontributions/first-contributions/blob/master/translations/README.chs.md">第一次参与开源</a></li></ul><h4 id="gui-fan" tabindex="-1">规范</h4><ul><li>如果遇到问题，建议保持你的 PR 足够小。保证一个 PR 只解决一个问题或只添加一个功能</li><li>当新增组件或者修改原有组件时，记得增加或者修改测试代码，保证代码的稳定</li><li>在 PR 中请添加合适的描述，并关联相关的 Issue</li></ul></div><div class="van-doc-card"><h3 id="pull-request-liu-cheng" tabindex="-1">Pull Request 流程</h3><ol><li>fork 主仓库，如果已经 fork 过，请同步主仓库的最新代码</li><li>基于 fork 后仓库的 dev 分支新建一个分支，比如 <code>feature/button_color</code></li><li>在新分支上进行开发，开发完成后，提 Pull Request 到主仓库的 dev 分支</li><li>Pull Request 会在 Review 通过后被合并到主仓库</li><li>等待 Vant 发布版本，一般是每周一次</li></ol></div><div class="van-doc-card"><h3 id="tong-bu-zui-xin-dai-ma" tabindex="-1">同步最新代码</h3><p>提 Pull Request 前，请依照下面的流程同步主仓库的最新代码：</p><pre><code class="language-bash"><span class="hljs-comment"># 添加主仓库到 remote，作为 fork 后仓库的上游仓库</span>\ngit remote add upstream https://github.com/youzan/vant.git\n\n<span class="hljs-comment"># 拉取主仓库最新代码</span>\ngit fetch upstream\n\n<span class="hljs-comment"># 切换至 dev 分支</span>\ngit checkout dev\n\n<span class="hljs-comment"># 合并主仓库代码</span>\ngit merge upstream/dev\n</code></pre></div>',11)],v={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",g,m)))};const b={class:"van-doc-markdown-body"},f=[t('<h1>Design Resource</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>You can download Vant’s design resources here.</p></div><h2 id="resources" tabindex="-1">Resources</h2><div class="van-doc-card"><h3 id="components-sketch" tabindex="-1">Components (Sketch)</h3><p>Contains color specifications, font specifications, and component design specifications.</p><h4 id="colors" tabindex="-1">Colors</h4><img src="https://img.yzcdn.cn/vant/color_202009101415.png" style="width:80%;box-shadow:0 1px 2px rgba(0,0,0,.2);"><h4 id="fonts" tabindex="-1">Fonts</h4><img src="https://img.yzcdn.cn/vant/words_202009101415.png" style="width:80%;box-shadow:0 1px 2px rgba(0,0,0,.2);"><h4 id="components" tabindex="-1">Components</h4><img src="https://img.yzcdn.cn/vant/tab_202009101415.png" style="width:80%;box-shadow:0 1px 2px rgba(0,0,0,.2);"><p><a class="design-download" href="https://github.com/youzan/vant/blob/dev/docs/assets/design.sketch?raw=true">Download</a></p></div><div class="van-doc-card"><h3 id="icons-sketch" tabindex="-1">Icons (Sketch)</h3><p>Contains icon library resources.</p><img src="https://img.yzcdn.cn/vant/design-icons-0321.png" style="width:80%;box-shadow:0 1px 2px rgba(0,0,0,.2);"><p><a class="design-download" href="https://github.com/youzan/vant/blob/dev/packages/vant-icons/assets/icons.sketch?raw=true">Download</a></p></div><div class="van-doc-card"><h3 id="axure" tabindex="-1">Axure</h3><img src="https://img.yzcdn.cn/vant/vant-axure-0905.png" style="width:80%;box-shadow:0 1px 2px rgba(0,0,0,.2);"><p><a class="design-download" href="https://b.yzcdn.cn/vant/vant-axure-20200905.zip">Download</a></p></div>',6)],y={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",b,f)))};const w={class:"van-doc-markdown-body"},q=t('<h1>设计资源</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>Vant 是基于有赞 <a href="https://design.youzan.com/">Zan Design System</a> 视觉规范实现的组件库，在这里可以下载 Vant 的设计资源。</p></div><h2 id="she-ji-gao" tabindex="-1">设计稿</h2><div class="van-doc-card"><h3 id="zu-jian-she-ji-gao-sketch" tabindex="-1">组件设计稿（Sketch）</h3><p>包含 Sketch 格式的色彩规范、字体规范、组件设计规范。</p><h4 id="se-cai-gui-fan" tabindex="-1">色彩规范</h4><img src="https://img.yzcdn.cn/vant/color_202009101415.png" style="width:80%;box-shadow:0 1px 2px rgba(0,0,0,.2);"><h4 id="zi-ti-gui-fan" tabindex="-1">字体规范</h4><img src="https://img.yzcdn.cn/vant/words_202009101415.png" style="width:80%;box-shadow:0 1px 2px rgba(0,0,0,.2);"><h4 id="zu-jian-gui-fan" tabindex="-1">组件规范</h4><img src="https://img.yzcdn.cn/vant/tab_202009101415.png" style="width:80%;box-shadow:0 1px 2px rgba(0,0,0,.2);"><p><a class="design-download" href="https://github.com/youzan/vant/blob/dev/docs/assets/design.sketch?raw=true">下载</a></p></div><div class="van-doc-card"><h3 id="tu-biao-she-ji-gao-sketch" tabindex="-1">图标设计稿（Sketch）</h3><p>包含 Sketch 格式的图标库资源。</p><img src="https://img.yzcdn.cn/vant/design-icons-0321.png" style="width:80%;box-shadow:0 1px 2px rgba(0,0,0,.2);"><p><a class="design-download" href="https://github.com/youzan/vant/blob/dev/packages/vant-icons/assets/icons.sketch?raw=true">下载</a></p><h4 id="zai-xian-zi-yuan" tabindex="-1">在线资源</h4><p>Vant 的所有图标都托管在 <strong>iconfont.cn</strong> 上，点此查看：<a href="https://www.iconfont.cn/collections/detail?spm=a313x.7781069.1998910419.d9df05512&amp;cid=31945">Vant 图标库</a>。</p></div><div class="van-doc-card"><h3 id="axure-yuan-jian-ku" tabindex="-1">Axure 元件库</h3><p>Axure 元件库，由社区的 <a href="https://github.com/axure-tczy">@axure-tczy</a> 同学贡献。</p><img src="https://img.yzcdn.cn/vant/vant-axure-0905.png" style="width:80%;box-shadow:0 1px 2px rgba(0,0,0,.2);"><p><a class="design-download" href="https://b.yzcdn.cn/vant/vant-axure-20200905.zip">下载</a></p></div>',6),x=[q],k={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",w,x)))},z={class:"van-doc-markdown-body"},_=t('<div class="van-doc-card"><div class="van-doc-intro"><img class="van-doc-intro__logo" style="width:120px;height:120px;" src="https://img.yzcdn.cn/vant/logo.png"><h2 style="margin:0;font-size:36px;line-height:60px;">Vant</h2><p>Mobile UI Components built on Vue</p></div></div><div class="van-doc-card"><h3 id="features" tabindex="-1">Features</h3><ul><li>65+ Reusable components</li><li>1kb Component average size (min+gzip)</li><li>90%+ Unit test coverage</li><li>Extensive documentation and demos</li><li>Support Vue 2 &amp; Vue 3</li><li>Support Tree Shaking</li><li>Support Custom Theme</li><li>Support i18n</li><li>Support TS</li><li>Support SSR</li></ul></div><div class="van-doc-card"><h3 id="quickstart" tabindex="-1">Quickstart</h3><p>See in <a href="#/en-US/quickstart">Quickstart</a>.</p></div><div class="van-doc-card"><h3 id="contribution" tabindex="-1">Contribution</h3><p>Please make sure to read the <a href="https://github.com/youzan/vant/blob/dev/.github/CONTRIBUTING.md">Contributing Guide</a> before making a pull request.</p></div><div class="van-doc-card"><h3 id="browser-support" tabindex="-1">Browser Support</h3><p>Vant 2 supports modern browsers and Android &gt;= 4.0、iOS &gt;= 8.0.</p><p>Vant 3 supports modern browsers and Chrome &gt;= 51、iOS &gt;= 10.0 (same as Vue 3).</p></div><div class="van-doc-card"><h3 id="official-ecosystem" tabindex="-1">Official Ecosystem</h3><table><thead><tr><th>Project</th><th>Description</th></tr></thead><tbody><tr><td><a href="https://github.com/youzan/vant-weapp">vant-weapp</a></td><td>WeChat MiniProgram UI</td></tr><tr><td><a href="https://github.com/youzan/vant-demo">vant-demo</a></td><td>Collection of Vant demos</td></tr><tr><td><a href="https://github.com/youzan/vant/tree/dev/packages/vant-cli">vant-cli</a></td><td>Scaffold for UI library</td></tr><tr><td><a href="https://github.com/youzan/vant/tree/dev/packages/vant-icons">vant-icons</a></td><td>Vant icons</td></tr><tr><td><a href="https://github.com/youzan/vant/tree/dev/packages/vant-touch-emulator">vant-touch-emulator</a></td><td>Using vant in desktop browsers</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="community-ecosystem" tabindex="-1">Community Ecosystem</h3><table><thead><tr><th>Project</th><th>Description</th></tr></thead><tbody><tr><td><a href="https://github.com/3lang3/react-vant">3lang3/react-vant</a></td><td>React mobile UI Components base on Vant</td></tr><tr><td><a href="https://github.com/mxdi9i7/vant-react">mxdi9i7/vant-react</a></td><td>Mobile UI Components built on React and TS, inspired by Vant</td></tr><tr><td><a href="https://github.com/ant-move/Vant-Aliapp">vant-aliapp</a></td><td>Alipay MiniProgram UI</td></tr><tr><td><a href="https://gitee.com/mallfoundry/taroify">taroify</a></td><td>Vant Taro</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="links" tabindex="-1">Links</h3><ul><li><a href="https://github.com/youzan/vant/issues">Feedback</a></li><li><a href="#/en-US/changelog">Changelog</a></li><li><a href="https://gitter.im/vant-contrib/discuss?utm_source=share-link&amp;utm_medium=link&amp;utm_campaign=share-link">Gitter</a></li></ul></div><div class="van-doc-card"><h3 id="license" tabindex="-1">LICENSE</h3><p><a href="https://zh.wikipedia.org/wiki/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89">MIT</a></p></div>',9),C=[_],S={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",z,C)))},T={class:"van-doc-markdown-body"},I=t('<div class="van-doc-card"><div class="van-doc-intro"><img class="van-doc-intro__logo" style="width:120px;height:120px;" src="https://img.yzcdn.cn/vant/logo.png"><h2 style="margin:0;font-size:36px;line-height:60px;">Vant</h2><p>轻量、可靠的移动端 Vue 组件库</p></div></div><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>Vant 是<strong>有赞前端团队</strong>开源的移动端组件库，于 2017 年开源，已持续维护 4 年时间。Vant 对内承载了有赞所有核心业务，对外服务十多万开发者，是业界主流的移动端组件库之一。 <br><br></p><p>目前 Vant 官方提供了 <a href="https://vant-contrib.gitee.io/vant">Vue 2 版本</a>、<a href="https://vant-contrib.gitee.io/vant/v3">Vue 3 版本</a>和<a href="http://vant-contrib.gitee.io/vant-weapp">微信小程序版本</a>，并由社区团队维护 <a href="https://github.com/mxdi9i7/vant-react">React 版本</a>和<a href="https://github.com/ant-move/Vant-Aliapp">支付宝小程序版本</a>。</p></div><div class="van-doc-card"><h3 id="ban-ben-ti-shi" tabindex="-1">版本提示</h3><p>你当前浏览的是 <strong>Vant 3.x 版本</strong> 的文档，适用于 Vue 3 开发。如果你在使用 Vue 2，请浏览 <a href="https://vant-contrib.gitee.io/vant">Vant 2 文档</a>。</p></div><div class="van-doc-card"><h3 id="te-xing" tabindex="-1">特性</h3><ul><li>提供 60 多个高质量组件，覆盖移动端各类场景</li><li>性能极佳，组件平均体积不到 1kb（min+gzip）</li><li>单元测试覆盖率 90%+，提供稳定性保障</li><li>完善的中英文文档和示例</li><li>支持 Vue 2 &amp; Vue 3</li><li>支持按需引入</li><li>支持主题定制</li><li>支持国际化</li><li>支持 TypeScript</li><li>支持 SSR</li></ul></div><div class="van-doc-card"><h3 id="kuai-su-shang-shou" tabindex="-1">快速上手</h3><p>请阅读<a href="#/zh-CN/quickstart">快速上手</a>章节，通过该章节你可以了解到 Vant 的安装方法和基本使用姿势。</p></div><div class="van-doc-card"><h3 id="gong-xian-dai-ma" tabindex="-1">贡献代码</h3><p>贡献代码请阅读我们的<a href="#/zh-CN/contribution">贡献指南</a>。</p><p>使用过程中发现任何问题都可以提 <a href="https://github.com/youzan/vant/issues">Issue</a> 给我们，当然，我们也非常欢迎你给我们发 <a href="https://github.com/youzan/vant/pulls">PR</a>。</p></div><div class="van-doc-card"><h3 id="liu-lan-qi-zhi-chi" tabindex="-1">浏览器支持</h3><p>Vant 2 支持现代浏览器以及 Android &gt;= 4.0、iOS &gt;= 8.0。</p><p>Vant 3 支持现代浏览器以及 Chrome &gt;= 51、iOS &gt;= 10.0（与 Vue 3 一致）。</p></div><div class="van-doc-card"><h3 id="guan-fang-sheng-tai" tabindex="-1">官方生态</h3><p>由 Vant 官方团队维护的项目如下：</p><table><thead><tr><th>项目</th><th>描述</th></tr></thead><tbody><tr><td><a href="https://github.com/youzan/vant-weapp">vant-weapp</a></td><td>Vant 微信小程序版</td></tr><tr><td><a href="https://github.com/youzan/vant-demo">vant-demo</a></td><td>Vant 官方示例合集</td></tr><tr><td><a href="https://github.com/youzan/vant/tree/dev/packages/vant-cli">vant-cli</a></td><td>开箱即用的组件库搭建工具</td></tr><tr><td><a href="https://github.com/youzan/vant/tree/dev/packages/vant-icons">vant-icons</a></td><td>Vant 图标库</td></tr><tr><td><a href="https://github.com/youzan/vant/tree/dev/packages/vant-touch-emulator">vant-touch-emulator</a></td><td>在桌面端使用 Vant 的辅助库</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="she-qu-sheng-tai" tabindex="-1">社区生态</h3><p>由社区维护的项目如下，欢迎补充：</p><table><thead><tr><th>项目</th><th>描述</th></tr></thead><tbody><tr><td><a href="https://github.com/3lang3/react-vant">3lang3/react-vant</a></td><td>参照 Vant 打造的 React 移动端组件库</td></tr><tr><td><a href="https://github.com/mxdi9i7/vant-react">mxdi9i7/vant-react</a></td><td>基于 React 和 TS 构建的移动端组件库</td></tr><tr><td><a href="https://github.com/ant-move/Vant-Aliapp">vant-aliapp</a></td><td>Vant 支付宝小程序版</td></tr><tr><td><a href="https://gitee.com/mallfoundry/taroify">taroify</a></td><td>Vant Taro 版</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lian-jie" tabindex="-1">链接</h3><ul><li><a href="https://github.com/youzan/vant/issues">意见反馈</a></li><li><a href="#/zh-CN/changelog">更新日志</a></li><li><a href="https://gitee.com/vant-contrib/vant">码云镜像</a></li><li><a href="https://gitter.im/vant-contrib/discuss?utm_source=share-link&amp;utm_medium=link&amp;utm_campaign=share-link">Gitter 讨论组</a></li></ul></div><div class="van-doc-card"><h3 id="kai-yuan-xie-yi" tabindex="-1">开源协议</h3><p>本项目基于 <a href="https://zh.wikipedia.org/wiki/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89">MIT</a> 协议，请自由地享受和参与开源</p></div>',11),P=[I],D={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",T,P)))},A={class:"van-doc-markdown-body"},N=t('<h1>从 v2 升级</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>本文档提供了从 Vant 2 到 Vant 3 的升级指南。</p></div><div class="van-doc-card"><h3 id="sheng-ji-bu-zou" tabindex="-1">升级步骤</h3><h4 id="1.-sheng-ji-vue-3" tabindex="-1">1. 升级 Vue 3</h4><p>Vant 3 是基于 Vue 3 开发的，在使用 Vant 3 前，请将项目中的 Vue 升级到 3.0 以上版本。</p><h4 id="2.-chu-li-bu-jian-rong-geng-xin" tabindex="-1">2. 处理不兼容更新</h4><p>Vant 2 到 Vant 3 存在一些不兼容更新，请仔细阅读下方的不兼容更新内容，并依次处理。</p></div><h2 id="bu-jian-rong-geng-xin" tabindex="-1">不兼容更新</h2><div class="van-doc-card"><h3 id="zu-jian-ming-ming-diao-zheng" tabindex="-1">组件命名调整</h3><p>GoodsAction 商品导航组件重命名为 <strong>ActionBar 行动栏</strong>。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- Vant 2 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-goods-action</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-goods-action-icon</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;图标&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-goods-action-button</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;按钮&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-goods-action</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Vant 3 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;图标&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-button</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;按钮&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-action-bar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="fei-qi-zu-jian" tabindex="-1">废弃组件</h3><p>移除 SwitchCell 组件，可以直接使用 Cell 和 Switch 组件代替。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- Vant 2 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-switch-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Vant 3 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">center</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="dan-chuang-xing-zu-jian-v-model-bian-geng" tabindex="-1">弹窗型组件 v-model 变更</h3><p>为了适配 Vue 3 的 v-model API 用法变更，所有提供 v-model 属性的组件在用法上有一定调整。以下弹窗类组件的 <code>v-model</code> 被重命名为 <code>v-model:show</code>：</p><ul><li>ActionSheet</li><li>Calendar</li><li>Dialog</li><li>ImagePreview</li><li>Notify</li><li>Popover</li><li>Popup</li><li>ShareSheet</li></ul><pre><code class="language-html"><span class="hljs-comment">&lt;!-- Vant 2 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;show&quot;</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Vant 3 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="biao-dan-xing-zu-jian-v-model-nei-bu-zhi-bian-geng" tabindex="-1">表单型组件 v-model 内部值变更</h3><p>以下表单型组件 v-model 对应的 prop 重命名为 <code>modelValue</code>，event 重命名为 <code>update:modelValue</code>：</p><ul><li>Checkbox</li><li>CheckboxGroup</li><li>DatetimePicker</li><li>DropdownItem</li><li>Field</li><li>Radio</li><li>RadioGroup</li><li>Search</li><li>Stepper</li><li>Switch</li><li>Sidebar</li><li>Uploader</li></ul><pre><code class="language-html"><span class="hljs-comment">&lt;!-- Vant 2 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span> @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;onInput&quot;</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Vant 3 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">:model-value</span>=<span class="hljs-string">&quot;value&quot;</span> @<span class="hljs-attr">update:model-value</span>=<span class="hljs-string">&quot;onInput&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="qi-ta-v-model-diao-zheng" tabindex="-1">其他 v-model 调整</h3><ul><li>Circle: <code>v-model</code> 重命名为 <code>v-model:currentRate</code></li><li>CouponList: <code>v-model</code> 重命名为 <code>v-model:code</code></li><li>List: <code>v-model</code> 重命名为 <code>v-model:loading</code>，<code>error.sync</code> 重命名为 <code>v-model:error</code></li><li>Tabs: <code>v-model</code> 重命名为 <code>v-model:active</code></li><li>TreeSelect: <code>active-id.sync</code> 重命名为 <code>v-model:active-id</code></li><li>TreeSelect: <code>main-active-index.sync</code> 重命名为 <code>v-model:main-active-index</code></li></ul></div><div class="van-doc-card"><h3 id="hui-biao-shu-xing-ming-ming-diao-zheng" tabindex="-1">徽标属性命名调整</h3><p>在之前的版本中，我们通过 info 属性来展示图标右上角的徽标信息，为了更符合社区的命名习惯，我们将这个属性重命名为 badge，影响以下组件：</p><ul><li>Tab</li><li>Icon</li><li>GridItem</li><li>TreeSelect</li><li>TabbarItem</li><li>SidebarItem</li><li>GoodsActionIcon</li></ul><p>同时内部使用的 Info 组件也会重命名为 Badge。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- Vant 2 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">info</span>=<span class="hljs-string">&quot;5&quot;</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Vant 3 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;5&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="chong-ming-ming-get-container-shu-xing" tabindex="-1">重命名 get-container 属性</h3><p>Vue 3.0 中增加了 <code>Teleport</code> 组件，提供将组件渲染到任意 DOM 位置的能力，Vant 2 也通过 <code>get-container</code> 属性提供了类似的能力。为了与官方的 API 保持一致，Vant 中的 <code>get-container</code> 属性将重命名为 <code>teleport</code>。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- Vant 2 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">get-container</span>=<span class="hljs-string">&quot;body&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">:get-container</span>=<span class="hljs-string">&quot;getContainer&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-title function_">getContainer</span>(<span class="hljs-params"></span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#39;#container&#39;</span>);\n      },\n    },\n  };\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Vant 3 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">teleport</span>=<span class="hljs-string">&quot;body&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">:teleport</span>=<span class="hljs-string">&quot;container&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-title function_">beforeCreate</span>(<span class="hljs-params"></span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">container</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#39;#container&#39;</span>);\n    },\n  };\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="api-diao-zheng" tabindex="-1">API 调整</h3><h4 id="area" tabindex="-1">Area</h4><ul><li><code>change</code> 事件参数不再传入组件实例</li></ul><h4 id="button" tabindex="-1">Button</h4><ul><li>蓝色按钮对应的类型由 <code>info</code> 调整为 <code>primary</code></li><li>绿色按钮对应的类型由 <code>primary</code> 调整为 <code>success</code></li><li><code>native-type</code> 的默认值由 <code>submit</code> 调整为 <code>button</code></li></ul><h4 id="checkbox" tabindex="-1">Checkbox</h4><ul><li>在 Cell 内部使用时，现在需要手动添加 <code>@click.stop</code> 来阻止事件冒泡</li></ul><h4 id="dialog" tabindex="-1">Dialog</h4><ul><li>默认关闭 <code>allow-html</code> 属性</li><li><code>before-close</code> 属性用法调整，不再传入 done 函数，而是通过返回 Promise 来控制</li></ul><h4 id="datetimepicker" tabindex="-1">DatetimePicker</h4><ul><li><code>change</code> 事件参数不再传入组件实例</li></ul><h4 id="imagepreview" tabindex="-1">ImagePreview</h4><ul><li>移除 <code>async-close</code> 属性，可以使用新增的 <code>before-close</code> 属性代替</li></ul><h4 id="picker" tabindex="-1">Picker</h4><ul><li><code>change</code> 事件参数不再传入组件实例</li><li>默认关闭 <code>allow-html</code> 属性</li><li>默认开启 <code>show-toolbar</code> 属性</li><li>级联选择下，<code>confirm</code>、<code>change</code> 事件返回的回调参数将包含为完整的选项对象。</li></ul><h4 id="popover" tabindex="-1">Popover</h4><ul><li><code>trigger</code> 属性的默认值调整为 <code>click</code></li></ul><h4 id="stepper" tabindex="-1">Stepper</h4><ul><li><code>async-change</code> 属性重命名为 <code>before-change</code>，并调整使用方法</li></ul><h4 id="swipecell" tabindex="-1">SwipeCell</h4><ul><li><code>open</code> 事件的 <code>detail</code> 参数重命名为 <code>name</code></li><li><code>on-close</code> 属性重命名为 <code>before-close</code>，并调整参数结构</li><li><code>before-close</code> 属性不再传入组件实例</li></ul><h4 id="toast" tabindex="-1">Toast</h4><ul><li><code>mask</code> 属性重命名为 <code>overlay</code></li></ul><h4 id="treeselect" tabindex="-1">TreeSelect</h4><ul><li><code>navclick</code> 事件重命名为 <code>click-nav</code></li><li><code>itemclick</code> 事件重命名为 <code>click-item</code></li></ul></div><div class="van-doc-card"><h3 id="zhu-ce-quan-ju-fang-fa" tabindex="-1">注册全局方法</h3><p>Vant 2 中默认提供了 <code>$toast</code>、<code>$dialog</code> 等全局方法，但 Vue 3.0 不再支持直接在 Vue 的原型链上挂载方法，因此从 Vant 3.0 开始，使用全局方法前必须先通过 <code>app.use</code> 将组件注册到对应的 app 上。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span>, <span class="hljs-title class_">Dialog</span>, <span class="hljs-title class_">Notify</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-comment">// 将 Toast 等组件注册到 app 上</span>\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Toast</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Dialog</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Notify</span>);\n\n<span class="hljs-comment">// app 内的子组件可以直接调用 $toast 等方法</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.$toast(<span class="hljs-string">&#39;提示文案&#39;</span>);\n  },\n};\n</code></pre></div>',13),E=[N],R={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",A,E)))},U={class:"van-doc-markdown-body"},B=t('<h1>Quickstart</h1><h2 id="install" tabindex="-1">Install</h2><div class="van-doc-card"><h3 id="npm" tabindex="-1">npm</h3><pre><code class="language-bash"><span class="hljs-comment"># Install Vant 2 for Vue 2 project</span>\nnpm i vant -S\n\n<span class="hljs-comment"># Install Vant 3 for Vue 3 project</span>\nnpm i vant@next -S\n</code></pre></div><div class="van-doc-card"><h3 id="cdn" tabindex="-1">CDN</h3><p>The easiest way to use Vant is to include a CDN link in the html file, after which you can access all components via the global variable <code>vant</code>.</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- import style --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">link</span>\n  <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>\n  <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/vant@next/lib/index.css&quot;</span>\n/&gt;</span>\n\n<span class="hljs-comment">&lt;!-- import script --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/vue@next&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/vant@next/lib/vant.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-comment">// Render the Button component</span>\n  <span class="hljs-keyword">const</span> app = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">createApp</span>({\n    <span class="hljs-attr">template</span>: <span class="hljs-string">`&lt;van-button&gt;Button&lt;/van-button&gt;`</span>,\n  });\n  app.<span class="hljs-title function_">use</span>(vant);\n\n  <span class="hljs-comment">// Register Lazyload directive</span>\n  app.<span class="hljs-title function_">use</span>(vant.<span class="hljs-property">Lazyload</span>);\n\n  <span class="hljs-comment">// Call function component</span>\n  vant.<span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Message&#39;</span>);\n\n  app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&#39;#app&#39;</span>);\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre><p>You can use Vant through these free CDN services:</p><ul><li><a href="https://www.jsdelivr.com/package/npm/vant">jsdelivr</a></li><li><a href="https://cdnjs.com/libraries/vant">cdnjs</a></li><li><a href="https://unpkg.com/">unpkg</a></li></ul></div><div class="van-doc-card"><h3 id="cli" tabindex="-1">CLI</h3><p>We recommend to use <a href="https://cli.vuejs.org/">Vue Cli</a> to create a new project.</p><pre><code class="language-bash"><span class="hljs-comment"># Install Vue Cli</span>\nnpm install -g @vue/cli\n\n<span class="hljs-comment"># Create a project</span>\nvue create hello-world\n\n<span class="hljs-comment"># Open GUI</span>\nvue ui\n</code></pre><p><img src="https://img.yzcdn.cn/vant/vue-cli-demo-201809030812.png" alt=""></p><p>In the GUI, click on ‘Dependencies’ -&gt; <code>Install Dependencies</code> and add <code>vant</code> to the dependencies.</p></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="1.-import-on-demand" tabindex="-1">1. Import on demand</h3><p>Use <a href="https://github.com/ant-design/babel-plugin-import">babel-plugin-import</a> to import components on demand.</p><pre><code class="language-bash"><span class="hljs-comment"># Install plugin</span>\nnpm i babel-plugin-import -D\n</code></pre><p>Set babel config in .babelrc or babel.config.js:</p><pre><code class="language-json"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;plugins&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n    <span class="hljs-punctuation">[</span>\n      <span class="hljs-string">&quot;import&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;libraryName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vant&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;libraryDirectory&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;es&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;style&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">]</span>\n  <span class="hljs-punctuation">]</span>\n<span class="hljs-punctuation">}</span>\n</code></pre><p>Then you can import components from vant:</p><pre><code class="language-js"><span class="hljs-comment">// Input</span>\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-comment">// Output</span>\n<span class="hljs-keyword">import</span> <span class="hljs-title class_">Button</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant/es/button&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;vant/es/button/style&#39;</span>;\n</code></pre><blockquote><p>If you are using TypeScript，please use <a href="https://github.com/Brooooooklyn/ts-import-plugin">ts-import-plugin</a> instead.</p></blockquote></div><div class="van-doc-card"><h3 id="2.-vite-plugin" tabindex="-1">2. Vite Plugin</h3><p>If you are using Vite, please use <a href="https://github.com/anncwb/vite-plugin-style-import">vite-plugin-style-import</a>.</p><pre><code class="language-bash">npm i vite-plugin-style-import -D\n</code></pre><pre><code class="language-js"><span class="hljs-comment">// vite.config.js</span>\n<span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vitejs/plugin-vue&#39;</span>;\n<span class="hljs-keyword">import</span> styleImport <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vite-plugin-style-import&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">plugins</span>: [\n    <span class="hljs-title function_">vue</span>(),\n    <span class="hljs-title function_">styleImport</span>({\n      <span class="hljs-attr">libs</span>: [\n        {\n          <span class="hljs-attr">libraryName</span>: <span class="hljs-string">&#39;vant&#39;</span>,\n          <span class="hljs-attr">esModule</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">resolveStyle</span>: <span class="hljs-function">(<span class="hljs-params">name</span>) =&gt;</span> <span class="hljs-string">`vant/es/<span class="hljs-subst">${name}</span>/style`</span>,\n        },\n      ],\n    }),\n  ],\n};\n</code></pre></div><div class="van-doc-card"><h3 id="3.-manually-import" tabindex="-1">3. Manually import</h3><pre><code class="language-js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Button</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant/es/button&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;vant/es/button/style&#39;</span>;\n</code></pre></div><div class="van-doc-card"><h3 id="4.-import-all-components" tabindex="-1">4. Import all components</h3><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-title class_">Vant</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;vant/lib/index.css&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Vant</span>);\n</code></pre><blockquote><p>If you configured babel-plugin-import, you won’t be allowed to import all components.</p></blockquote></div>',10),V=[B],L={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",U,V)))},F={class:"van-doc-markdown-body"},W=t('<h1>快速上手</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>通过本章节你可以了解到 Vant 的安装方法和基本使用姿势。</p></div><h2 id="an-zhuang" tabindex="-1">安装</h2><div class="van-doc-card"><h3 id="tong-guo-npm-an-zhuang" tabindex="-1">通过 npm 安装</h3><p>在现有项目中使用 Vant 时，可以通过 <code>npm</code> 或 <code>yarn</code> 进行安装：</p><pre><code class="language-bash"><span class="hljs-comment"># Vue 2 项目，安装 Vant 2：</span>\nnpm i vant -S\n\n<span class="hljs-comment"># Vue 3 项目，安装 Vant 3：</span>\nnpm i vant@next -S\n</code></pre></div><div class="van-doc-card"><h3 id="tong-guo-cdn-an-zhuang" tabindex="-1">通过 CDN 安装</h3><p>使用 Vant 最简单的方法是直接在 html 文件中引入 CDN 链接，之后你可以通过全局变量 <code>vant</code> 访问到所有组件。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 引入样式文件 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">link</span>\n  <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>\n  <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/vant@next/lib/index.css&quot;</span>\n/&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 引入 Vue 和 Vant 的 JS 文件 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/vue@next&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/vant@next/lib/vant.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-comment">// 在 #app 标签下渲染一个按钮组件</span>\n  <span class="hljs-keyword">const</span> app = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">createApp</span>({\n    <span class="hljs-attr">template</span>: <span class="hljs-string">`&lt;van-button&gt;按钮&lt;/van-button&gt;`</span>,\n  });\n  app.<span class="hljs-title function_">use</span>(vant);\n\n  <span class="hljs-comment">// 通过 CDN 引入时不会自动注册 Lazyload 组件</span>\n  <span class="hljs-comment">// 可以通过下面的方式手动注册</span>\n  app.<span class="hljs-title function_">use</span>(vant.<span class="hljs-property">Lazyload</span>);\n\n  <span class="hljs-comment">// 调用函数组件，弹出一个 Toast</span>\n  vant.<span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;提示&#39;</span>);\n\n  app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&#39;#app&#39;</span>);\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre><p>你可以通过以下免费 CDN 服务来使用 Vant:</p><ul><li><a href="https://www.jsdelivr.com/package/npm/vant">jsdelivr</a></li><li><a href="https://cdnjs.com/libraries/vant">cdnjs</a></li><li><a href="https://unpkg.com/">unpkg</a></li></ul></div><div class="van-doc-card"><h3 id="tong-guo-jiao-shou-jia-an-zhuang" tabindex="-1">通过脚手架安装</h3><p>在新项目中使用 Vant 时，推荐使用 Vue 官方提供的脚手架 <a href="https://cli.vuejs.org/zh/">Vue Cli</a> 创建项目并安装 Vant。</p><pre><code class="language-bash"><span class="hljs-comment"># 安装 Vue Cli</span>\nnpm install -g @vue/cli\n\n<span class="hljs-comment"># 创建一个项目</span>\nvue create hello-world\n\n<span class="hljs-comment"># 创建完成后，可以通过命令打开图形化界面，如下图所示</span>\nvue ui\n</code></pre><p><img src="https://img.yzcdn.cn/vant/vue-cli-demo-201809032000.png" alt=""></p><p>在图形化界面中，点击 <code>依赖</code> -&gt; <code>安装依赖</code>，然后将 <code>vant</code> 添加到依赖中即可。</p></div><h2 id="shi-li" tabindex="-1">示例</h2><div class="van-doc-card"><h3 id="shi-li-gong-cheng" tabindex="-1">示例工程</h3><p>我们提供了丰富的<a href="https://github.com/youzan/vant-demo">示例工程</a>，通过示例工程你可以了解如下内容：</p><ul><li>基于 Vue Cli 和 Vant 搭建应用</li><li>基于 Nuxt 和 Vant 搭建应用</li><li>配置按需引入组件</li><li>配置基于 Rem 的适配方案</li><li>配置基于 Viewport 的适配方案</li><li>配置基于 TypeScript 的工程</li><li>配置自定义主题色方案</li></ul></div><h2 id="yin-ru-zu-jian" tabindex="-1">引入组件</h2><div class="van-doc-card"><h3 id="fang-shi-yi.-tong-guo-babel-cha-jian-an-xu-yin-ru-zu-jian" tabindex="-1">方式一. 通过 babel 插件按需引入组件</h3><p><a href="https://github.com/ant-design/babel-plugin-import">babel-plugin-import</a> 是一款 babel 插件，它会在编译过程中将 import 语句自动转换为按需引入的方式。</p><pre><code class="language-bash"><span class="hljs-comment"># 安装插件</span>\nnpm i babel-plugin-import -D\n</code></pre><p>在.babelrc 或 babel.config.js 中添加配置：</p><pre><code class="language-json"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;plugins&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n    <span class="hljs-punctuation">[</span>\n      <span class="hljs-string">&quot;import&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;libraryName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vant&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;libraryDirectory&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;es&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;style&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">]</span>\n  <span class="hljs-punctuation">]</span>\n<span class="hljs-punctuation">}</span>\n</code></pre><p>接着你可以在代码中直接引入 Vant 组件，插件会自动将代码转化为按需引入的形式。</p><pre><code class="language-js"><span class="hljs-comment">// 原始代码</span>\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-comment">// 编译后代码</span>\n<span class="hljs-keyword">import</span> <span class="hljs-title class_">Button</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant/es/button&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;vant/es/button/style&#39;</span>;\n</code></pre><blockquote><p>如果你在使用 TypeScript，可以使用 <a href="https://github.com/Brooooooklyn/ts-import-plugin">ts-import-plugin</a> 实现按需引入。</p></blockquote></div><div class="van-doc-card"><h3 id="fang-shi-er.-zai-vite-xiang-mu-zhong-an-xu-yin-ru-zu-jian" tabindex="-1">方式二. 在 Vite 项目中按需引入组件</h3><p>对于 vite 项目，可以使用 <a href="https://github.com/anncwb/vite-plugin-style-import">vite-plugin-style-import</a> 实现按需引入, 原理和 <code>babel-plugin-import</code> 类似。</p><pre><code class="language-bash"><span class="hljs-comment"># 安装插件</span>\nnpm i vite-plugin-style-import -D\n</code></pre><pre><code class="language-js"><span class="hljs-comment">// vite.config.js</span>\n<span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vitejs/plugin-vue&#39;</span>;\n<span class="hljs-keyword">import</span> styleImport <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vite-plugin-style-import&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">plugins</span>: [\n    <span class="hljs-title function_">vue</span>(),\n    <span class="hljs-title function_">styleImport</span>({\n      <span class="hljs-attr">libs</span>: [\n        {\n          <span class="hljs-attr">libraryName</span>: <span class="hljs-string">&#39;vant&#39;</span>,\n          <span class="hljs-attr">esModule</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">resolveStyle</span>: <span class="hljs-function">(<span class="hljs-params">name</span>) =&gt;</span> <span class="hljs-string">`vant/es/<span class="hljs-subst">${name}</span>/style`</span>,\n        },\n      ],\n    }),\n  ],\n};\n</code></pre></div><div class="van-doc-card"><h3 id="fang-shi-san.-shou-dong-an-xu-yin-ru-zu-jian" tabindex="-1">方式三. 手动按需引入组件</h3><p>在不使用插件的情况下，可以手动引入需要使用的组件和样式。</p><pre><code class="language-js"><span class="hljs-comment">// 引入组件</span>\n<span class="hljs-keyword">import</span> <span class="hljs-title class_">Button</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant/es/button&#39;</span>;\n<span class="hljs-comment">// 引入组件对应的样式，若组件没有样式文件，则无须引入</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;vant/es/button/style&#39;</span>;\n</code></pre></div><div class="van-doc-card"><h3 id="fang-shi-si.-dao-ru-suo-you-zu-jian" tabindex="-1">方式四. 导入所有组件</h3><p>Vant 支持一次性导入所有组件，引入所有组件会增加代码包体积，因此不推荐这种做法。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-title class_">Vant</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;vant/lib/index.css&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Vant</span>);\n</code></pre><blockquote><p>Tips: 配置按需引入后，将不允许直接导入所有组件。</p></blockquote></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="ru-he-zi-ding-yi-vant-zu-jian-de-yang-shi" tabindex="-1">如何自定义 Vant 组件的样式？</h3><h4 id="1.-zhu-ti-ding-zhi" tabindex="-1">1. 主题定制</h4><p>Vant 基于 CSS 变量提供了主题定制的能力，可以对组件样式进行统一修改，详见 <a href="#/zh-CN/config-provider">ConfigProvider 全局配置</a> 组件。</p><h4 id="2.-fu-gai-mo-ren-yang-shi" tabindex="-1">2. 覆盖默认样式</h4><p>如果主题定制不能满足你的需求，也可以通过<strong>自定义样式类</strong>来覆盖默认样式，参考下面的示例：</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-button&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-comment">/** 覆盖 Button 最外层元素的样式 */</span>\n  <span class="hljs-selector-class">.my-button</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;\n  }\n\n  <span class="hljs-comment">/** 覆盖 Button 内部子元素的样式 */</span>\n  <span class="hljs-selector-class">.my-button</span> <span class="hljs-selector-class">.van-button__text</span> {\n    <span class="hljs-attribute">color</span>: red;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zai-html-zhong-wu-fa-zheng-que-xuan-ran-zu-jian" tabindex="-1">在 HTML 中无法正确渲染组件？</h3><p>在 HTML 中使用 Vant 组件时，你可能会碰到部分示例代码无法正确渲染的情况，比如下面的用法：</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre><p>这是因为 HTML 并不支持自闭合的自定义元素，也就是说 <code>&lt;van-cell /&gt;</code> 这样的语法是不被识别的，使用完整的闭合标签可以避免这个问题：</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre><p>在单文件组件、字符串模板和 JSX 中可以使用自闭合的自定义元素，因此不会出现这个问题。</p></div>',16),M=[W],O={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",F,M)))},G={class:"van-doc-markdown-body"},H=t('<h1>风格指南</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>在参与 Vant 开发时，请遵守约定的单文件组件风格指南，指南内容节选自 <a href="https://v3.cn.vuejs.org/style-guide/">Vue 官方风格指南</a>。</p></div><div class="van-doc-card"><h3 id="zu-jian-shu-ju" tabindex="-1">组件数据</h3><p>组件的 data 必须是一个函数。</p><pre><code class="language-js"><span class="hljs-comment">// bad</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">data</span>: {\n    <span class="hljs-attr">foo</span>: <span class="hljs-string">&#39;bar&#39;</span>,\n  },\n};\n\n<span class="hljs-comment">// good</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">foo</span>: <span class="hljs-string">&#39;bar&#39;</span>,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="dan-wen-jian-zu-jian-wen-jian-ming-cheng" tabindex="-1">单文件组件文件名称</h3><p>单文件组件的文件名应该要么始终是单词大写开头 (PascalCase)，要么始终是横线连接 (kebab-case)。</p><pre><code>// bad\nmycomponent.vue\nmyComponent.vue\n\n// good\nmy-component.vue\nMyComponent.vue\n</code></pre></div><div class="van-doc-card"><h3 id="jin-mi-ou-he-de-zu-jian-ming" tabindex="-1">紧密耦合的组件名</h3><p>和父组件紧密耦合的子组件应该以父组件名作为前缀命名。</p><pre><code>// bad\ncomponents/\n|- TodoList.vue\n|- TodoItem.vue\n└─ TodoButton.vue\n\n// good\ncomponents/\n|- TodoList.vue\n|- TodoListItem.vue\n└─ TodoListItemButton.vue\n</code></pre></div><div class="van-doc-card"><h3 id="zi-bi-he-zu-jian" tabindex="-1">自闭合组件</h3><p>在单文件组件中没有内容的组件应该是自闭合的。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- bad --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">my-component</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">my-component</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- good --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">my-component</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="prop-ming-da-xiao-xie" tabindex="-1">Prop 名大小写</h3><p>在声明 prop 的时候，其命名应该始终使用 camelCase，而在模板中应该始终使用 kebab-case。</p><pre><code class="language-js"><span class="hljs-comment">// bad</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">props</span>: {\n    <span class="hljs-string">&#39;greeting-text&#39;</span>: <span class="hljs-title class_">String</span>,\n  },\n};\n\n<span class="hljs-comment">// good</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">props</span>: {\n    <span class="hljs-attr">greetingText</span>: <span class="hljs-title class_">String</span>,\n  },\n};\n</code></pre><pre><code class="language-html"><span class="hljs-comment">&lt;!-- bad --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">welcome-message</span> <span class="hljs-attr">greetingText</span>=<span class="hljs-string">&quot;hi&quot;</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- good --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">welcome-message</span> <span class="hljs-attr">greeting-text</span>=<span class="hljs-string">&quot;hi&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zhi-ling-suo-xie" tabindex="-1">指令缩写</h3><p>指令缩写，用 <code>:</code> 表示 <code>v-bind:</code> ，用 <code>@</code> 表示 <code>v-on:</code></p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- bad --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-bind:value</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">v-on:input</span>=<span class="hljs-string">&quot;onInput&quot;</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- good --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span> @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;onInput&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="props-shun-xu" tabindex="-1">Props 顺序</h3><p>标签的 Props 应该有统一的顺序，依次为指令、属性和事件。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">my-component</span>\n  <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;if&quot;</span>\n  <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;ref&quot;</span>\n  <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;key&quot;</span>\n  <span class="hljs-attr">:text</span>=<span class="hljs-string">&quot;text&quot;</span>\n  @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n  @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zu-jian-xuan-xiang-de-shun-xu" tabindex="-1">组件选项的顺序</h3><p>组件选项应该有统一的顺序。</p><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;&#39;</span>,\n\n  <span class="hljs-attr">components</span>: {},\n\n  <span class="hljs-attr">props</span>: {},\n\n  <span class="hljs-attr">emits</span>: [],\n\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {},\n\n  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) {},\n\n  <span class="hljs-attr">computed</span>: {},\n\n  <span class="hljs-attr">watch</span>: {},\n\n  <span class="hljs-title function_">created</span>(<span class="hljs-params"></span>) {},\n\n  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) {},\n\n  <span class="hljs-title function_">unmounted</span>(<span class="hljs-params"></span>) {},\n\n  <span class="hljs-attr">methods</span>: {},\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zu-jian-xuan-xiang-zhong-de-kong-xing" tabindex="-1">组件选项中的空行</h3><p>组件选项较多时，建议在属性之间添加空行。</p><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">computed</span>: {\n    <span class="hljs-title function_">formattedValue</span>(<span class="hljs-params"></span>) {\n      <span class="hljs-comment">// ...</span>\n    },\n\n    <span class="hljs-title function_">styles</span>(<span class="hljs-params"></span>) {\n      <span class="hljs-comment">// ...</span>\n    },\n  },\n\n  <span class="hljs-attr">methods</span>: {\n    <span class="hljs-title function_">onInput</span>(<span class="hljs-params"></span>) {\n      <span class="hljs-comment">// ...</span>\n    },\n\n    <span class="hljs-title function_">onChange</span>(<span class="hljs-params"></span>) {\n      <span class="hljs-comment">// ...</span>\n    },\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="dan-wen-jian-zu-jian-ding-ji-biao-qian-de-shun-xu" tabindex="-1">单文件组件顶级标签的顺序</h3><p>单文件组件应该总是让顶级标签的顺序保持一致，且标签之间留有空行。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">\n  <span class="hljs-comment">/* ... */</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-comment">/* ... */</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div>',12),K=[H],$={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",G,K)))},J={class:"van-doc-markdown-body"},X=t('<h1>Custom Theme</h1><div class="van-doc-card"><h3 id="deprecated" tabindex="-1">Deprecated</h3><p>This document is deprecated. Vant provides a more convenient <a href="#/en-US/config-provider">ConfigProvider</a> component for theme configuration. Less variables <strong>will be removed in the next major version</strong>.</p></div><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Vant use <a href="http://lesscss.org/">Less</a> as css preprocessor，you can override the default less variables to custom theme.</p></div><div class="van-doc-card"><h3 id="less-variables" tabindex="-1">Less variables</h3><p>There are some <a href="(https://github.com/youzan/vant/blob/dev/packages/vant/src/style/var.less)">basic variables</a> below, for component less variables, please refer to the documentation of each component, or view the <code>var.less</code> file in the component source directory.</p><pre><code class="language-less"><span class="hljs-comment">// Color Palette</span>\n<span class="hljs-variable">@black:</span> <span class="hljs-number">#000</span>;\n<span class="hljs-variable">@white:</span> <span class="hljs-number">#fff</span>;\n<span class="hljs-variable">@gray-1:</span> <span class="hljs-number">#f7f8fa</span>;\n<span class="hljs-variable">@gray-2:</span> <span class="hljs-number">#f2f3f5</span>;\n<span class="hljs-variable">@gray-3:</span> <span class="hljs-number">#ebedf0</span>;\n<span class="hljs-variable">@gray-4:</span> <span class="hljs-number">#dcdee0</span>;\n<span class="hljs-variable">@gray-5:</span> <span class="hljs-number">#c8c9cc</span>;\n<span class="hljs-variable">@gray-6:</span> <span class="hljs-number">#969799</span>;\n<span class="hljs-variable">@gray-7:</span> <span class="hljs-number">#646566</span>;\n<span class="hljs-variable">@gray-8:</span> <span class="hljs-number">#323233</span>;\n<span class="hljs-variable">@red:</span> <span class="hljs-number">#ee0a24</span>;\n<span class="hljs-variable">@blue:</span> <span class="hljs-number">#1989fa</span>;\n<span class="hljs-variable">@orange:</span> <span class="hljs-number">#ff976a</span>;\n<span class="hljs-variable">@orange-dark:</span> <span class="hljs-number">#ed6a0c</span>;\n<span class="hljs-variable">@orange-light:</span> <span class="hljs-number">#fffbe8</span>;\n<span class="hljs-variable">@green:</span> <span class="hljs-number">#07c160</span>;\n\n<span class="hljs-comment">// Gradient Colors</span>\n<span class="hljs-variable">@gradient-red:</span> linear-gradient(to right, <span class="hljs-number">#ff6034</span>, <span class="hljs-number">#ee0a24</span>);\n<span class="hljs-variable">@gradient-orange:</span> linear-gradient(to right, <span class="hljs-number">#ffd01e</span>, <span class="hljs-number">#ff8917</span>);\n\n<span class="hljs-comment">// Component Colors</span>\n<span class="hljs-variable">@text-color:</span> <span class="hljs-variable">@gray-8</span>;\n<span class="hljs-variable">@active-color:</span> <span class="hljs-variable">@gray-2</span>;\n<span class="hljs-variable">@active-opacity:</span> <span class="hljs-number">0.7</span>;\n<span class="hljs-variable">@disabled-opacity:</span> <span class="hljs-number">0.5</span>;\n<span class="hljs-variable">@background-color:</span> <span class="hljs-variable">@gray-1</span>;\n<span class="hljs-variable">@background-color-light:</span> <span class="hljs-number">#fafafa</span>;\n<span class="hljs-variable">@text-link-color:</span> <span class="hljs-number">#576b95</span>;\n\n<span class="hljs-comment">// Padding</span>\n<span class="hljs-variable">@padding-base:</span> <span class="hljs-number">4px</span>;\n<span class="hljs-variable">@padding-xs:</span> <span class="hljs-variable">@padding-base</span> * <span class="hljs-number">2</span>;\n<span class="hljs-variable">@padding-sm:</span> <span class="hljs-variable">@padding-base</span> * <span class="hljs-number">3</span>;\n<span class="hljs-variable">@padding-md:</span> <span class="hljs-variable">@padding-base</span> * <span class="hljs-number">4</span>;\n<span class="hljs-variable">@padding-lg:</span> <span class="hljs-variable">@padding-base</span> * <span class="hljs-number">6</span>;\n<span class="hljs-variable">@padding-xl:</span> <span class="hljs-variable">@padding-base</span> * <span class="hljs-number">8</span>;\n\n<span class="hljs-comment">// Font</span>\n<span class="hljs-variable">@font-size-xs:</span> <span class="hljs-number">10px</span>;\n<span class="hljs-variable">@font-size-sm:</span> <span class="hljs-number">12px</span>;\n<span class="hljs-variable">@font-size-md:</span> <span class="hljs-number">14px</span>;\n<span class="hljs-variable">@font-size-lg:</span> <span class="hljs-number">16px</span>;\n<span class="hljs-variable">@font-weight-bold:</span> <span class="hljs-number">500</span>;\n<span class="hljs-variable">@line-height-xs:</span> <span class="hljs-number">14px</span>;\n<span class="hljs-variable">@line-height-sm:</span> <span class="hljs-number">18px</span>;\n<span class="hljs-variable">@line-height-md:</span> <span class="hljs-number">20px</span>;\n<span class="hljs-variable">@line-height-lg:</span> <span class="hljs-number">22px</span>;\n<span class="hljs-variable">@base-font-family:</span> -apple-system, BlinkMacSystemFont, <span class="hljs-string">&#39;Helvetica Neue&#39;</span>,\n  Helvetica, Segoe UI, Arial, Roboto, <span class="hljs-string">&#39;PingFang SC&#39;</span>, <span class="hljs-string">&#39;miui&#39;</span>, <span class="hljs-string">&#39;Hiragino Sans GB&#39;</span>,\n  <span class="hljs-string">&#39;Microsoft Yahei&#39;</span>, sans-serif;\n<span class="hljs-variable">@price-integer-font-family:</span> Avenir-Heavy, PingFang SC, Helvetica Neue, Arial,\n  sans-serif;\n\n<span class="hljs-comment">// Animation</span>\n<span class="hljs-variable">@animation-duration-base:</span> <span class="hljs-number">0.3s</span>;\n<span class="hljs-variable">@animation-duration-fast:</span> <span class="hljs-number">0.2s</span>;\n<span class="hljs-variable">@animation-timing-function-enter:</span> ease-out;\n<span class="hljs-variable">@animation-timing-function-leave:</span> ease-in;\n\n<span class="hljs-comment">// Border</span>\n<span class="hljs-variable">@border-color:</span> <span class="hljs-variable">@gray-3</span>;\n<span class="hljs-variable">@border-width-base:</span> <span class="hljs-number">1px</span>;\n<span class="hljs-variable">@border-radius-sm:</span> <span class="hljs-number">2px</span>;\n<span class="hljs-variable">@border-radius-md:</span> <span class="hljs-number">4px</span>;\n<span class="hljs-variable">@border-radius-lg:</span> <span class="hljs-number">8px</span>;\n<span class="hljs-variable">@border-radius-max:</span> <span class="hljs-number">999px</span>;\n</code></pre></div><h2 id="how-to-custom-theme" tabindex="-1">How to custom theme</h2><div class="van-doc-card"><h3 id="step-1-import-less-file" tabindex="-1">Step 1: import less file</h3><p>First you should import the less source file to your project. you can use babel-plugin-import to automatically import or just manually import less file.</p><h4 id="automatically-import-style" tabindex="-1">Automatically import style</h4><p>Configure babel plugin in babel.config.js, if you are using babel6, please manually import less file.</p><pre><code class="language-js"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = {\n  <span class="hljs-attr">plugins</span>: [\n    [\n      <span class="hljs-string">&#39;import&#39;</span>,\n      {\n        <span class="hljs-attr">libraryName</span>: <span class="hljs-string">&#39;vant&#39;</span>,\n        <span class="hljs-attr">libraryDirectory</span>: <span class="hljs-string">&#39;es&#39;</span>,\n        <span class="hljs-comment">// specify less file path</span>\n        <span class="hljs-attr">style</span>: <span class="hljs-function">(<span class="hljs-params">name</span>) =&gt;</span> <span class="hljs-string">`<span class="hljs-subst">${name}</span>/style/less`</span>,\n      },\n      <span class="hljs-string">&#39;vant&#39;</span>,\n    ],\n  ],\n};\n</code></pre><h4 id="manually-import-style" tabindex="-1">Manually import style</h4><pre><code class="language-js"><span class="hljs-comment">// import all styles</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;vant/lib/index.less&#39;</span>;\n\n<span class="hljs-comment">// import style of single component</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;vant/lib/button/style/less&#39;</span>;\n</code></pre></div><div class="van-doc-card"><h3 id="step-2-modify-less-variables" tabindex="-1">Step 2: modify less variables</h3><p>Use <a href="http://lesscss.org/usage/#using-less-in-the-browser-modify-variables">modifyVars</a> provided by less.js to modify less variables，webpack config for reference:</p><pre><code class="language-js"><span class="hljs-comment">// webpack.config.js</span>\n<span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = {\n  <span class="hljs-attr">rules</span>: [\n    {\n      <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\\.less$/</span>,\n      <span class="hljs-attr">use</span>: [\n        <span class="hljs-comment">// ...other loaders</span>\n        {\n          <span class="hljs-attr">loader</span>: <span class="hljs-string">&#39;less-loader&#39;</span>,\n          <span class="hljs-attr">options</span>: {\n            <span class="hljs-attr">lessOptions</span>: {\n              <span class="hljs-attr">modifyVars</span>: {\n                <span class="hljs-comment">// override with less vars</span>\n                <span class="hljs-string">&#39;text-color&#39;</span>: <span class="hljs-string">&#39;#111&#39;</span>,\n                <span class="hljs-string">&#39;border-color&#39;</span>: <span class="hljs-string">&#39;#eee&#39;</span>,\n                <span class="hljs-comment">// or override with less file</span>\n                <span class="hljs-attr">hack</span>: <span class="hljs-string">`true; @import &quot;your-less-file-path.less&quot;;`</span>,\n              },\n            },\n          },\n        },\n      ],\n    },\n  ],\n};\n</code></pre><p>If you build a project by vue-cli,it can be configured in <code>vue.config.js</code>:</p><pre><code class="language-js"><span class="hljs-comment">// vue.config.js</span>\n<span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = {\n  <span class="hljs-attr">css</span>: {\n    <span class="hljs-attr">loaderOptions</span>: {\n      <span class="hljs-attr">less</span>: {\n        <span class="hljs-attr">lessOptions</span>: {\n          <span class="hljs-attr">modifyVars</span>: {\n            <span class="hljs-comment">// override with less vars</span>\n            <span class="hljs-string">&#39;text-color&#39;</span>: <span class="hljs-string">&#39;#111&#39;</span>,\n            <span class="hljs-string">&#39;border-color&#39;</span>: <span class="hljs-string">&#39;#eee&#39;</span>,\n            <span class="hljs-comment">// or override with less file</span>\n            <span class="hljs-attr">hack</span>: <span class="hljs-string">`true; @import &quot;your-less-file-path.less&quot;;`</span>,\n          },\n        },\n      },\n    },\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="vite" tabindex="-1">Vite</h3><p>Add the following config in <code>vite.config.js</code>.</p><pre><code class="language-js"><span class="hljs-comment">// vite.config.js</span>\n<span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vitejs/plugin-vue&#39;</span>;\n<span class="hljs-keyword">import</span> styleImport <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vite-plugin-style-import&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">css</span>: {\n    <span class="hljs-attr">preprocessorOptions</span>: {\n      <span class="hljs-attr">less</span>: {\n        <span class="hljs-attr">javascriptEnabled</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-attr">modifyVars</span>: {\n          <span class="hljs-string">&#39;text-color&#39;</span>: <span class="hljs-string">&#39;#111&#39;</span>,\n          <span class="hljs-string">&#39;border-color&#39;</span>: <span class="hljs-string">&#39;#eee&#39;</span>,\n        },\n      },\n    },\n  },\n  <span class="hljs-attr">resolve</span>: {\n    <span class="hljs-attr">alias</span>: [{ <span class="hljs-attr">find</span>: <span class="hljs-regexp">/^~/</span>, <span class="hljs-attr">replacement</span>: <span class="hljs-string">&#39;&#39;</span> }],\n  },\n  <span class="hljs-attr">plugins</span>: [\n    <span class="hljs-title function_">vue</span>(),\n    <span class="hljs-title function_">styleImport</span>({\n      <span class="hljs-attr">libs</span>: [\n        {\n          <span class="hljs-attr">libraryName</span>: <span class="hljs-string">&#39;vant&#39;</span>,\n          <span class="hljs-attr">esModule</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">resolveStyle</span>: <span class="hljs-function">(<span class="hljs-params">name</span>) =&gt;</span> <span class="hljs-string">`vant/es/<span class="hljs-subst">${name}</span>/style/less`</span>,\n        },\n      ],\n    }),\n  ],\n};\n</code></pre></div>',8),Y=[X],Z={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",J,Y)))},Q={class:"van-doc-markdown-body"},ss=t('<h1>定制主题</h1><div class="van-doc-card"><h3 id="fei-qi-ti-shi" tabindex="-1">废弃提示</h3><p>本文档已废弃，Vant 提供了更方便的 <a href="#/zh-CN/config-provider">ConfigProvider 全局配置</a> 组件进行主题配置。基于 Less 变量进行定制的方式<strong>将在下个大版本废弃</strong>。</p></div><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>Vant 提供了一套默认主题，CSS 命名采用 BEM 的风格，方便使用者覆盖样式。如果你想完全替换主题色或者其他样式，可以按照本文档进行主题定制。</p></div><div class="van-doc-card"><h3 id="shi-li-gong-cheng" tabindex="-1">示例工程</h3><p>我们提供了一个基于 Vue Cli 3 的示例工程，仓库地址为 <a href="https://github.com/youzan/vant-demo">Vant Demo</a>，其中包含了定制主题的基本配置，可以作为参考。</p></div><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>Vant 使用了 <a href="http://lesscss.org/">Less</a> 对样式进行预处理，并内置了一些样式变量，通过替换样式变量即可定制你自己需要的主题。</p><p>下面是所有的<a href="https://github.com/youzan/vant/blob/dev/packages/vant/src/style/var.less">基础样式变量</a>，组件的样式变量请参考各个组件的文档，或查看组件源码目录下的 <code>var.less</code> 文件。</p><pre><code class="language-less"><span class="hljs-comment">// Color Palette</span>\n<span class="hljs-variable">@black:</span> <span class="hljs-number">#000</span>;\n<span class="hljs-variable">@white:</span> <span class="hljs-number">#fff</span>;\n<span class="hljs-variable">@gray-1:</span> <span class="hljs-number">#f7f8fa</span>;\n<span class="hljs-variable">@gray-2:</span> <span class="hljs-number">#f2f3f5</span>;\n<span class="hljs-variable">@gray-3:</span> <span class="hljs-number">#ebedf0</span>;\n<span class="hljs-variable">@gray-4:</span> <span class="hljs-number">#dcdee0</span>;\n<span class="hljs-variable">@gray-5:</span> <span class="hljs-number">#c8c9cc</span>;\n<span class="hljs-variable">@gray-6:</span> <span class="hljs-number">#969799</span>;\n<span class="hljs-variable">@gray-7:</span> <span class="hljs-number">#646566</span>;\n<span class="hljs-variable">@gray-8:</span> <span class="hljs-number">#323233</span>;\n<span class="hljs-variable">@red:</span> <span class="hljs-number">#ee0a24</span>;\n<span class="hljs-variable">@blue:</span> <span class="hljs-number">#1989fa</span>;\n<span class="hljs-variable">@orange:</span> <span class="hljs-number">#ff976a</span>;\n<span class="hljs-variable">@orange-dark:</span> <span class="hljs-number">#ed6a0c</span>;\n<span class="hljs-variable">@orange-light:</span> <span class="hljs-number">#fffbe8</span>;\n<span class="hljs-variable">@green:</span> <span class="hljs-number">#07c160</span>;\n\n<span class="hljs-comment">// Gradient Colors</span>\n<span class="hljs-variable">@gradient-red:</span> linear-gradient(to right, <span class="hljs-number">#ff6034</span>, <span class="hljs-number">#ee0a24</span>);\n<span class="hljs-variable">@gradient-orange:</span> linear-gradient(to right, <span class="hljs-number">#ffd01e</span>, <span class="hljs-number">#ff8917</span>);\n\n<span class="hljs-comment">// Component Colors</span>\n<span class="hljs-variable">@text-color:</span> <span class="hljs-variable">@gray-8</span>;\n<span class="hljs-variable">@active-color:</span> <span class="hljs-variable">@gray-2</span>;\n<span class="hljs-variable">@active-opacity:</span> <span class="hljs-number">0.7</span>;\n<span class="hljs-variable">@disabled-opacity:</span> <span class="hljs-number">0.5</span>;\n<span class="hljs-variable">@background-color:</span> <span class="hljs-variable">@gray-1</span>;\n<span class="hljs-variable">@background-color-light:</span> <span class="hljs-number">#fafafa</span>;\n<span class="hljs-variable">@text-link-color:</span> <span class="hljs-number">#576b95</span>;\n\n<span class="hljs-comment">// Padding</span>\n<span class="hljs-variable">@padding-base:</span> <span class="hljs-number">4px</span>;\n<span class="hljs-variable">@padding-xs:</span> <span class="hljs-variable">@padding-base</span> * <span class="hljs-number">2</span>;\n<span class="hljs-variable">@padding-sm:</span> <span class="hljs-variable">@padding-base</span> * <span class="hljs-number">3</span>;\n<span class="hljs-variable">@padding-md:</span> <span class="hljs-variable">@padding-base</span> * <span class="hljs-number">4</span>;\n<span class="hljs-variable">@padding-lg:</span> <span class="hljs-variable">@padding-base</span> * <span class="hljs-number">6</span>;\n<span class="hljs-variable">@padding-xl:</span> <span class="hljs-variable">@padding-base</span> * <span class="hljs-number">8</span>;\n\n<span class="hljs-comment">// Font</span>\n<span class="hljs-variable">@font-size-xs:</span> <span class="hljs-number">10px</span>;\n<span class="hljs-variable">@font-size-sm:</span> <span class="hljs-number">12px</span>;\n<span class="hljs-variable">@font-size-md:</span> <span class="hljs-number">14px</span>;\n<span class="hljs-variable">@font-size-lg:</span> <span class="hljs-number">16px</span>;\n<span class="hljs-variable">@font-weight-bold:</span> <span class="hljs-number">500</span>;\n<span class="hljs-variable">@line-height-xs:</span> <span class="hljs-number">14px</span>;\n<span class="hljs-variable">@line-height-sm:</span> <span class="hljs-number">18px</span>;\n<span class="hljs-variable">@line-height-md:</span> <span class="hljs-number">20px</span>;\n<span class="hljs-variable">@line-height-lg:</span> <span class="hljs-number">22px</span>;\n<span class="hljs-variable">@base-font-family:</span> -apple-system, BlinkMacSystemFont, <span class="hljs-string">&#39;Helvetica Neue&#39;</span>,\n  Helvetica, Segoe UI, Arial, Roboto, <span class="hljs-string">&#39;PingFang SC&#39;</span>, <span class="hljs-string">&#39;miui&#39;</span>, <span class="hljs-string">&#39;Hiragino Sans GB&#39;</span>,\n  <span class="hljs-string">&#39;Microsoft Yahei&#39;</span>, sans-serif;\n<span class="hljs-variable">@price-integer-font-family:</span> Avenir-Heavy, PingFang SC, Helvetica Neue, Arial,\n  sans-serif;\n\n<span class="hljs-comment">// Animation</span>\n<span class="hljs-variable">@animation-duration-base:</span> <span class="hljs-number">0.3s</span>;\n<span class="hljs-variable">@animation-duration-fast:</span> <span class="hljs-number">0.2s</span>;\n<span class="hljs-variable">@animation-timing-function-enter:</span> ease-out;\n<span class="hljs-variable">@animation-timing-function-leave:</span> ease-in;\n\n<span class="hljs-comment">// Border</span>\n<span class="hljs-variable">@border-color:</span> <span class="hljs-variable">@gray-3</span>;\n<span class="hljs-variable">@border-width-base:</span> <span class="hljs-number">1px</span>;\n<span class="hljs-variable">@border-radius-sm:</span> <span class="hljs-number">2px</span>;\n<span class="hljs-variable">@border-radius-md:</span> <span class="hljs-number">4px</span>;\n<span class="hljs-variable">@border-radius-lg:</span> <span class="hljs-number">8px</span>;\n<span class="hljs-variable">@border-radius-max:</span> <span class="hljs-number">999px</span>;\n</code></pre></div><h2 id="ding-zhi-fang-fa" tabindex="-1">定制方法</h2><div class="van-doc-card"><h3 id="bu-zou-yi-yin-ru-yang-shi-yuan-wen-jian" tabindex="-1">步骤一 引入样式源文件</h3><p>定制主题时，需要引入组件对应的 Less 样式文件，支持按需引入和手动引入两种方式。</p><h4 id="an-xu-yin-ru-yang-shi-tui-jian" tabindex="-1">按需引入样式（推荐）</h4><p>在 babel.config.js 中配置按需引入样式源文件，注意 babel 6 不支持按需引入样式，请手动引入样式。</p><pre><code class="language-js"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = {\n  <span class="hljs-attr">plugins</span>: [\n    [\n      <span class="hljs-string">&#39;import&#39;</span>,\n      {\n        <span class="hljs-attr">libraryName</span>: <span class="hljs-string">&#39;vant&#39;</span>,\n        <span class="hljs-attr">libraryDirectory</span>: <span class="hljs-string">&#39;es&#39;</span>,\n        <span class="hljs-comment">// 指定样式路径</span>\n        <span class="hljs-attr">style</span>: <span class="hljs-function">(<span class="hljs-params">name</span>) =&gt;</span> <span class="hljs-string">`<span class="hljs-subst">${name}</span>/style/less`</span>,\n      },\n      <span class="hljs-string">&#39;vant&#39;</span>,\n    ],\n  ],\n};\n</code></pre><h4 id="shou-dong-yin-ru-yang-shi" tabindex="-1">手动引入样式</h4><pre><code class="language-js"><span class="hljs-comment">// 引入全部样式</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;vant/lib/index.less&#39;</span>;\n\n<span class="hljs-comment">// 引入单个组件样式</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;vant/lib/button/style/less&#39;</span>;\n</code></pre></div><div class="van-doc-card"><h3 id="bu-zou-er-xiu-gai-yang-shi-bian-liang" tabindex="-1">步骤二 修改样式变量</h3><p>使用 Less 提供的 <a href="http://lesscss.org/usage/#using-less-in-the-browser-modify-variables">modifyVars</a> 即可对变量进行修改，下面是参考的 webpack 配置。</p><pre><code class="language-js"><span class="hljs-comment">// webpack.config.js</span>\n<span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = {\n  <span class="hljs-attr">rules</span>: [\n    {\n      <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\\.less$/</span>,\n      <span class="hljs-attr">use</span>: [\n        <span class="hljs-comment">// ...其他 loader 配置</span>\n        {\n          <span class="hljs-attr">loader</span>: <span class="hljs-string">&#39;less-loader&#39;</span>,\n          <span class="hljs-attr">options</span>: {\n            <span class="hljs-comment">// 若 less-loader 版本小于 6.0，请移除 lessOptions 这一级，直接配置选项。</span>\n            <span class="hljs-attr">lessOptions</span>: {\n              <span class="hljs-attr">modifyVars</span>: {\n                <span class="hljs-comment">// 直接覆盖变量</span>\n                <span class="hljs-string">&#39;text-color&#39;</span>: <span class="hljs-string">&#39;#111&#39;</span>,\n                <span class="hljs-string">&#39;border-color&#39;</span>: <span class="hljs-string">&#39;#eee&#39;</span>,\n                <span class="hljs-comment">// 或者可以通过 less 文件覆盖（文件路径为绝对路径）</span>\n                <span class="hljs-attr">hack</span>: <span class="hljs-string">`true; @import &quot;your-less-file-path.less&quot;;`</span>,\n              },\n            },\n          },\n        },\n      ],\n    },\n  ],\n};\n</code></pre><p>如果 vue-cli 搭建的项目，可以在 <code>vue.config.js</code> 中进行配置。</p><pre><code class="language-js"><span class="hljs-comment">// vue.config.js</span>\n<span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = {\n  <span class="hljs-attr">css</span>: {\n    <span class="hljs-attr">loaderOptions</span>: {\n      <span class="hljs-attr">less</span>: {\n        <span class="hljs-comment">// 若 less-loader 版本小于 6.0，请移除 lessOptions 这一级，直接配置选项。</span>\n        <span class="hljs-attr">lessOptions</span>: {\n          <span class="hljs-attr">modifyVars</span>: {\n            <span class="hljs-comment">// 直接覆盖变量</span>\n            <span class="hljs-string">&#39;text-color&#39;</span>: <span class="hljs-string">&#39;#111&#39;</span>,\n            <span class="hljs-string">&#39;border-color&#39;</span>: <span class="hljs-string">&#39;#eee&#39;</span>,\n            <span class="hljs-comment">// 或者可以通过 less 文件覆盖（文件路径为绝对路径）</span>\n            <span class="hljs-attr">hack</span>: <span class="hljs-string">`true; @import &quot;your-less-file-path.less&quot;;`</span>,\n          },\n        },\n      },\n    },\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="vite-xiang-mu" tabindex="-1">Vite 项目</h3><p>如果是 vite 项目，可以跳过以上步骤，直接在 <code>vite.config.js</code> 中添加如下配置即可。</p><pre><code class="language-js"><span class="hljs-comment">// vite.config.js</span>\n<span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vitejs/plugin-vue&#39;</span>;\n<span class="hljs-keyword">import</span> styleImport <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vite-plugin-style-import&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">css</span>: {\n    <span class="hljs-attr">preprocessorOptions</span>: {\n      <span class="hljs-attr">less</span>: {\n        <span class="hljs-attr">javascriptEnabled</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-comment">// 覆盖样式变量</span>\n        <span class="hljs-attr">modifyVars</span>: {\n          <span class="hljs-string">&#39;text-color&#39;</span>: <span class="hljs-string">&#39;#111&#39;</span>,\n          <span class="hljs-string">&#39;border-color&#39;</span>: <span class="hljs-string">&#39;#eee&#39;</span>,\n        },\n      },\n    },\n  },\n  <span class="hljs-attr">resolve</span>: {\n    <span class="hljs-attr">alias</span>: [{ <span class="hljs-attr">find</span>: <span class="hljs-regexp">/^~/</span>, <span class="hljs-attr">replacement</span>: <span class="hljs-string">&#39;&#39;</span> }],\n  },\n  <span class="hljs-attr">plugins</span>: [\n    <span class="hljs-title function_">vue</span>(),\n    <span class="hljs-comment">// 按需引入样式源文件</span>\n    <span class="hljs-title function_">styleImport</span>({\n      <span class="hljs-attr">libs</span>: [\n        {\n          <span class="hljs-attr">libraryName</span>: <span class="hljs-string">&#39;vant&#39;</span>,\n          <span class="hljs-attr">esModule</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">resolveStyle</span>: <span class="hljs-function">(<span class="hljs-params">name</span>) =&gt;</span> <span class="hljs-string">`vant/es/<span class="hljs-subst">${name}</span>/style/less`</span>,\n        },\n      ],\n    }),\n  ],\n};\n</code></pre></div>',9),as=[ss],ts={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Q,as)))},ns={class:"van-doc-markdown-body"},ls=t('<h1>useClickAway</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Triggers a callback when user clicks outside of the target element.</p></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;root&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { useClickAway } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> root = <span class="hljs-title function_">ref</span>();\n    <span class="hljs-title function_">useClickAway</span>(root, <span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;click outside!&#39;</span>);\n    });\n\n    <span class="hljs-keyword">return</span> { root };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-event" tabindex="-1">Custom Event</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;root&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { useClickAway } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> root = <span class="hljs-title function_">ref</span>();\n    <span class="hljs-title function_">useClickAway</span>(\n      root,\n      <span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;touch outside!&#39;</span>);\n      },\n      { <span class="hljs-attr">eventName</span>: <span class="hljs-string">&#39;touchstart&#39;</span> }\n    );\n\n    <span class="hljs-keyword">return</span> { root };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="type-declarations" tabindex="-1">Type Declarations</h3><pre><code class="language-ts"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Options</span> = {\n  eventName?: <span class="hljs-built_in">string</span>;\n};\n\n<span class="hljs-keyword">function</span> <span class="hljs-title function_">useClickAway</span>(<span class="hljs-params">\n  target: Element | Ref&lt;Element | <span class="hljs-literal">undefined</span>&gt;,\n  listener: EventListener,\n  options?: Options\n</span>): <span class="hljs-built_in">void</span>;\n</code></pre></div><div class="van-doc-card"><h3 id="params" tabindex="-1">Params</h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default Value</th></tr></thead><tbody><tr><td>target</td><td>Target element</td><td><em>Element | Ref&lt;Element&gt;</em></td><td>-</td></tr><tr><td>listener</td><td>Callback function when the outside is clicked</td><td><em>EventListener</em></td><td>-</td></tr><tr><td>options</td><td>Options</td><td><em>Options</em></td><td><code>{ eventName: &#39;click&#39; }</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="options" tabindex="-1">Options</h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default Value</th></tr></thead><tbody><tr><td>eventName</td><td>Event name</td><td><em>string</em></td><td><code>click</code></td></tr></tbody></table></div>',9),es=[ls],ds={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",ns,es)))},ps={class:"van-doc-markdown-body"},cs=t('<h1>useClickAway</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>监听点击元素外部的事件。</p></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-ben-yong-fa" tabindex="-1">基本用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;root&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { useClickAway } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> root = <span class="hljs-title function_">ref</span>();\n    <span class="hljs-title function_">useClickAway</span>(root, <span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;click outside!&#39;</span>);\n    });\n\n    <span class="hljs-keyword">return</span> { root };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-shi-jian" tabindex="-1">自定义事件</h3><p>通过 <code>eventName</code> 选项可以自定义需要监听的事件类型。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;root&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { useClickAway } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> root = <span class="hljs-title function_">ref</span>();\n    <span class="hljs-title function_">useClickAway</span>(\n      root,\n      <span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;touch outside!&#39;</span>);\n      },\n      { <span class="hljs-attr">eventName</span>: <span class="hljs-string">&#39;touchstart&#39;</span> }\n    );\n\n    <span class="hljs-keyword">return</span> { root };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><pre><code class="language-ts"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Options</span> = {\n  eventName?: <span class="hljs-built_in">string</span>;\n};\n\n<span class="hljs-keyword">function</span> <span class="hljs-title function_">useClickAway</span>(<span class="hljs-params">\n  target: Element | Ref&lt;Element | <span class="hljs-literal">undefined</span>&gt;,\n  listener: EventListener,\n  options?: Options\n</span>): <span class="hljs-built_in">void</span>;\n</code></pre></div><div class="van-doc-card"><h3 id="can-shu" tabindex="-1">参数</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>target</td><td>绑定事件的元素</td><td><em>Element | Ref&lt;Element&gt;</em></td><td>-</td></tr><tr><td>listener</td><td>点击外部时触发的回调函数</td><td><em>EventListener</em></td><td>-</td></tr><tr><td>options</td><td>可选的配置项</td><td><em>Options</em></td><td>见下表</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="options" tabindex="-1">Options</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>eventName</td><td>监听的事件类型</td><td><em>string</em></td><td><code>click</code></td></tr></tbody></table></div>',9),os=[cs],rs={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",ps,os)))},is={class:"van-doc-markdown-body"},hs=t('<h1>useCountDown</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to manage the countdown.</p></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Total time：{{ current.total }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Remain days：{{ current.days }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Remain hours：{{ current.hours }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Remain minutes：{{ current.minutes }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Remain seconds：{{ current.seconds }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Remain milliseconds：{{ current.milliseconds }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { useCountDown } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> countDown = <span class="hljs-title function_">useCountDown</span>({\n      <span class="hljs-attr">time</span>: <span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>,\n    });\n\n    countDown.<span class="hljs-title function_">start</span>();\n\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">current</span>: countDown.<span class="hljs-property">current</span>,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="millisecond" tabindex="-1">Millisecond</h3><pre><code class="language-js"><span class="hljs-keyword">import</span> { useCountDown } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> countDown = <span class="hljs-title function_">useCountDown</span>({\n      <span class="hljs-attr">time</span>: <span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>,\n      <span class="hljs-attr">millisecond</span>: <span class="hljs-literal">true</span>,\n    });\n    countDown.<span class="hljs-title function_">start</span>();\n\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">current</span>: countDown.<span class="hljs-property">current</span>,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="type-declarations" tabindex="-1">Type Declarations</h3><pre><code class="language-ts"><span class="hljs-keyword">type</span> <span class="hljs-title class_">CurrentTime</span> = {\n  <span class="hljs-attr">days</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">hours</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">total</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">minutes</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">seconds</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">milliseconds</span>: <span class="hljs-built_in">number</span>;\n};\n\n<span class="hljs-keyword">type</span> <span class="hljs-title class_">CountDown</span> = {\n  <span class="hljs-attr">start</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;\n  <span class="hljs-attr">pause</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;\n  <span class="hljs-attr">reset</span>: <span class="hljs-function">(<span class="hljs-params">totalTime: <span class="hljs-built_in">number</span></span>) =&gt;</span> <span class="hljs-built_in">void</span>;\n  <span class="hljs-attr">current</span>: <span class="hljs-title class_">ComputedRef</span>&lt;<span class="hljs-title class_">CurrentTime</span>&gt;;\n};\n\n<span class="hljs-keyword">type</span> <span class="hljs-title class_">UseCountDownOptions</span> = {\n  <span class="hljs-attr">time</span>: <span class="hljs-built_in">number</span>;\n  millisecond?: <span class="hljs-built_in">boolean</span>;\n  onChange?: <span class="hljs-function">(<span class="hljs-params">current: CurrentTime</span>) =&gt;</span> <span class="hljs-built_in">void</span>;\n  onFinish?: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;\n};\n\n<span class="hljs-keyword">function</span> <span class="hljs-title function_">useCountDown</span>(<span class="hljs-params">options: UseCountDownOptions</span>): <span class="hljs-title class_">CountDown</span>;\n</code></pre></div><div class="van-doc-card"><h3 id="params" tabindex="-1">Params</h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default Value</th></tr></thead><tbody><tr><td>time</td><td>Total time, unit milliseconds</td><td><em>number</em></td><td>-</td></tr><tr><td>millisecond</td><td>Whether to enable millisecond render</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>onChange</td><td>Triggered when count down changed</td><td><em>(current: CurrentTime) =&gt; void</em></td><td>-</td></tr><tr><td>onFinish</td><td>Triggered when count down finished</td><td>-</td><td></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="return-value" tabindex="-1">Return Value</h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>current</td><td>Current remain time</td><td><em>CurrentTime</em></td></tr><tr><td>start</td><td>Start count down</td><td><em>() =&gt; void</em></td></tr><tr><td>pause</td><td>Pause count down</td><td><em>() =&gt; void</em></td></tr><tr><td>reset</td><td>Reset count down</td><td><em>(time?: number): void</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="currenttime-structure" tabindex="-1">CurrentTime Structure</h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>total</td><td>Total time, unit milliseconds</td><td><em>number</em></td></tr><tr><td>days</td><td>Remain days</td><td><em>number</em></td></tr><tr><td>hours</td><td>Remain hours</td><td><em>number</em></td></tr><tr><td>minutes</td><td>Remain minutes</td><td><em>number</em></td></tr><tr><td>seconds</td><td>Remain seconds</td><td><em>number</em></td></tr><tr><td>milliseconds</td><td>Remain milliseconds</td><td><em>number</em></td></tr></tbody></table></div>',10),js=[hs],us={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",is,js)))},gs={class:"van-doc-markdown-body"},ms=t('<h1>useCountDown</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>提供倒计时管理能力。</p></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-ben-yong-fa" tabindex="-1">基本用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>总时间：{{ current.total }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>剩余天数：{{ current.days }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>剩余小时：{{ current.hours }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>剩余分钟：{{ current.minutes }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>剩余秒数：{{ current.seconds }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>剩余毫秒：{{ current.milliseconds }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { useCountDown } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> countDown = <span class="hljs-title function_">useCountDown</span>({\n      <span class="hljs-comment">// 倒计时 24 小时</span>\n      <span class="hljs-attr">time</span>: <span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>,\n    });\n\n    <span class="hljs-comment">// 开始倒计时</span>\n    countDown.<span class="hljs-title function_">start</span>();\n\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">current</span>: countDown.<span class="hljs-property">current</span>,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="hao-miao-ji-xuan-ran" tabindex="-1">毫秒级渲染</h3><p>倒计时默认每秒渲染一次，设置 millisecond 选项可以开启毫秒级渲染。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { useCountDown } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> countDown = <span class="hljs-title function_">useCountDown</span>({\n      <span class="hljs-attr">time</span>: <span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>,\n      <span class="hljs-attr">millisecond</span>: <span class="hljs-literal">true</span>,\n    });\n    countDown.<span class="hljs-title function_">start</span>();\n\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">current</span>: countDown.<span class="hljs-property">current</span>,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><pre><code class="language-ts"><span class="hljs-keyword">type</span> <span class="hljs-title class_">CurrentTime</span> = {\n  <span class="hljs-attr">days</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">hours</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">total</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">minutes</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">seconds</span>: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">milliseconds</span>: <span class="hljs-built_in">number</span>;\n};\n\n<span class="hljs-keyword">type</span> <span class="hljs-title class_">CountDown</span> = {\n  <span class="hljs-attr">start</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;\n  <span class="hljs-attr">pause</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;\n  <span class="hljs-attr">reset</span>: <span class="hljs-function">(<span class="hljs-params">totalTime: <span class="hljs-built_in">number</span></span>) =&gt;</span> <span class="hljs-built_in">void</span>;\n  <span class="hljs-attr">current</span>: <span class="hljs-title class_">ComputedRef</span>&lt;<span class="hljs-title class_">CurrentTime</span>&gt;;\n};\n\n<span class="hljs-keyword">type</span> <span class="hljs-title class_">UseCountDownOptions</span> = {\n  <span class="hljs-attr">time</span>: <span class="hljs-built_in">number</span>;\n  millisecond?: <span class="hljs-built_in">boolean</span>;\n  onChange?: <span class="hljs-function">(<span class="hljs-params">current: CurrentTime</span>) =&gt;</span> <span class="hljs-built_in">void</span>;\n  onFinish?: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;\n};\n\n<span class="hljs-keyword">function</span> <span class="hljs-title function_">useCountDown</span>(<span class="hljs-params">options: UseCountDownOptions</span>): <span class="hljs-title class_">CountDown</span>;\n</code></pre></div><div class="van-doc-card"><h3 id="can-shu" tabindex="-1">参数</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>time</td><td>倒计时时长，单位毫秒</td><td><em>number</em></td><td>-</td></tr><tr><td>millisecond</td><td>是否开启毫秒级渲染</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>onChange</td><td>倒计时改变时触发的回调函数</td><td><em>(current: CurrentTime) =&gt; void</em></td><td>-</td></tr><tr><td>onFinish</td><td>倒计时结束时触发的回调函数</td><td>-</td><td></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fan-hui-zhi" tabindex="-1">返回值</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>current</td><td>当前剩余的时间</td><td><em>CurrentTime</em></td></tr><tr><td>start</td><td>开始倒计时</td><td><em>() =&gt; void</em></td></tr><tr><td>pause</td><td>暂停倒计时</td><td><em>() =&gt; void</em></td></tr><tr><td>reset</td><td>重置倒计时，支持传入新的倒计时时长</td><td><em>(time?: number): void</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="currenttime-ge-shi" tabindex="-1">CurrentTime 格式</h3><table><thead><tr><th>名称</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>total</td><td>剩余总时间（单位毫秒）</td><td><em>number</em></td></tr><tr><td>days</td><td>剩余天数</td><td><em>number</em></td></tr><tr><td>hours</td><td>剩余小时</td><td><em>number</em></td></tr><tr><td>minutes</td><td>剩余分钟</td><td><em>number</em></td></tr><tr><td>seconds</td><td>剩余秒数</td><td><em>number</em></td></tr><tr><td>milliseconds</td><td>剩余毫秒</td><td><em>number</em></td></tr></tbody></table></div>',10),vs=[ms],bs={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",gs,vs)))},fs={class:"van-doc-markdown-body"},ys=t('<h1>useCustomFieldValue</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to custom Field value.</p></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><p>If you want to custom Form items, you can insert your component into the <code>input</code> slot of the Field component, and call the <code>useCustomFieldValue</code> method inside your custom component.</p><h4 id="mycomponent" tabindex="-1">MyComponent</h4><pre><code class="language-js"><span class="hljs-comment">// MyComponent.vue</span>\n<span class="hljs-keyword">import</span> { useCustomFieldValue } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-title function_">useCustomFieldValue</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-string">&#39;Some value&#39;</span>);\n  },\n};\n</code></pre><h4 id="form" tabindex="-1">Form</h4><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-form</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;my-field&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Custom Field&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">my-component</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-form</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="type-declarations" tabindex="-1">Type Declarations</h3><pre><code class="language-ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">useCustomFieldValue</span>(<span class="hljs-params">customValue: () =&gt; unknown</span>): <span class="hljs-built_in">void</span>;\n</code></pre></div><div class="van-doc-card"><h3 id="params" tabindex="-1">Params</h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default Value</th></tr></thead><tbody><tr><td>customValue</td><td>Function to get field value</td><td><em>() =&gt; unknown</em></td><td>-</td></tr></tbody></table></div>',7),ws=[ys],qs={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",fs,ws)))},xs={class:"van-doc-markdown-body"},ks=t('<h1>useCustomFieldValue</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于自定义 Form 组件中的表单项。</p></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-ben-yong-fa" tabindex="-1">基本用法</h3><p>如果需要自定义表单项，可以在 Field 组件的 <code>input</code> 插槽中插入你的自定义组件，并在自定义组件内部调用 <code>useCustomFieldValue</code> 方法。</p><h4 id="zi-ding-yi-zu-jian" tabindex="-1">自定义组件</h4><p>首先，在你的自定义组件中，调用 <code>useCustomFieldValue</code> 方法，并传入一个回调函数，这个函数返回值为表单项的值。</p><pre><code class="language-js"><span class="hljs-comment">// MyComponent.vue</span>\n<span class="hljs-keyword">import</span> { useCustomFieldValue } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-comment">// 此处传入的值会替代 Field 组件内部的 value</span>\n    <span class="hljs-title function_">useCustomFieldValue</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-string">&#39;Some value&#39;</span>);\n  },\n};\n</code></pre><h4 id="biao-dan" tabindex="-1">表单</h4><p>接着，在 Form 组件中嵌入你的自定义组件，当提交表单时，即可获取到自定义表单项的值。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-form</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- 这是一个自定义表单项 --&gt;</span>\n  <span class="hljs-comment">&lt;!-- 当表单提交时，会包括 useCustomFieldValue 中传入的值 --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;my-field&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;自定义表单项&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">my-component</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-form</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><pre><code class="language-ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">useCustomFieldValue</span>(<span class="hljs-params">customValue: () =&gt; unknown</span>): <span class="hljs-built_in">void</span>;\n</code></pre></div><div class="van-doc-card"><h3 id="can-shu" tabindex="-1">参数</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>customValue</td><td>获取表单项值的函数</td><td><em>() =&gt; unknown</em></td><td>-</td></tr></tbody></table></div>',7),zs=[ks],_s={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",xs,zs)))},Cs={class:"van-doc-markdown-body"},Ss=t('<h1>useEventListener</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>方便地进行事件绑定，在组件 <code>mounted</code> 和 <code>activated</code> 时绑定事件，<code>unmounted</code> 和 <code>deactivated</code> 时解绑事件。</p></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-ben-yong-fa" tabindex="-1">基本用法</h3><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { useEventListener } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-comment">// 在 window 上绑定 resize 事件</span>\n    <span class="hljs-comment">// 未指定监听对象时，默认会监听 window 的事件</span>\n    <span class="hljs-title function_">useEventListener</span>(<span class="hljs-string">&#39;resize&#39;</span>, <span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;window resize&#39;</span>);\n    });\n\n    <span class="hljs-comment">// 在 body 元素上绑定 click 事件</span>\n    <span class="hljs-title function_">useEventListener</span>(\n      <span class="hljs-string">&#39;click&#39;</span>,\n      <span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;click body&#39;</span>);\n      },\n      { <span class="hljs-attr">target</span>: <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span> }\n    );\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><pre><code class="language-ts"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Options</span> = {\n  target?: <span class="hljs-title class_">EventTarget</span> | <span class="hljs-title class_">Ref</span>&lt;<span class="hljs-title class_">EventTarget</span>&gt;;\n  capture?: <span class="hljs-built_in">boolean</span>;\n  passive?: <span class="hljs-built_in">boolean</span>;\n};\n\n<span class="hljs-keyword">function</span> <span class="hljs-title function_">useEventListener</span>(<span class="hljs-params">\n  <span class="hljs-keyword">type</span>: <span class="hljs-built_in">string</span>,\n  listener: EventListener,\n  options?: Options\n</span>): <span class="hljs-built_in">void</span>;\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="can-shu" tabindex="-1">参数</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>监听的事件类型</td><td><em>string</em></td><td>-</td></tr><tr><td>listener</td><td>点击外部时触发的回调函数</td><td><em>EventListener</em></td><td>-</td></tr><tr><td>options</td><td>可选的配置项</td><td><em>Options</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="options" tabindex="-1">Options</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>target</td><td>绑定事件的元素</td><td><em>EventTarget | Ref&lt;EventTarget&gt;</em></td><td><code>window</code></td></tr><tr><td>capture</td><td>是否在事件捕获阶段触发</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>passive</td><td>设置为 <code>true</code> 时，表示 <code>listener</code> 永远不会调用 <code>preventDefault</code></td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div>',8),Ts=[Ss],Is={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Cs,Ts)))},Ps={class:"van-doc-markdown-body"},Ds=t('<h1>usePageVisibility</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>获取页面的可见状态。</p></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-ben-yong-fa" tabindex="-1">基本用法</h3><pre><code class="language-js"><span class="hljs-keyword">import</span> { watch } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { usePageVisibility } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> pageVisibility = <span class="hljs-title function_">usePageVisibility</span>();\n\n    <span class="hljs-title function_">watch</span>(pageVisibility, <span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;visibility: &#39;</span>, value);\n    });\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><pre><code class="language-ts"><span class="hljs-keyword">type</span> <span class="hljs-title class_">VisibilityState</span> = <span class="hljs-string">&#39;visible&#39;</span> | <span class="hljs-string">&#39;hidden&#39;</span>;\n\n<span class="hljs-keyword">function</span> <span class="hljs-title function_">usePageVisibility</span>(<span class="hljs-params"></span>): <span class="hljs-title class_">Ref</span>&lt;<span class="hljs-title class_">VisibilityState</span>&gt;;\n</code></pre></div><div class="van-doc-card"><h3 id="fan-hui-zhi" tabindex="-1">返回值</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>visibilityState</td><td>页面当前的可见状态，<code>visible</code> 为可见，<code>hidden</code> 为隐藏</td><td><em>Ref&lt;VisibilityState&gt;</em></td></tr></tbody></table></div>',7),As=[Ds],Ns={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ps,As)))},Es={class:"van-doc-markdown-body"},Rs=t('<h1>useRect</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>获取元素的大小及其相对于视口的位置，等价于 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getBoundingClientRect">Element.getBoundingClientRect</a>。</p></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-ben-yong-fa" tabindex="-1">基本用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;root&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { useRect } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> root = <span class="hljs-title function_">ref</span>();\n    <span class="hljs-keyword">const</span> rect = <span class="hljs-title function_">useRect</span>(root);\n\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(rect); <span class="hljs-comment">// -&gt; 元素的大小及其相对于视口的位置</span>\n\n    <span class="hljs-keyword">return</span> { root };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><pre><code class="language-ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">useRect</span>(<span class="hljs-params">\n  element: Element | Window | Ref&lt;Element | Window | <span class="hljs-literal">undefined</span>&gt;\n</span>): DOMRect;\n</code></pre></div><div class="van-doc-card"><h3 id="fan-hui-zhi" tabindex="-1">返回值</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>width</td><td>宽度</td><td><em>number</em></td></tr><tr><td>height</td><td>高度</td><td><em>number</em></td></tr><tr><td>top</td><td>顶部与视图窗口左上角的距离</td><td><em>number</em></td></tr><tr><td>left</td><td>左侧与视图窗口左上角的距离</td><td><em>number</em></td></tr><tr><td>right</td><td>右侧与视图窗口左上角的距离</td><td><em>number</em></td></tr><tr><td>bottom</td><td>底部与视图窗口左上角的距离</td><td><em>number</em></td></tr></tbody></table></div>',7),Us=[Rs],Bs={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Es,Us)))},Vs={class:"van-doc-markdown-body"},Ls=t('<h1>useRelation</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>建立父子组件之间的关联关系，进行数据通信和方法调用，基于 <code>provide</code> 和 <code>inject</code> 实现。</p></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-ben-yong-fa" tabindex="-1">基本用法</h3><p>在父组件中使用 <code>useChildren</code> 关联子组件:</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { useChildren } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">const</span> <span class="hljs-variable constant_">RELATION_KEY</span> = <span class="hljs-title class_">Symbol</span>(<span class="hljs-string">&#39;my-relation&#39;</span>);\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> { linkChildren } = <span class="hljs-title function_">useChildren</span>(<span class="hljs-variable constant_">RELATION_KEY</span>);\n\n    <span class="hljs-keyword">const</span> count = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">add</span> = (<span class="hljs-params"></span>) =&gt; {\n      count.<span class="hljs-property">value</span>++;\n    };\n\n    <span class="hljs-comment">// 向子组件提供数据和方法</span>\n    <span class="hljs-title function_">linkChildren</span>({ add, count });\n  },\n};\n</code></pre><p>在子组件中使用 <code>useParent</code> 获取父组件提供的数据和方法:</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { useParent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> { parent } = <span class="hljs-title function_">useParent</span>(<span class="hljs-variable constant_">RELATION_KEY</span>);\n\n    <span class="hljs-comment">// 调用父组件提供的数据和方法</span>\n    <span class="hljs-keyword">if</span> (parent) {\n      parent.<span class="hljs-title function_">add</span>();\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(parent.<span class="hljs-property">count</span>.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; 1</span>\n    }\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><pre><code class="language-ts"><span class="hljs-keyword">function</span> useParent&lt;T&gt;(<span class="hljs-attr">key</span>: <span class="hljs-built_in">string</span> | symbol): {\n  parent?: T;\n  index?: <span class="hljs-title class_">Ref</span>&lt;<span class="hljs-built_in">number</span>&gt;;\n};\n\n<span class="hljs-keyword">function</span> <span class="hljs-title function_">useChildren</span>(<span class="hljs-params">key: <span class="hljs-built_in">string</span> | symbol</span>): {\n  <span class="hljs-attr">children</span>: <span class="hljs-title class_">ComponentPublicInstance</span>[];\n  <span class="hljs-attr">linkChildren</span>: <span class="hljs-function">(<span class="hljs-params">value: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-built_in">void</span>;\n};\n</code></pre></div><div class="van-doc-card"><h3 id="useparent-fan-hui-zhi" tabindex="-1">useParent 返回值</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>parent</td><td>父组件提供的值</td><td><em>any</em></td></tr><tr><td>index</td><td>当前组件在父组件的所有子组件中对应的索引位置</td><td><em>Ref&lt;number&gt;</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="usechildren-fan-hui-zhi" tabindex="-1">useChildren 返回值</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>children</td><td>子组件列表</td><td><em>ComponentPublicInstance[]</em></td></tr><tr><td>linkChildren</td><td>向子组件提供值的方法</td><td><em>(value: any) =&gt; void</em></td></tr></tbody></table></div>',8),Fs=[Ls],Ws={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Vs,Fs)))},Ms={class:"van-doc-markdown-body"},Os=t('<h1>useScrollParent</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>获取元素最近的可滚动父元素。</p></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-ben-yong-fa" tabindex="-1">基本用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;root&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref, watch } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { useScrollParent, useEventListener } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> root = <span class="hljs-title function_">ref</span>();\n    <span class="hljs-keyword">const</span> scrollParent = <span class="hljs-title function_">useScrollParent</span>(root);\n\n    <span class="hljs-title function_">useEventListener</span>(\n      <span class="hljs-string">&#39;scroll&#39;</span>,\n      <span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;scroll&#39;</span>);\n      },\n      { <span class="hljs-attr">target</span>: scrollParent }\n    );\n\n    <span class="hljs-keyword">return</span> { root };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><pre><code class="language-ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">useScrollParent</span>(<span class="hljs-params">\n  element: Ref&lt;Element | <span class="hljs-literal">undefined</span>&gt;\n</span>): <span class="hljs-title class_">Ref</span>&lt;<span class="hljs-title class_">Element</span> | <span class="hljs-title class_">Window</span> | <span class="hljs-literal">undefined</span>&gt;;\n</code></pre></div><div class="van-doc-card"><h3 id="can-shu" tabindex="-1">参数</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>element</td><td>当前元素</td><td><em>Ref&lt;Element&gt;</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fan-hui-zhi" tabindex="-1">返回值</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>scrollParent</td><td>最近的可滚动父元素</td><td><em>Ref&lt;Element&gt;</em></td></tr></tbody></table></div>',8),Gs=[Os],Hs={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ms,Gs)))},Ks={class:"van-doc-markdown-body"},$s=t('<h1>useToggle</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to switch between <code>true</code> and <code>false</code>.</p></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-js"><span class="hljs-keyword">import</span> { useToggle } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> [state, toggle] = <span class="hljs-title function_">useToggle</span>();\n\n    <span class="hljs-title function_">toggle</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(state.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; true</span>\n\n    <span class="hljs-title function_">toggle</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(state.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; false</span>\n\n    <span class="hljs-title function_">toggle</span>();\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(state.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; true</span>\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="default-value" tabindex="-1">Default Value</h3><pre><code class="language-js"><span class="hljs-keyword">import</span> { useToggle } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> [state, toggle] = <span class="hljs-title function_">useToggle</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(state.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; true</span>\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="type-declarations" tabindex="-1">Type Declarations</h3><pre><code class="language-ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">useToggle</span>(<span class="hljs-params">\n  defaultValue: <span class="hljs-built_in">boolean</span>\n</span>): [<span class="hljs-title class_">Ref</span>&lt;<span class="hljs-built_in">boolean</span>&gt;, <span class="hljs-function">(<span class="hljs-params">newValue: <span class="hljs-built_in">boolean</span></span>) =&gt;</span> <span class="hljs-built_in">void</span>];\n</code></pre></div><div class="van-doc-card"><h3 id="params" tabindex="-1">Params</h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default Value</th></tr></thead><tbody><tr><td>defaultValue</td><td>Default value</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="return-value" tabindex="-1">Return Value</h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>state</td><td>State</td><td><em>Ref&lt;boolean&gt;</em></td></tr><tr><td>toggle</td><td>Function to switch state</td><td><em>(newValue?: boolean) =&gt; void</em></td></tr></tbody></table></div>',9),Js=[$s],Xs={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ks,Js)))},Ys={class:"van-doc-markdown-body"},Zs=t('<h1>useToggle</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于在 <code>true</code> 和 <code>false</code> 之间进行切换。</p></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-ben-yong-fa" tabindex="-1">基本用法</h3><pre><code class="language-js"><span class="hljs-keyword">import</span> { useToggle } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> [state, toggle] = <span class="hljs-title function_">useToggle</span>();\n\n    <span class="hljs-title function_">toggle</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(state.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; true</span>\n\n    <span class="hljs-title function_">toggle</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(state.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; false</span>\n\n    <span class="hljs-title function_">toggle</span>();\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(state.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; true</span>\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="she-zhi-mo-ren-zhi" tabindex="-1">设置默认值</h3><pre><code class="language-js"><span class="hljs-keyword">import</span> { useToggle } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> [state, toggle] = <span class="hljs-title function_">useToggle</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(state.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; true</span>\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><pre><code class="language-ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">useToggle</span>(<span class="hljs-params">\n  defaultValue: <span class="hljs-built_in">boolean</span>\n</span>): [<span class="hljs-title class_">Ref</span>&lt;<span class="hljs-built_in">boolean</span>&gt;, <span class="hljs-function">(<span class="hljs-params">newValue: <span class="hljs-built_in">boolean</span></span>) =&gt;</span> <span class="hljs-built_in">void</span>];\n</code></pre></div><div class="van-doc-card"><h3 id="can-shu" tabindex="-1">参数</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>defaultValue</td><td>默认值</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fan-hui-zhi" tabindex="-1">返回值</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>state</td><td>状态值</td><td><em>Ref&lt;boolean&gt;</em></td></tr><tr><td>toggle</td><td>切换状态值的函数</td><td><em>(newValue?: boolean) =&gt; void</em></td></tr></tbody></table></div>',9),Qs=[Zs],sa={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ys,Qs)))},aa={class:"van-doc-markdown-body"},ta=t('<h1>useWindowSize</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>获取浏览器窗口的视口宽度和高度，并在窗口大小变化时自动更新。</p></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-ben-yong-fa" tabindex="-1">基本用法</h3><pre><code class="language-js"><span class="hljs-keyword">import</span> { watch } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { useWindowSize } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> { width, height } = <span class="hljs-title function_">useWindowSize</span>();\n\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(width.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; 窗口宽度</span>\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(height.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; 窗口高度</span>\n\n    <span class="hljs-title function_">watch</span>([width, height], <span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;window resized&#39;</span>);\n    });\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><pre><code class="language-ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">useWindowSize</span>(<span class="hljs-params"></span>): {\n  <span class="hljs-attr">width</span>: <span class="hljs-title class_">Ref</span>&lt;<span class="hljs-built_in">number</span>&gt;;\n  <span class="hljs-attr">height</span>: <span class="hljs-title class_">Ref</span>&lt;<span class="hljs-built_in">number</span>&gt;;\n};\n</code></pre></div><div class="van-doc-card"><h3 id="fan-hui-zhi" tabindex="-1">返回值</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>width</td><td>浏览器窗口宽度</td><td><em>Ref&lt;number&gt;</em></td></tr><tr><td>height</td><td>浏览器窗口高度</td><td><em>Ref&lt;number&gt;</em></td></tr></tbody></table></div>',7),na=[ta],la={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",aa,na)))},ea={class:"van-doc-markdown-body"},da=t('<h1>Composables</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Vant provide some built-in composition APIs, you can directly use these APIs for development.</p></div><div class="van-doc-card"><h3 id="demo" tabindex="-1">Demo</h3><pre><code class="language-js"><span class="hljs-keyword">import</span> { useWindowSize } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">const</span> { width, height } = <span class="hljs-title function_">useWindowSize</span>();\n\n<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(width.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; window width</span>\n<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(height.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; window height</span>\n</code></pre></div><div class="van-doc-card"><h3 id="api-list" tabindex="-1">API List</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><a href="#/en-US/use-click-away">useClickAway</a></td><td>Triggers a callback when user clicks outside of the target element</td></tr><tr><td><a href="#/en-US/use-count-down">useCountDown</a></td><td>Used to manage the countdown</td></tr><tr><td><a href="#/en-US/use-toggle">useToggle</a></td><td>Used to switch between <code>true</code> and <code>false</code></td></tr></tbody></table></div>',4),pa=[da],ca={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",ea,pa)))},oa={class:"van-doc-markdown-body"},ra=t('<h1>组合式 API</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>Vant 内置了一系列的组合式 API，对于安装了 <code>vant</code> 的项目，可以直接使用这些 API 进行开发。</p></div><div class="van-doc-card"><h3 id="shi-li" tabindex="-1">示例</h3><p>下面是一个 Vant 组合式 API 的用法示例，我们从 <code>@vant/use</code> 这个包中引入 <code>useWindowSize</code> 方法，然后进行调用，即可获取到当前 Window 的宽度和高度。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { useWindowSize } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">const</span> { width, height } = <span class="hljs-title function_">useWindowSize</span>();\n\n<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(width.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; 窗口宽度</span>\n<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(height.<span class="hljs-property">value</span>); <span class="hljs-comment">// -&gt; 窗口高度</span>\n</code></pre></div><div class="van-doc-card"><h3 id="api-lie-biao" tabindex="-1">API 列表</h3><p>下面是 Vant 对外提供的所有组合式 API，点击名称可以查看详细介绍：</p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td><a href="#/zh-CN/use-click-away">useClickAway</a></td><td>监听点击元素外部的事件</td></tr><tr><td><a href="#/zh-CN/use-count-down">useCountDown</a></td><td>提供倒计时管理能力</td></tr><tr><td><a href="#/zh-CN/use-event-listener">useEventListener</a></td><td>方便地进行事件绑定</td></tr><tr><td><a href="#/zh-CN/use-page-visibility">usePageVisibility</a></td><td>获取页面的可见状态</td></tr><tr><td><a href="#/zh-CN/use-rect">useRect</a></td><td>获取元素的大小及其相对于视口的位置</td></tr><tr><td><a href="#/zh-CN/use-relation">useRelation</a></td><td>建立父子组件之间的关联关系</td></tr><tr><td><a href="#/zh-CN/use-scroll-parent">useScrollParent</a></td><td>获取元素最近的可滚动父元素</td></tr><tr><td><a href="#/zh-CN/use-toggle">useToggle</a></td><td>用于在布尔值之间进行切换</td></tr><tr><td><a href="#/zh-CN/use-window-size">useWindowSize</a></td><td>获取浏览器窗口的视口宽度和高度</td></tr></tbody></table></div>',4),ia=[ra],ha={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",oa,ia)))},ja={class:"van-doc-markdown-body"},ua=t('<h1>ActionBar 动作栏</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于为页面相关操作提供便捷交互。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ActionBar</span>, <span class="hljs-title class_">ActionBarIcon</span>, <span class="hljs-title class_">ActionBarButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ActionBar</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ActionBarIcon</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ActionBarButton</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;客服&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onClickIcon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;cart-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;购物车&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onClickIcon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;shop-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;店铺&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onClickIcon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;立即购买&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onClickButton&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-action-bar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickIcon</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;点击图标&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickButton</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;点击按钮&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      onClickIcon,\n      onClickButton,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="hui-biao-ti-shi" tabindex="-1">徽标提示</h3><p>在 ActionBarIcon 组件上设置 <code>dot</code> 属性后，会在图标右上角展示一个小红点；设置 <code>badge</code> 属性后，会在图标右上角展示相应的徽标。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;客服&quot;</span> <span class="hljs-attr">dot</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;cart-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;购物车&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;5&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;shop-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;店铺&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;12&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;加入购物车&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;立即购买&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-action-bar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-tu-biao-yan-se" tabindex="-1">自定义图标颜色</h3><p>通过 ActionBarIcon 的 <code>color</code> 属性可以自定义图标的颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;客服&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;cart-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;购物车&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;star&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;已收藏&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#ff5000&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;加入购物车&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;立即购买&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-action-bar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-an-niu-yan-se" tabindex="-1">自定义按钮颜色</h3><p>通过 ActionBarButton 的 <code>color</code> 属性可以自定义按钮的颜色，支持传入 <code>linear-gradient</code> 渐变色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;客服&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;shop-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;店铺&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#be99ff&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;加入购物车&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#7232dd&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;立即购买&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-action-bar</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="actionbar-props" tabindex="-1">ActionBar Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>safe-area-inset-bottom</td><td>是否开启<a href="#/zh-CN/advanced-usage#di-bu-an-quan-qu-gua-pei">底部安全区适配</a></td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="actionbaricon-props" tabindex="-1">ActionBarIcon Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>text</td><td>按钮文字</td><td><em>string</em></td><td>-</td></tr><tr><td>icon</td><td>图标</td><td><em>string</em></td><td>-</td></tr><tr><td>color</td><td>图标颜色</td><td><em>string</em></td><td><code>#323233</code></td></tr><tr><td>icon-class</td><td>图标额外类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>icon-prefix <code>v3.0.17</code></td><td>图标类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props">class-prefix 属性</a></td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>dot</td><td>是否显示图标右上角小红点</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>badge</td><td>图标右上角徽标的内容</td><td><em>number | string</em></td><td>-</td></tr><tr><td>url</td><td>点击后跳转的链接地址</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>点击后跳转的目标路由对象，等同于 vue-router 的 <a href="https://router.vuejs.org/zh/api/#to">to 属性</a></td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>是否在跳转时替换当前页面历史</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="actionbarbutton-props" tabindex="-1">ActionBarButton Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>text</td><td>按钮文字</td><td><em>string</em></td><td>-</td></tr><tr><td>type</td><td>按钮类型，可选值为 <code>primary</code> <code>info</code> <code>warning</code> <code>danger</code></td><td><em>string</em></td><td><code>default</code></td></tr><tr><td>color</td><td>按钮颜色，支持传入 <code>linear-gradient</code> 渐变色</td><td><em>string</em></td><td>-</td></tr><tr><td>icon</td><td>左侧<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td>-</td></tr><tr><td>disabled</td><td>是否禁用按钮</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loading</td><td>是否显示为加载状态</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>url</td><td>点击后跳转的链接地址</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>点击后跳转的目标路由对象，等同于 vue-router 的 <a href="https://router.vuejs.org/zh/api/#to">to 属性</a></td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>是否在跳转时替换当前页面历史</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="actionbaricon-slots" tabindex="-1">ActionBarIcon Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>文本内容</td></tr><tr><td>icon</td><td>自定义图标</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="actionbarbutton-slots" tabindex="-1">ActionBarButton Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>按钮显示内容</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-action-bar-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-action-bar-height</td><td><em>50px</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-width</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-height</td><td><em>100%</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-size</td><td><em>18px</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-font-size</td><td><em>var(–van-font-size-xs)</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-active-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-text-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-action-bar-button-height</td><td><em>40px</em></td><td>-</td></tr><tr><td>–van-action-bar-button-warning-color</td><td><em>var(–van-gradient-orange)</em></td><td>-</td></tr><tr><td>–van-action-bar-button-danger-color</td><td><em>var(–van-gradient-red)</em></td><td>-</td></tr></tbody></table></div>',16),ga=[ua],ma={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",ja,ga)))},va={class:"van-doc-markdown-body"},ba=t('<h1>ActionSheet 动作面板</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>底部弹起的模态面板，包含与当前情境相关的多个选项。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ActionSheet</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ActionSheet</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>动作面板通过 <code>actions</code> 属性来定义选项，<code>actions</code> 属性是一个由对象构成的数组，数组中的每个对象配置一列，对象格式见文档下方表格。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">is-link</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;基础用法&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-action-sheet</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span> @<span class="hljs-attr">select</span>=<span class="hljs-string">&quot;onSelect&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;选项一&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;选项二&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;选项三&#39;</span> },\n    ];\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSelect</span> = (<span class="hljs-params">item</span>) =&gt; {\n      <span class="hljs-comment">// 默认情况下点击选项时不会自动收起</span>\n      <span class="hljs-comment">// 可以通过 close-on-click-action 属性开启自动收起</span>\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      <span class="hljs-title class_">Toast</span>(item.<span class="hljs-property">name</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      actions,\n      onSelect,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zhan-shi-qu-xiao-an-niu" tabindex="-1">展示取消按钮</h3><p>设置 <code>cancel-text</code> 属性后，会在底部展示取消按钮，点击后关闭当前面板并触发 <code>cancel</code> 事件。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-sheet</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span>\n  <span class="hljs-attr">cancel-text</span>=<span class="hljs-string">&quot;取消&quot;</span>\n  <span class="hljs-attr">close-on-click-action</span>\n  @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;onCancel&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;选项一&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;选项二&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;选项三&#39;</span> },\n    ];\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onCancel</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;取消&#39;</span>);\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      actions,\n      onCancel,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zhan-shi-miao-shu-xin-xi" tabindex="-1">展示描述信息</h3><p>通过 <code>description</code> 可以在菜单顶部显示描述信息，通过选项的 <code>subname</code> 属性可以在选项文字的右侧展示描述信息。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-sheet</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span>\n  <span class="hljs-attr">cancel-text</span>=<span class="hljs-string">&quot;取消&quot;</span>\n  <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;这是一段描述信息&quot;</span>\n  <span class="hljs-attr">close-on-click-action</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;选项一&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;选项二&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;选项三&#39;</span>, <span class="hljs-attr">subname</span>: <span class="hljs-string">&#39;描述信息&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      actions,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xuan-xiang-zhuang-tai" tabindex="-1">选项状态</h3><p>可以通过 <code>loading</code> 和 <code>disabled</code> 将选项设置为加载状态或禁用状态，或者通过<code>color</code>设置选项的颜色</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-sheet</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span>\n  <span class="hljs-attr">cancel-text</span>=<span class="hljs-string">&quot;取消&quot;</span>\n  <span class="hljs-attr">close-on-click-action</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;着色选项&#39;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#39;#ee0a24&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;禁用选项&#39;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;加载选项&#39;</span>, <span class="hljs-attr">loading</span>: <span class="hljs-literal">true</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      actions,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-mian-ban" tabindex="-1">自定义面板</h3><p>通过插槽可以自定义面板的展示内容，同时可以使用<code>title</code>属性展示标题栏</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-sheet</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-action-sheet</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.content</span> {\n    <span class="hljs-attribute">padding</span>: <span class="hljs-number">16px</span> <span class="hljs-number">16px</span> <span class="hljs-number">160px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model:show</td><td>是否显示动作面板</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>actions</td><td>面板选项列表</td><td><em>ActionSheetAction[]</em></td><td><code>[]</code></td></tr><tr><td>title</td><td>顶部标题</td><td><em>string</em></td><td>-</td></tr><tr><td>cancel-text</td><td>取消按钮文字</td><td><em>string</em></td><td>-</td></tr><tr><td>description</td><td>选项上方的描述信息</td><td><em>string</em></td><td>-</td></tr><tr><td>closeable</td><td>是否显示关闭图标</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-icon</td><td>关闭<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td><code>cross</code></td></tr><tr><td>duration</td><td>动画时长，单位秒，设置为 0 可以禁用动画</td><td><em>number | string</em></td><td><code>0.3</code></td></tr><tr><td>round</td><td>是否显示圆角</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>overlay</td><td>是否显示遮罩层</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>overlay-class</td><td>自定义遮罩层类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>overlay-style</td><td>自定义遮罩层样式</td><td><em>object</em></td><td>-</td></tr><tr><td>lock-scroll</td><td>是否锁定背景滚动</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>lazy-render</td><td>是否在显示弹层时才渲染节点</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-popstate</td><td>是否在页面回退时自动关闭</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>close-on-click-action</td><td>是否在点击选项后关闭</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>close-on-click-overlay</td><td>是否在点击遮罩层后关闭</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>safe-area-inset-bottom</td><td>是否开启<a href="#/zh-CN/advanced-usage#di-bu-an-quan-qu-gua-pei">底部安全区适配</a></td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>teleport</td><td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#teleport">to 属性</a></td><td><em>string | Element</em></td><td>-</td></tr><tr><td>before-close <code>v3.1.4</code></td><td>关闭前的回调函数，返回 <code>false</code> 可阻止关闭，支持返回 Promise</td><td><em>(action: string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="action-shu-ju-jie-gou" tabindex="-1">Action 数据结构</h3><p><code>actions</code> 属性是一个由对象构成的数组，数组中的每个对象配置一列，对象可以包含以下值：</p><table><thead><tr><th>键名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>name</td><td>标题</td><td><em>string</em></td></tr><tr><td>subname</td><td>二级标题</td><td><em>string</em></td></tr><tr><td>color</td><td>选项文字颜色</td><td><em>string</em></td></tr><tr><td>className</td><td>为对应列添加额外的 class</td><td><em>string | Array | object</em></td></tr><tr><td>loading</td><td>是否为加载状态</td><td><em>boolean</em></td></tr><tr><td>disabled</td><td>是否为禁用状态</td><td><em>boolean</em></td></tr><tr><td>callback</td><td>点击时触发的回调函数</td><td><em>action: ActionSheetAction</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>select</td><td>点击选项时触发，禁用或加载状态下不会触发</td><td><em>action: ActionSheetAction, index: number</em></td></tr><tr><td>cancel</td><td>点击取消按钮时触发</td><td>-</td></tr><tr><td>open</td><td>打开面板时触发</td><td>-</td></tr><tr><td>close</td><td>关闭面板时触发</td><td>-</td></tr><tr><td>opened</td><td>打开面板且动画结束后触发</td><td>-</td></tr><tr><td>closed</td><td>关闭面板且动画结束后触发</td><td>-</td></tr><tr><td>click-overlay</td><td>点击遮罩层时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>自定义面板的展示内容</td></tr><tr><td>description</td><td>自定义描述文案</td></tr><tr><td>cancel <code>v3.0.10</code></td><td>自定义取消按钮内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ActionSheetAction</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-action-sheet-max-height</td><td><em>80%</em></td><td>-</td></tr><tr><td>–van-action-sheet-header-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-action-sheet-header-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-action-sheet-description-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-action-sheet-description-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-action-sheet-description-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-action-sheet-item-background</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-action-sheet-item-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-action-sheet-item-line-height</td><td><em>var(–van-line-height-lg)</em></td><td>-</td></tr><tr><td>–van-action-sheet-item-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-action-sheet-item-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-action-sheet-subname-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-action-sheet-subname-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-action-sheet-subname-line-height</td><td><em>var(–van-line-height-sm)</em></td><td>-</td></tr><tr><td>–van-action-sheet-close-icon-size</td><td><em>22px</em></td><td>-</td></tr><tr><td>–van-action-sheet-close-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-action-sheet-close-icon-active-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-action-sheet-close-icon-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-action-sheet-cancel-text-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-action-sheet-cancel-padding-top</td><td><em>var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-action-sheet-cancel-padding-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-action-sheet-loading-icon-size</td><td><em>22px</em></td><td>-</td></tr></tbody></table></div>',17),fa=[ba],ya={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",va,fa)))},wa={class:"van-doc-markdown-body"},qa=t('<h1>AddressEdit 地址编辑</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>地址编辑组件，用于新建、更新、删除地址信息。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">AddressEdit</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">AddressEdit</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-address-edit</span>\n  <span class="hljs-attr">:area-list</span>=<span class="hljs-string">&quot;areaList&quot;</span>\n  <span class="hljs-attr">show-postal</span>\n  <span class="hljs-attr">show-delete</span>\n  <span class="hljs-attr">show-set-default</span>\n  <span class="hljs-attr">show-search-result</span>\n  <span class="hljs-attr">:search-result</span>=<span class="hljs-string">&quot;searchResult&quot;</span>\n  <span class="hljs-attr">:area-columns-placeholder</span>=<span class="hljs-string">&quot;[&#39;请选择&#39;, &#39;请选择&#39;, &#39;请选择&#39;]&quot;</span>\n  @<span class="hljs-attr">save</span>=<span class="hljs-string">&quot;onSave&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n  @<span class="hljs-attr">change-detail</span>=<span class="hljs-string">&quot;onChangeDetail&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> searchResult = <span class="hljs-title function_">ref</span>([]);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSave</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;save&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onDelete</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;delete&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChangeDetail</span> = (<span class="hljs-params">val</span>) =&gt; {\n      <span class="hljs-keyword">if</span> (val) {\n        searchResult.<span class="hljs-property">value</span> = [\n          {\n            <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;黄龙万科中心&#39;</span>,\n            <span class="hljs-attr">address</span>: <span class="hljs-string">&#39;杭州市西湖区&#39;</span>,\n          },\n        ];\n      } <span class="hljs-keyword">else</span> {\n        searchResult.<span class="hljs-property">value</span> = [];\n      }\n    };\n\n    <span class="hljs-keyword">return</span> {\n      onSave,\n      onDelete,\n      areaList,\n      searchResult,\n      onChangeDetail,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>area-list</td><td>地区列表</td><td><em>object</em></td><td>-</td></tr><tr><td>area-columns-placeholder</td><td>地区选择列占位提示文字</td><td><em>string[]</em></td><td><code>[]</code></td></tr><tr><td>area-placeholder</td><td>地区输入框占位提示文字</td><td><em>string</em></td><td><code>选择省 / 市 / 区</code></td></tr><tr><td>address-info</td><td>地址信息初始值</td><td><em>AddressEditInfo</em></td><td><code>{}</code></td></tr><tr><td>search-result</td><td>详细地址搜索结果</td><td><em>AddressEditSearchItem[]</em></td><td><code>[]</code></td></tr><tr><td>show-postal</td><td>是否显示邮政编码</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-delete</td><td>是否显示删除按钮</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-set-default</td><td>是否显示默认地址栏</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-search-result</td><td>是否显示搜索结果</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-area</td><td>是否显示地区</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-detail</td><td>是否显示详细地址</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>disable-area</td><td>是否禁用地区选择</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>save-button-text</td><td>保存按钮文字</td><td><em>string</em></td><td><code>保存</code></td></tr><tr><td>delete-button-text</td><td>删除按钮文字</td><td><em>string</em></td><td><code>删除</code></td></tr><tr><td>detail-rows</td><td>详细地址输入框行数</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>detail-maxlength</td><td>详细地址最大长度</td><td><em>number | string</em></td><td><code>200</code></td></tr><tr><td>is-saving</td><td>是否显示保存按钮加载动画</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>is-deleting</td><td>是否显示删除按钮加载动画</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>tel-validator</td><td>手机号格式校验函数</td><td><em>string =&gt; boolean</em></td><td>-</td></tr><tr><td>tel-maxlength</td><td>手机号最大长度</td><td><em>number | string</em></td><td>-</td></tr><tr><td>postal-validator</td><td>邮政编码格式校验函数</td><td><em>string =&gt; boolean</em></td><td>-</td></tr><tr><td>validator</td><td>自定义校验函数</td><td><em>(key, val) =&gt; string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>save</td><td>点击保存按钮时触发</td><td>content：表单内容</td></tr><tr><td>focus</td><td>输入框聚焦时触发</td><td>key: 聚焦的输入框对应的 key</td></tr><tr><td>delete</td><td>确认删除地址时触发</td><td>content：表单内容</td></tr><tr><td>cancel-delete</td><td>取消删除地址时触发</td><td>content：表单内容</td></tr><tr><td>select-search</td><td>选中搜索结果时触发</td><td>value: 搜索结果</td></tr><tr><td>click-area</td><td>点击收件地区时触发</td><td>-</td></tr><tr><td>change-area</td><td>修改收件地区时触发</td><td>values: 地区信息</td></tr><tr><td>change-detail</td><td>修改详细地址时触发</td><td>value: 详细地址内容</td></tr><tr><td>change-default</td><td>切换是否使用默认地址时触发</td><td>value: 是否选中</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>在邮政编码下方插入内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><p>通过 ref 可以获取到 AddressEdit 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>setAddressDetail</td><td>设置详细地址</td><td><em>addressDetail: string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">AddressEditInfo</span>,\n  <span class="hljs-title class_">AddressEditInstance</span>,\n  <span class="hljs-title class_">AddressEditSearchItem</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>AddressEditInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">AddressEditInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> addressEditRef = ref&lt;<span class="hljs-title class_">AddressEditInstance</span>&gt;();\n\naddressEditRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">setAddressDetail</span>(<span class="hljs-string">&#39;&#39;</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="addresseditinfo-shu-ju-ge-shi" tabindex="-1">AddressEditInfo 数据格式</h3><p>注意：<code>AddressEditInfo</code> 仅作为初始值传入，表单最终内容可以在 save 事件中获取。</p><table><thead><tr><th>key</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>name</td><td>姓名</td><td><em>string</em></td></tr><tr><td>tel</td><td>手机号</td><td><em>string</em></td></tr><tr><td>province</td><td>省份</td><td><em>string</em></td></tr><tr><td>city</td><td>城市</td><td><em>string</em></td></tr><tr><td>county</td><td>区县</td><td><em>string</em></td></tr><tr><td>addressDetail</td><td>详细地址</td><td><em>string</em></td></tr><tr><td>areaCode</td><td>地区编码，通过 <a href="#/zh-CN/area">省市区选择</a> 获取（必填）</td><td><em>string</em></td></tr><tr><td>postalCode</td><td>邮政编码</td><td><em>string</em></td></tr><tr><td>isDefault</td><td>是否为默认地址</td><td><em>boolean</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="addresseditsearchitem-shu-ju-ge-shi" tabindex="-1">AddressEditSearchItem 数据格式</h3><table><thead><tr><th>key</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>name</td><td>地名</td><td><em>string</em></td></tr><tr><td>address</td><td>详细地址</td><td><em>string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="sheng-shi-xian-lie-biao-shu-ju-ge-shi" tabindex="-1">省市县列表数据格式</h3><p>请参考 <a href="#/zh-CN/area">Area 省市区选择</a> 组件。</p></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-address-edit-padding</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-address-edit-buttons-padding</td><td><em>var(–van-padding-xl) var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-address-edit-button-margin-bottom</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-address-edit-button-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr></tbody></table></div>',16),xa=[qa],ka={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",wa,xa)))},za={class:"van-doc-markdown-body"},_a=t('<h1>AddressList 地址列表</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>展示地址信息列表。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">AddressList</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">AddressList</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-address-list</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;chosenAddressId&quot;</span>\n  <span class="hljs-attr">:list</span>=<span class="hljs-string">&quot;list&quot;</span>\n  <span class="hljs-attr">:disabled-list</span>=<span class="hljs-string">&quot;disabledList&quot;</span>\n  <span class="hljs-attr">disabled-text</span>=<span class="hljs-string">&quot;以下地址超出配送范围&quot;</span>\n  <span class="hljs-attr">default-tag-text</span>=<span class="hljs-string">&quot;默认&quot;</span>\n  @<span class="hljs-attr">add</span>=<span class="hljs-string">&quot;onAdd&quot;</span>\n  @<span class="hljs-attr">edit</span>=<span class="hljs-string">&quot;onEdit&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> chosenAddressId = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;1&#39;</span>);\n    <span class="hljs-keyword">const</span> list = [\n      {\n        <span class="hljs-attr">id</span>: <span class="hljs-string">&#39;1&#39;</span>,\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;张三&#39;</span>,\n        <span class="hljs-attr">tel</span>: <span class="hljs-string">&#39;13000000000&#39;</span>,\n        <span class="hljs-attr">address</span>: <span class="hljs-string">&#39;浙江省杭州市西湖区文三路 138 号东方通信大厦 7 楼 501 室&#39;</span>,\n        <span class="hljs-attr">isDefault</span>: <span class="hljs-literal">true</span>,\n      },\n      {\n        <span class="hljs-attr">id</span>: <span class="hljs-string">&#39;2&#39;</span>,\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;李四&#39;</span>,\n        <span class="hljs-attr">tel</span>: <span class="hljs-string">&#39;1310000000&#39;</span>,\n        <span class="hljs-attr">address</span>: <span class="hljs-string">&#39;浙江省杭州市拱墅区莫干山路 50 号&#39;</span>,\n      },\n    ];\n    <span class="hljs-keyword">const</span> disabledList = [\n      {\n        <span class="hljs-attr">id</span>: <span class="hljs-string">&#39;3&#39;</span>,\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;王五&#39;</span>,\n        <span class="hljs-attr">tel</span>: <span class="hljs-string">&#39;1320000000&#39;</span>,\n        <span class="hljs-attr">address</span>: <span class="hljs-string">&#39;浙江省杭州市滨江区江南大道 15 号&#39;</span>,\n      },\n    ];\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onAdd</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;新增地址&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onEdit</span> = (<span class="hljs-params">item, index</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;编辑地址:&#39;</span> + index);\n\n    <span class="hljs-keyword">return</span> {\n      list,\n      onAdd,\n      onEdit,\n      disabledList,\n      chosenAddressId,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>当前选中地址的 id</td><td><em>string</em></td><td>-</td></tr><tr><td>list</td><td>地址列表</td><td><em>AddressListAddress[]</em></td><td><code>[]</code></td></tr><tr><td>disabled-list</td><td>不可配送地址列表</td><td><em>AddressListAddress[]</em></td><td><code>[]</code></td></tr><tr><td>disabled-text</td><td>不可配送提示文案</td><td><em>string</em></td><td>-</td></tr><tr><td>switchable</td><td>是否允许切换地址</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>add-button-text</td><td>底部按钮文字</td><td><em>string</em></td><td><code>新增地址</code></td></tr><tr><td>default-tag-text</td><td>默认地址标签文字</td><td><em>string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>add</td><td>点击新增按钮时触发</td><td>-</td></tr><tr><td>edit</td><td>点击编辑按钮时触发</td><td><em>item: AddressListAddress, index: number</em></td></tr><tr><td>select</td><td>切换选中的地址时触发</td><td><em>item: AddressListAddress, index: number</em></td></tr><tr><td>edit-disabled</td><td>编辑不可配送的地址时触发</td><td><em>item: AddressListAddress, index: number</em></td></tr><tr><td>select-disabled</td><td>选中不可配送的地址时触发</td><td><em>item: AddressListAddress, index: number</em></td></tr><tr><td>click-item</td><td>点击任意地址时触发</td><td><em>item: AddressListAddress, index: number</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="addresslistaddress-shu-ju-jie-gou" tabindex="-1">AddressListAddress 数据结构</h3><table><thead><tr><th>键名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>id</td><td>每条地址的唯一标识</td><td><em>number | string</em></td></tr><tr><td>name</td><td>姓名</td><td><em>string</em></td></tr><tr><td>tel</td><td>手机号</td><td><em>number | string</em></td></tr><tr><td>address</td><td>详细地址</td><td><em>string</em></td></tr><tr><td>isDefault</td><td>是否为默认地址</td><td><em>boolean</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>default</td><td>在列表下方插入内容</td><td>-</td></tr><tr><td>top</td><td>在顶部插入内容</td><td>-</td></tr><tr><td>item-bottom</td><td>在列表项底部插入内容</td><td><em>item: AddressListAddress</em></td></tr><tr><td>tag <code>v3.0.9</code></td><td>自定义列表项标签内容</td><td><em>item: AddressListAddress</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">AddressListAddress</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-address-list-padding</td><td><em>var(–van-padding-sm) var(–van-padding-sm) 80px</em></td><td>-</td></tr><tr><td>–van-address-list-disabled-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-address-list-disabled-text-padding</td><td><em>var(–van-padding-base) * 5 0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-address-list-disabled-text-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-address-list-disabled-text-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-address-list-add-button-z-index</td><td><em>999</em></td><td>-</td></tr><tr><td>–van-address-list-item-padding</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-address-list-item-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-address-list-item-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-address-list-item-font-size</td><td><em>13px</em></td><td>-</td></tr><tr><td>–van-address-list-item-line-height</td><td><em>var(–van-line-height-sm)</em></td><td>-</td></tr><tr><td>–van-address-list-item-radio-icon-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-address-list-edit-icon-size</td><td><em>20px</em></td><td>-</td></tr></tbody></table></div>',13),Ca=[_a],Sa={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",za,Ca)))},Ta={class:"van-doc-markdown-body"},Ia=t('<h1>Area 省市区选择</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>省市区三级联动选择，通常与<a href="#/zh-CN/popup">弹出层</a>组件配合使用。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Area</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Area</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>初始化省市区组件时，需要通过 <code>area-list</code> 属性传入省市区数据。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-area</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span> <span class="hljs-attr">:area-list</span>=<span class="hljs-string">&quot;areaList&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="arealist-ge-shi" tabindex="-1">areaList 格式</h3><p>areaList 为对象结构，包含 <code>province_list</code>、<code>city_list</code>、<code>county_list</code> 三个 key。</p><p>每项以地区码作为 key，省市区名字作为 value。地区码为 6 位数字，前两位代表省份，中间两位代表城市，后两位代表区县，以 0 补足 6 位。比如北京的地区码为 <code>11</code>，以 0 补足 6 位，为 <code>110000</code>。</p><p>示例数据如下：</p><pre><code class="language-js"><span class="hljs-keyword">const</span> areaList = {\n  <span class="hljs-attr">province_list</span>: {\n    <span class="hljs-number">110000</span>: <span class="hljs-string">&#39;北京市&#39;</span>,\n    <span class="hljs-number">120000</span>: <span class="hljs-string">&#39;天津市&#39;</span>,\n  },\n  <span class="hljs-attr">city_list</span>: {\n    <span class="hljs-number">110100</span>: <span class="hljs-string">&#39;北京市&#39;</span>,\n    <span class="hljs-number">120100</span>: <span class="hljs-string">&#39;天津市&#39;</span>,\n  },\n  <span class="hljs-attr">county_list</span>: {\n    <span class="hljs-number">110101</span>: <span class="hljs-string">&#39;东城区&#39;</span>,\n    <span class="hljs-number">110102</span>: <span class="hljs-string">&#39;西城区&#39;</span>,\n    <span class="hljs-comment">// ....</span>\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="vant-area-data" tabindex="-1">@vant/area-data</h3><p>Vant 官方提供了一份默认的省市区数据，可以通过 <a href="https://github.com/youzan/vant/tree/dev/packages/vant-area-data">@vant/area-data</a> 引入：</p><pre><code class="language-bash">yarn add @vant/area-data\n</code></pre><pre><code class="language-ts"><span class="hljs-keyword">import</span> { areaList } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/area-data&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">return</span> { areaList };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xuan-zhong-sheng-shi-qu" tabindex="-1">选中省市区</h3><p>如果想选中某个省市区，需要传入一个 <code>value</code> 属性，绑定对应的地区码。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-area</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span> <span class="hljs-attr">:area-list</span>=<span class="hljs-string">&quot;areaList&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;110101&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="pei-zhi-xian-shi-lie" tabindex="-1">配置显示列</h3><p>可以通过 <code>columns-num</code> 属性配置省市区显示的列数，默认情况下会显示省市区，当你设置为 <code>2</code>，则只会显示省市选择。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-area</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span> <span class="hljs-attr">:area-list</span>=<span class="hljs-string">&quot;areaList&quot;</span> <span class="hljs-attr">:columns-num</span>=<span class="hljs-string">&quot;2&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="pei-zhi-lie-zhan-wei-ti-shi-wen-zi" tabindex="-1">配置列占位提示文字</h3><p>可以通过 <code>columns-placeholder</code> 属性配置每一列的占位提示文字。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-area</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span>\n  <span class="hljs-attr">:area-list</span>=<span class="hljs-string">&quot;areaList&quot;</span>\n  <span class="hljs-attr">:columns-placeholder</span>=<span class="hljs-string">&quot;[&#39;请选择&#39;, &#39;请选择&#39;, &#39;请选择&#39;]&quot;</span>\n/&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>value</td><td>当前选中项对应的地区码</td><td><em>string</em></td><td>-</td></tr><tr><td>title</td><td>顶部栏标题</td><td><em>string</em></td><td>-</td></tr><tr><td>confirm-button-text</td><td>确认按钮文字</td><td><em>string</em></td><td><code>确认</code></td></tr><tr><td>cancel-button-text</td><td>取消按钮文字</td><td><em>string</em></td><td><code>取消</code></td></tr><tr><td>area-list</td><td>省市区数据，格式见下方</td><td><em>object</em></td><td>-</td></tr><tr><td>columns-placeholder</td><td>列占位提示文字</td><td><em>string[]</em></td><td><code>[]</code></td></tr><tr><td>loading</td><td>是否显示加载状态</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly</td><td>是否为只读状态，只读状态下无法切换选项</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>item-height</td><td>选项高度，支持 <code>px</code> <code>vw</code> <code>vh</code> <code>rem</code> 单位，默认 <code>px</code></td><td><em>number | string</em></td><td><code>44</code></td></tr><tr><td>columns-num</td><td>显示列数，3-省市区，2-省市，1-省</td><td><em>number | string</em></td><td><code>3</code></td></tr><tr><td>visible-item-count</td><td>可见的选项个数</td><td><em>number | string</em></td><td><code>6</code></td></tr><tr><td>swipe-duration</td><td>快速滑动时惯性滚动的时长，单位 <code>ms</code></td><td><em>number | string</em></td><td><code>1000</code></td></tr><tr><td>is-oversea-code</td><td>根据地区码校验海外地址，海外地址会划分至单独的分类</td><td><em>() =&gt; boolean</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>confirm</td><td>点击完成按钮时触发</td><td><em>result: ConfirmResult</em></td></tr><tr><td>cancel</td><td>点击取消按钮时触发</td><td>-</td></tr><tr><td>change</td><td>选项改变时触发</td><td>所有列选中值，当前列对应的索引</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="confirmresult-ge-shi" tabindex="-1">ConfirmResult 格式</h3><p>confirm 事件返回的数据整体为一个数组，数组每一项对应一列选项中被选中的数据。</p><pre><code class="language-js">[\n  {\n    <span class="hljs-attr">code</span>: <span class="hljs-string">&#39;110000&#39;</span>,\n    <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;北京市&#39;</span>,\n  },\n  {\n    <span class="hljs-attr">code</span>: <span class="hljs-string">&#39;110100&#39;</span>,\n    <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;北京市&#39;</span>,\n  },\n  {\n    <span class="hljs-attr">code</span>: <span class="hljs-string">&#39;110101&#39;</span>,\n    <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;东城区&#39;</span>,\n  },\n];\n</code></pre></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>toolbar <code>v3.1.2</code></td><td>自定义整个顶部栏的内容</td><td>-</td></tr><tr><td>title</td><td>自定义标题内容</td><td>-</td></tr><tr><td>confirm <code>v3.1.2</code></td><td>自定义确认按钮内容</td><td>-</td></tr><tr><td>cancel <code>v3.1.2</code></td><td>自定义取消按钮内容</td><td>-</td></tr><tr><td>columns-top</td><td>自定义选项上方内容</td><td>-</td></tr><tr><td>columns-bottom</td><td>自定义选项下方内容</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><p>通过 ref 可以获取到 Area 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>reset</td><td>根据地区码重置所有选项，若不传地区码，则重置到第一项</td><td><em>code?: string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">AreaList</span>, <span class="hljs-title class_">AreaInstance</span>, <span class="hljs-title class_">AreaColumnOption</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>AreaInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">AreaInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> areaRef = ref&lt;<span class="hljs-title class_">AreaInstance</span>&gt;();\n\nareaRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">reset</span>();\n</code></pre></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="zai-zhuo-mian-duan-wu-fa-cao-zuo-zu-jian" tabindex="-1">在桌面端无法操作组件？</h3><p>参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei">桌面端适配</a>。</p></div>',19),Pa=[Ia],Da={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ta,Pa)))},Aa={class:"van-doc-markdown-body"},Na=t('<h1>Badge 徽标</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>在右上角展示徽标数字或小红点。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Badge</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Badge</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>设置 <code>content</code> 属性后，Badge 会在子元素的右上角显示对应的徽标，也可以通过 <code>dot</code> 来显示小红点。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;Hot&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">dot</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.child</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">40px</span>;\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;\n    <span class="hljs-attribute">background</span>: <span class="hljs-number">#f2f3f5</span>;\n    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zui-da-zhi" tabindex="-1">最大值</h3><p>设置 <code>max</code> 属性后，当 <code>content</code> 的数值超过最大值时，会自动显示为 <code>{max}+</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;20&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;9&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;20&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;200&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;99&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yan-se" tabindex="-1">自定义颜色</h3><p>通过 <code>color</code> 属性来设置徽标的颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;5&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">dot</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-hui-biao-nei-rong" tabindex="-1">自定义徽标内容</h3><p>通过 <code>content</code> 插槽可以自定义徽标的内容，比如插入一个图标。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">content</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;success&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;badge-icon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">content</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;cross&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;badge-icon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">content</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;down&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;badge-icon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n</code></pre><pre><code class="language-css"><span class="hljs-selector-class">.badge-icon</span> {\n  <span class="hljs-attribute">display</span>: block;\n  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;\n  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">16px</span>;\n}\n</code></pre></div><div class="van-doc-card"><h3 id="du-li-zhan-shi" tabindex="-1">独立展示</h3><p>当 Badge 没有子元素时，会作为一个独立的元素进行展示。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;20&quot;</span> /&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;200&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;99&quot;</span> /&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>content</td><td>徽标内容</td><td><em>number | string</em></td><td>-</td></tr><tr><td>color</td><td>徽标背景颜色</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>dot</td><td>是否展示为小红点</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>max</td><td>最大值，超过最大值会显示 <code>{max}+</code>，仅当 content 为数字时有效</td><td><em>number | string</em></td><td>-</td></tr><tr><td>offset <code>v3.0.5</code></td><td>设置徽标的偏移量，数组的两项分别对应水平和垂直方向的偏移量，默认单位为 <code>px</code></td><td><em>[number | string, number | string]</em></td><td>-</td></tr><tr><td>show-zero <code>v3.0.10</code></td><td>当 content 为数字 0 时，是否展示徽标</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>徽标包裹的子元素</td></tr><tr><td>content</td><td>自定义徽标内容</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-badge-size</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-badge-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-badge-padding</td><td><em>0 3px</em></td><td>-</td></tr><tr><td>–van-badge-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-badge-font-weight</td><td><em>var(–van-font-weight-bold)</em></td><td>-</td></tr><tr><td>–van-badge-border-width</td><td><em>var(–van-border-width-base)</em></td><td>-</td></tr><tr><td>–van-badge-background-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-badge-dot-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-badge-dot-size</td><td><em>8px</em></td><td>-</td></tr><tr><td>–van-badge-font-family</td><td><em>-apple-system-font, Helvetica Neue, Arial, sans-serif</em></td><td>-</td></tr></tbody></table></div>',14),Ea=[Na],Ra={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Aa,Ea)))},Ua={class:"van-doc-markdown-body"},Ba=t('<h1>Button 按钮</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>按钮用于触发一个操作，如提交表单。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Button</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="an-niu-lei-xing" tabindex="-1">按钮类型</h3><p>按钮支持 <code>default</code>、<code>primary</code>、<code>success</code>、<code>warning</code>、<code>danger</code> 五种类型，默认为 <code>default</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>成功按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;default&quot;</span>&gt;</span>默认按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span>&gt;</span>警告按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>危险按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="po-su-an-niu" tabindex="-1">朴素按钮</h3><p>通过 <code>plain</code> 属性将按钮设置为朴素按钮，朴素按钮的文字为按钮颜色，背景为白色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>朴素按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>朴素按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="xi-bian-kuang" tabindex="-1">细边框</h3><p>设置 <code>hairline</code> 属性可以展示 0.5px 的细边框。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">hairline</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>细边框按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">hairline</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>细边框按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-zhuang-tai" tabindex="-1">禁用状态</h3><p>通过 <code>disabled</code> 属性来禁用按钮，禁用状态下按钮不可点击。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>禁用状态<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>禁用状态<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jia-zai-zhuang-tai" tabindex="-1">加载状态</h3><p>通过 <code>loading</code> 属性设置按钮为加载状态，加载状态下默认会隐藏按钮文字，可以通过 <code>loading-text</code> 设置加载状态下的文字。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">loading-type</span>=<span class="hljs-string">&quot;spinner&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">loading-text</span>=<span class="hljs-string">&quot;加载中...&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="an-niu-xing-zhuang" tabindex="-1">按钮形状</h3><p>通过 <code>square</code> 设置方形按钮，通过 <code>round</code> 设置圆形按钮。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>方形按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">round</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>圆形按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="tu-biao-an-niu" tabindex="-1">图标按钮</h3><p>通过 <code>icon</code> 属性设置按钮图标，支持 Icon 组件里的所有图标，也可以传入图标 URL。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;plus&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;plus&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/user-active.png&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>\n  按钮\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="an-niu-chi-cun" tabindex="-1">按钮尺寸</h3><p>支持 <code>large</code>、<code>normal</code>、<code>small</code>、<code>mini</code> 四种尺寸，默认为 <code>normal</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;large&quot;</span>&gt;</span>大号按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;normal&quot;</span>&gt;</span>普通按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span>小型按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span>&gt;</span>迷你按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="kuai-ji-yuan-su" tabindex="-1">块级元素</h3><p>按钮在默认情况下为行内块级元素，通过 <code>block</code> 属性可以将按钮的元素类型设置为块级元素。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">block</span>&gt;</span>块级元素<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="ye-mian-dao-hang" tabindex="-1">页面导航</h3><p>可以通过 <code>url</code> 属性进行 URL 跳转，或通过 <code>to</code> 属性进行路由跳转。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">url</span>=<span class="hljs-string">&quot;/vant/mobile.html&quot;</span>&gt;</span>URL 跳转<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>路由跳转<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yan-se" tabindex="-1">自定义颜色</h3><p>通过 <code>color</code> 属性可以自定义按钮的颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#7232dd&quot;</span>&gt;</span>单色按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#7232dd&quot;</span> <span class="hljs-attr">plain</span>&gt;</span>单色按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;linear-gradient(to right, #ff6034, #ee0a24)&quot;</span>&gt;</span>\n  渐变色按钮\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>类型，可选值为 <code>primary</code> <code>success</code> <code>warning</code> <code>danger</code></td><td><em>string</em></td><td><code>default</code></td></tr><tr><td>size</td><td>尺寸，可选值为 <code>large</code> <code>small</code> <code>mini</code></td><td><em>string</em></td><td><code>normal</code></td></tr><tr><td>text</td><td>按钮文字</td><td><em>string</em></td><td>-</td></tr><tr><td>color</td><td>按钮颜色，支持传入 <code>linear-gradient</code> 渐变色</td><td><em>string</em></td><td>-</td></tr><tr><td>icon</td><td>左侧<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td>-</td></tr><tr><td>icon-prefix</td><td>图标类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props">class-prefix 属性</a></td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>icon-position</td><td>图标展示位置，可选值为 <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>tag</td><td>按钮根节点的 HTML 标签</td><td><em>string</em></td><td><code>button</code></td></tr><tr><td>native-type</td><td>原生 button 标签的 type 属性</td><td><em>string</em></td><td><code>button</code></td></tr><tr><td>block</td><td>是否为块级元素</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>plain</td><td>是否为朴素按钮</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>square</td><td>是否为方形按钮</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>round</td><td>是否为圆形按钮</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disabled</td><td>是否禁用按钮</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>hairline</td><td>是否使用 0.5px 边框</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loading</td><td>是否显示为加载状态</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loading-text</td><td>加载状态提示文字</td><td><em>string</em></td><td>-</td></tr><tr><td>loading-type</td><td><a href="#/zh-CN/loading">加载图标类型</a>，可选值为 <code>spinner</code></td><td><em>string</em></td><td><code>circular</code></td></tr><tr><td>loading-size</td><td>加载图标大小，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>20px</code></td></tr><tr><td>url</td><td>点击后跳转的链接地址</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>点击后跳转的目标路由对象，等同于 vue-router 的 <a href="https://router.vuejs.org/zh/api/#to">to 属性</a></td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>是否在跳转时替换当前页面历史</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击按钮，且按钮状态不为加载或禁用时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>touchstart</td><td>开始触摸按钮时触发</td><td><em>event: TouchEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>按钮内容</td></tr><tr><td>icon <code>v3.0.18</code></td><td>自定义图标</td></tr><tr><td>loading</td><td>自定义加载图标</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ButtonType</span>, <span class="hljs-title class_">ButtonSize</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-button-mini-height</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-button-mini-padding</td><td><em>0 var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-button-mini-font-size</td><td><em>var(–van-font-size-xs)</em></td><td>-</td></tr><tr><td>–van-button-small-height</td><td><em>32px</em></td><td>-</td></tr><tr><td>–van-button-small-padding</td><td><em>0 var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-button-small-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-button-normal-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-button-normal-padding</td><td><em>0 15px</em></td><td>-</td></tr><tr><td>–van-button-large-height</td><td><em>50px</em></td><td>-</td></tr><tr><td>–van-button-default-height</td><td><em>44px</em></td><td>-</td></tr><tr><td>–van-button-default-line-height</td><td><em>1.2</em></td><td>-</td></tr><tr><td>–van-button-default-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-button-default-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-button-default-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-button-default-border-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr><tr><td>–van-button-primary-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-button-primary-background-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-button-primary-border-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-button-success-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-button-success-background-color</td><td><em>var(–van-success-color)</em></td><td>-</td></tr><tr><td>–van-button-success-border-color</td><td><em>var(–van-success-color)</em></td><td>-</td></tr><tr><td>–van-button-danger-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-button-danger-background-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-button-danger-border-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-button-warning-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-button-warning-background-color</td><td><em>var(–van-orange)</em></td><td>-</td></tr><tr><td>–van-button-warning-border-color</td><td><em>var(–van-orange)</em></td><td>-</td></tr><tr><td>–van-button-border-width</td><td><em>var(–van-border-width-base)</em></td><td>-</td></tr><tr><td>–van-button-border-radius</td><td><em>var(–van-border-radius-sm)</em></td><td>-</td></tr><tr><td>–van-button-round-border-radius</td><td><em>var(–van-border-radius-max)</em></td><td>-</td></tr><tr><td>–van-button-plain-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-button-disabled-opacity</td><td><em>var(–van-disabled-opacity)</em></td><td>-</td></tr><tr><td>–van-button-icon-size</td><td><em>1.2em</em></td><td>-</td></tr><tr><td>–van-button-loading-icon-size</td><td><em>20px</em></td><td>-</td></tr></tbody></table></div>',22),Va=[Ba],La={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ua,Va)))},Fa={class:"van-doc-markdown-body"},Wa=t('<h1>Calendar 日历</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>日历组件用于选择日期或日期区间。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Calendar</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Calendar</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="xuan-ze-dan-ge-ri-qi" tabindex="-1">选择单个日期</h3><p>下面演示了结合单元格来使用日历组件的用法，日期选择完成后会触发 <code>confirm</code> 事件。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;选择单个日期&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;date&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> date = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatDate</span> = (<span class="hljs-params">date</span>) =&gt; <span class="hljs-string">`<span class="hljs-subst">${date.getMonth() + <span class="hljs-number">1</span>}</span>/<span class="hljs-subst">${date.getDate()}</span>`</span>;\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">value</span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      date.<span class="hljs-property">value</span> = <span class="hljs-title function_">formatDate</span>(value);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      date,\n      show,\n      onConfirm,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xuan-ze-duo-ge-ri-qi" tabindex="-1">选择多个日期</h3><p>设置 <code>type</code> 为 <code>multiple</code> 后可以选择多个日期，此时 <code>confirm</code> 事件返回的 date 为数组结构，数组包含若干个选中的日期。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;选择多个日期&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;text&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;multiple&quot;</span> @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> text = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">dates</span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      text.<span class="hljs-property">value</span> = <span class="hljs-string">`选择了 <span class="hljs-subst">${dates.length}</span> 个日期`</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      text,\n      show,\n      onConfirm,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xuan-ze-ri-qi-qu-jian" tabindex="-1">选择日期区间</h3><p>设置 <code>type</code> 为 <code>range</code> 后可以选择日期区间，此时 <code>confirm</code> 事件返回的 date 为数组结构，数组第一项为开始时间，第二项为结束时间。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;选择日期区间&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;date&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> date = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatDate</span> = (<span class="hljs-params">date</span>) =&gt; <span class="hljs-string">`<span class="hljs-subst">${date.getMonth() + <span class="hljs-number">1</span>}</span>/<span class="hljs-subst">${date.getDate()}</span>`</span>;\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">values</span>) =&gt; {\n      <span class="hljs-keyword">const</span> [start, end] = values;\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      date.<span class="hljs-property">value</span> = <span class="hljs-string">`<span class="hljs-subst">${formatDate(start)}</span> - <span class="hljs-subst">${formatDate(end)}</span>`</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      date,\n      show,\n      onConfirm,\n    };\n  },\n};\n</code></pre><blockquote><p>Tips: 默认情况下，日期区间的起止时间不能为同一天，可以通过设置 allow-same-day 属性来允许选择同一天。</p></blockquote></div><div class="van-doc-card"><h3 id="kuai-jie-xuan-ze" tabindex="-1">快捷选择</h3><p>将 <code>show-confirm</code> 设置为 <code>false</code> 可以隐藏确认按钮，这种情况下选择完成后会立即触发 <code>confirm</code> 事件。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:show-confirm</span>=<span class="hljs-string">&quot;false&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yan-se" tabindex="-1">自定义颜色</h3><p>通过 <code>color</code> 属性可以自定义日历的颜色，对选中日期和底部按钮生效。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-ri-qi-fan-wei" tabindex="-1">自定义日期范围</h3><p>通过 <code>min-date</code> 和 <code>max-date</code> 定义日历的范围。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span> <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2010</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n      <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2010</span>, <span class="hljs-number">0</span>, <span class="hljs-number">31</span>),\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-an-niu-wen-zi" tabindex="-1">自定义按钮文字</h3><p>通过 <code>confirm-text</code> 设置按钮文字，通过 <code>confirm-disabled-text</code> 设置按钮禁用时的文字。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span>\n  <span class="hljs-attr">confirm-text</span>=<span class="hljs-string">&quot;完成&quot;</span>\n  <span class="hljs-attr">confirm-disabled-text</span>=<span class="hljs-string">&quot;请选择结束时间&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-ri-qi-wen-an" tabindex="-1">自定义日期文案</h3><p>通过传入 <code>formatter</code> 函数来对日历上每一格的内容进行格式化。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">:formatter</span>=<span class="hljs-string">&quot;formatter&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatter</span> = (<span class="hljs-params">day</span>) =&gt; {\n      <span class="hljs-keyword">const</span> month = day.<span class="hljs-property">date</span>.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span>;\n      <span class="hljs-keyword">const</span> date = day.<span class="hljs-property">date</span>.<span class="hljs-title function_">getDate</span>();\n\n      <span class="hljs-keyword">if</span> (month === <span class="hljs-number">5</span>) {\n        <span class="hljs-keyword">if</span> (date === <span class="hljs-number">1</span>) {\n          day.<span class="hljs-property">topInfo</span> = <span class="hljs-string">&#39;劳动节&#39;</span>;\n        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (date === <span class="hljs-number">4</span>) {\n          day.<span class="hljs-property">topInfo</span> = <span class="hljs-string">&#39;青年节&#39;</span>;\n        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (date === <span class="hljs-number">11</span>) {\n          day.<span class="hljs-property">text</span> = <span class="hljs-string">&#39;今天&#39;</span>;\n        }\n      }\n\n      <span class="hljs-keyword">if</span> (day.<span class="hljs-property">type</span> === <span class="hljs-string">&#39;start&#39;</span>) {\n        day.<span class="hljs-property">bottomInfo</span> = <span class="hljs-string">&#39;入住&#39;</span>;\n      } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (day.<span class="hljs-property">type</span> === <span class="hljs-string">&#39;end&#39;</span>) {\n        day.<span class="hljs-property">bottomInfo</span> = <span class="hljs-string">&#39;离店&#39;</span>;\n      }\n\n      <span class="hljs-keyword">return</span> day;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      formatter,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-dan-chu-wei-zhi" tabindex="-1">自定义弹出位置</h3><p>通过 <code>position</code> 属性自定义弹出层的弹出位置，可选值为 <code>top</code>、<code>left</code>、<code>right</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:round</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;right&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="ri-qi-qu-jian-zui-da-fan-wei" tabindex="-1">日期区间最大范围</h3><p>选择日期区间时，可以通过 <code>max-range</code> 属性来指定最多可选天数，选择的范围超过最多可选天数时，会弹出相应的提示文案。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">:max-range</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;500px&#39; }&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-zhou-qi-shi-ri" tabindex="-1">自定义周起始日</h3><p>通过 <code>first-day-of-week</code> 属性设置一周从哪天开始。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">first-day-of-week</span>=<span class="hljs-string">&quot;1&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="ping-pu-zhan-shi" tabindex="-1">平铺展示</h3><p>将 <code>poppable</code> 设置为 <code>false</code>，日历会直接展示在页面内，而不是以弹层的形式出现。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;日历&quot;</span>\n  <span class="hljs-attr">:poppable</span>=<span class="hljs-string">&quot;false&quot;</span>\n  <span class="hljs-attr">:show-confirm</span>=<span class="hljs-string">&quot;false&quot;</span>\n  <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;500px&#39; }&quot;</span>\n/&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>选择类型:<br><code>single</code> 表示选择单个日期，<br><code>multiple</code> 表示选择多个日期，<br><code>range</code> 表示选择日期区间</td><td><em>string</em></td><td><code>single</code></td></tr><tr><td>title</td><td>日历标题</td><td><em>string</em></td><td><code>日期选择</code></td></tr><tr><td>color</td><td>主题色，对底部按钮和选中日期生效</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>min-date</td><td>可选择的最小日期</td><td><em>Date</em></td><td>当前日期</td></tr><tr><td>max-date</td><td>可选择的最大日期</td><td><em>Date</em></td><td>当前日期的六个月后</td></tr><tr><td>default-date</td><td>默认选中的日期，<code>type</code> 为 <code>multiple</code> 或 <code>range</code> 时为数组，传入 <code>null</code> 表示默认不选择</td><td><em>Date | Date[] | null</em></td><td>今天</td></tr><tr><td>row-height</td><td>日期行高</td><td><em>number | string</em></td><td><code>64</code></td></tr><tr><td>formatter</td><td>日期格式化函数</td><td><em>(day: Day) =&gt; Day</em></td><td>-</td></tr><tr><td>poppable</td><td>是否以弹层的形式展示日历</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>lazy-render</td><td>是否只渲染可视区域的内容</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-mark</td><td>是否显示月份背景水印</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-title</td><td>是否展示日历标题</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-subtitle</td><td>是否展示日历副标题（年月）</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-confirm</td><td>是否展示确认按钮</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>readonly</td><td>是否为只读状态，只读状态下不能选择日期</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>confirm-text</td><td>确认按钮的文字</td><td><em>string</em></td><td><code>确定</code></td></tr><tr><td>confirm-disabled-text</td><td>确认按钮处于禁用状态时的文字</td><td><em>string</em></td><td><code>确定</code></td></tr><tr><td>first-day-of-week</td><td>设置周起始日</td><td><em>0-6</em></td><td><code>0</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="calendar-poppable-props" tabindex="-1">Calendar Poppable Props</h3><p>当 Calendar 的 <code>poppable</code> 为 <code>true</code> 时，支持以下 props:</p><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model:show</td><td>是否显示日历弹窗</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>position</td><td>弹出位置，可选值为 <code>top</code> <code>right</code> <code>left</code></td><td><em>string</em></td><td><code>bottom</code></td></tr><tr><td>round</td><td>是否显示圆角弹窗</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-popstate</td><td>是否在页面回退时自动关闭</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-overlay</td><td>是否在点击遮罩层后关闭</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>safe-area-inset-bottom</td><td>是否开启<a href="#/zh-CN/advanced-usage#di-bu-an-quan-qu-gua-pei">底部安全区适配</a></td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>teleport</td><td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#teleport">to 属性</a></td><td><em>string | Element</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="calendar-range-props" tabindex="-1">Calendar Range Props</h3><p>当 Calendar 的 <code>type</code> 为 <code>range</code> 时，支持以下 props:</p><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>max-range</td><td>日期区间最多可选天数</td><td><em>number | string</em></td><td>无限制</td></tr><tr><td>range-prompt</td><td>范围选择超过最多可选天数时的提示文案</td><td><em>string</em></td><td><code>最多选择 xx 天</code></td></tr><tr><td>show-range-prompt</td><td>范围选择超过最多可选天数时，是否展示提示文案</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>allow-same-day</td><td>是否允许日期范围的起止时间为同一天</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="calendar-multiple-props" tabindex="-1">Calendar Multiple Props</h3><p>当 Calendar 的 <code>type</code> 为 <code>multiple</code> 时，支持以下 props:</p><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>max-range</td><td>日期最多可选天数</td><td><em>number | string</em></td><td>无限制</td></tr><tr><td>range-prompt</td><td>选择超过最多可选天数时的提示文案</td><td><em>string</em></td><td><code>最多选择 xx 天</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="day-shu-ju-jie-gou" tabindex="-1">Day 数据结构</h3><p>日历中的每个日期都对应一个 Day 对象，通过<code>formatter</code>属性可以自定义 Day 对象的内容</p><table><thead><tr><th>键名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>date</td><td>日期对应的 Date 对象</td><td><em>Date</em></td></tr><tr><td>type</td><td>日期类型，可选值为 <code>selected</code>、<code>start</code>、<code>middle</code>、<code>end</code>、<code>disabled</code></td><td><em>string</em></td></tr><tr><td>text</td><td>中间显示的文字</td><td><em>string</em></td></tr><tr><td>topInfo</td><td>上方的提示信息</td><td><em>string</em></td></tr><tr><td>bottomInfo</td><td>下方的提示信息</td><td><em>string</em></td></tr><tr><td>className</td><td>额外类名</td><td><em>string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>select</td><td>点击并选中任意日期时触发</td><td><em>value: Date | Date[]</em></td></tr><tr><td>confirm</td><td>日期选择完成后触发，若 <code>show-confirm</code> 为 <code>true</code>，则点击确认按钮后触发</td><td><em>value: Date | Date[]</em></td></tr><tr><td>open</td><td>打开弹出层时触发</td><td>-</td></tr><tr><td>close</td><td>关闭弹出层时触发</td><td>-</td></tr><tr><td>opened</td><td>打开弹出层且动画结束后触发</td><td>-</td></tr><tr><td>closed</td><td>关闭弹出层且动画结束后触发</td><td>-</td></tr><tr><td>unselect</td><td>当日历组件的 <code>type</code> 为 <code>multiple</code> 时，取消选中日期时触发</td><td><em>value: Date</em></td></tr><tr><td>month-show</td><td>当某个月份进入可视区域时触发</td><td><em>{ date: Date, title: string }</em></td></tr><tr><td>over-range</td><td>范围选择超过最多可选天数时触发</td><td>-</td></tr><tr><td>click-subtitle <code>v3.1.3</code></td><td>点击日历副标题时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>title</td><td>自定义标题</td><td>-</td></tr><tr><td>subtitle <code>v3.1.3</code></td><td>自定义日历副标题</td><td>-</td></tr><tr><td>footer</td><td>自定义底部区域内容</td><td>-</td></tr><tr><td>top-info <code>v3.0.17</code></td><td>自定义日期上方的提示信息</td><td><em>day: Day</em></td></tr><tr><td>bottom-info <code>v3.0.17</code></td><td>自定义日期下方的提示信息</td><td><em>day: Day</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><p>通过 ref 可以获取到 Calendar 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>reset</td><td>将选中的日期重置到指定日期，未传参时会重置到默认日期</td><td><em>date?: Date | Date[]</em></td><td>-</td></tr><tr><td>scrollToDate</td><td>滚动到某个日期</td><td><em>date: Date</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">CalendarType</span>,\n  <span class="hljs-title class_">CalendarDayItem</span>,\n  <span class="hljs-title class_">CalendarDayType</span>,\n  <span class="hljs-title class_">CalendarInstance</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>CalendarInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CalendarInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> calendarRef = ref&lt;<span class="hljs-title class_">CalendarInstance</span>&gt;();\n\ncalendarRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">reset</span>();\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-calendar-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-calendar-popup-height</td><td><em>80%</em></td><td>-</td></tr><tr><td>–van-calendar-header-box-shadow</td><td><em>0 2px 10px rgba(125, 126, 128, 0.16)</em></td><td>-</td></tr><tr><td>–van-calendar-header-title-height</td><td><em>44px</em></td><td>-</td></tr><tr><td>–van-calendar-header-title-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-calendar-header-subtitle-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-calendar-weekdays-height</td><td><em>30px</em></td><td>-</td></tr><tr><td>–van-calendar-weekdays-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-calendar-month-title-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-calendar-month-mark-color</td><td><em>fade(var(–van-gray-2), 80%)</em></td><td>-</td></tr><tr><td>–van-calendar-month-mark-font-size</td><td><em>160px</em></td><td>-</td></tr><tr><td>–van-calendar-day-height</td><td><em>64px</em></td><td>-</td></tr><tr><td>–van-calendar-day-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-calendar-range-edge-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-calendar-range-edge-background-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-calendar-range-middle-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-calendar-range-middle-background-opacity</td><td><em>0.1</em></td><td>-</td></tr><tr><td>–van-calendar-selected-day-size</td><td><em>54px</em></td><td>-</td></tr><tr><td>–van-calendar-selected-day-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-calendar-info-font-size</td><td><em>var(–van-font-size-xs)</em></td><td>-</td></tr><tr><td>–van-calendar-info-line-height</td><td><em>var(–van-line-height-xs)</em></td><td>-</td></tr><tr><td>–van-calendar-selected-day-background-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-calendar-day-disabled-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-calendar-confirm-button-height</td><td><em>36px</em></td><td>-</td></tr><tr><td>–van-calendar-confirm-button-margin</td><td><em>7px 0</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="zai-ios-xi-tong-shang-chu-shi-hua-zu-jian-shi-bai" tabindex="-1">在 iOS 系统上初始化组件失败？</h3><p>如果你遇到了在 iOS 上无法渲染组件的问题，请确认在创建 Date 对象时没有使用<code>new Date(&#39;2020-01-01&#39;)</code>这样的写法，iOS 不支持以中划线分隔的日期格式，正确写法是<code>new Date(&#39;2020/01/01&#39;)</code>。</p><p>对此问题的详细解释：<a href="https://stackoverflow.com/questions/13363673/javascript-date-is-invalid-on-ios">stackoverflow</a>。</p></div>',30),Ma=[Wa],Oa={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Fa,Ma)))},Ga={class:"van-doc-markdown-body"},Ha=t('<h1>Card 卡片</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>商品卡片，用于展示商品的图片、价格等信息。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Card</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Card</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-card</span>\n  <span class="hljs-attr">num</span>=<span class="hljs-string">&quot;2&quot;</span>\n  <span class="hljs-attr">price</span>=<span class="hljs-string">&quot;2.00&quot;</span>\n  <span class="hljs-attr">desc</span>=<span class="hljs-string">&quot;描述信息&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;商品标题&quot;</span>\n  <span class="hljs-attr">thumb</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/ipad.jpeg&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="ying-xiao-xin-xi" tabindex="-1">营销信息</h3><p>通过 <code>origin-price</code> 设置商品原价，通过 <code>tag</code> 设置商品左上角标签。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-card</span>\n  <span class="hljs-attr">num</span>=<span class="hljs-string">&quot;2&quot;</span>\n  <span class="hljs-attr">tag</span>=<span class="hljs-string">&quot;标签&quot;</span>\n  <span class="hljs-attr">price</span>=<span class="hljs-string">&quot;2.00&quot;</span>\n  <span class="hljs-attr">desc</span>=<span class="hljs-string">&quot;描述信息&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;商品标题&quot;</span>\n  <span class="hljs-attr">thumb</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/ipad.jpeg&quot;</span>\n  <span class="hljs-attr">origin-price</span>=<span class="hljs-string">&quot;10.00&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-nei-rong" tabindex="-1">自定义内容</h3><p><code>Card</code> 组件提供了多个插槽，可以灵活地自定义内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-card</span>\n  <span class="hljs-attr">num</span>=<span class="hljs-string">&quot;2&quot;</span>\n  <span class="hljs-attr">price</span>=<span class="hljs-string">&quot;2.00&quot;</span>\n  <span class="hljs-attr">desc</span>=<span class="hljs-string">&quot;描述信息&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;商品标题&quot;</span>\n  <span class="hljs-attr">thumb</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/ipad.jpeg&quot;</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">tags</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">footer</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-card</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>thumb</td><td>左侧图片 URL</td><td><em>string</em></td><td>-</td></tr><tr><td>title</td><td>标题</td><td><em>string</em></td><td>-</td></tr><tr><td>desc</td><td>描述</td><td><em>string</em></td><td>-</td></tr><tr><td>tag</td><td>图片角标</td><td><em>string</em></td><td>-</td></tr><tr><td>num</td><td>商品数量</td><td><em>number | string</em></td><td>-</td></tr><tr><td>price</td><td>商品价格</td><td><em>number | string</em></td><td>-</td></tr><tr><td>origin-price</td><td>商品划线原价</td><td><em>number | string</em></td><td>-</td></tr><tr><td>centered</td><td>内容是否垂直居中</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>currency</td><td>货币符号</td><td><em>string</em></td><td><code>¥</code></td></tr><tr><td>thumb-link</td><td>点击左侧图片后跳转的链接地址</td><td><em>string</em></td><td>-</td></tr><tr><td>lazy-load</td><td>是否开启图片懒加载，须配合 <a href="#/zh-CN/lazyload">Lazyload</a> 组件使用</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-thumb</td><td>点击自定义图片时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>title</td><td>自定义标题</td></tr><tr><td>desc</td><td>自定义描述</td></tr><tr><td>num</td><td>自定义数量</td></tr><tr><td>price</td><td>自定义价格</td></tr><tr><td>origin-price</td><td>自定义商品原价</td></tr><tr><td>price-top</td><td>自定义价格上方区域</td></tr><tr><td>bottom</td><td>自定义价格下方区域</td></tr><tr><td>thumb</td><td>自定义图片</td></tr><tr><td>tag</td><td>自定义图片角标</td></tr><tr><td>tags</td><td>自定义描述下方标签区域</td></tr><tr><td>footer</td><td>自定义右下角内容</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-card-padding</td><td><em>var(–van-padding-xs) var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-card-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-card-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-card-background-color</td><td><em>var(–van-background-color-light)</em></td><td>-</td></tr><tr><td>–van-card-thumb-size</td><td><em>88px</em></td><td>-</td></tr><tr><td>–van-card-thumb-border-radius</td><td><em>var(–van-border-radius-lg)</em></td><td>-</td></tr><tr><td>–van-card-title-line-height</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-card-desc-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-card-desc-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-card-price-color</td><td><em>var(–van-gray-8)</em></td><td>-</td></tr><tr><td>–van-card-origin-price-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-card-num-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-card-origin-price-font-size</td><td><em>var(–van-font-size-xs)</em></td><td>-</td></tr><tr><td>–van-card-price-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-card-price-integer-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-card-price-font-family</td><td><em>var(–van-price-integer-font-family)</em></td><td>-</td></tr></tbody></table></div>',13),Ka=[Ha],$a={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ga,Ka)))},Ja={class:"van-doc-markdown-body"},Xa=t('<h1>Cascader 级联选择</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>级联选择框，用于多层级数据的选择，典型场景为省市区选择。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Cascader</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Cascader</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>级联选择组件可以搭配 Field 和 Popup 组件使用，示例如下：</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fieldValue&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;地区&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择所在地区&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">round</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cascader</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cascaderValue&quot;</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;请选择所在地区&quot;</span>\n    <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n    @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n    @<span class="hljs-attr">finish</span>=<span class="hljs-string">&quot;onFinish&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> fieldValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> cascaderValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-comment">// 选项列表，children 代表子选项，支持多级嵌套</span>\n    <span class="hljs-keyword">const</span> options = [\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;浙江省&#39;</span>,\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;330000&#39;</span>,\n        <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;杭州市&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;330100&#39;</span> }],\n      },\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;江苏省&#39;</span>,\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;320000&#39;</span>,\n        <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;南京市&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;320100&#39;</span> }],\n      },\n    ];\n    <span class="hljs-comment">// 全部选项选择完毕后，会触发 finish 事件</span>\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onFinish</span> = (<span class="hljs-params">{ selectedOptions }</span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      fieldValue.<span class="hljs-property">value</span> = selectedOptions.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">option</span>) =&gt;</span> option.<span class="hljs-property">text</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#39;/&#39;</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      options,\n      onFinish,\n      fieldValue,\n      cascaderValue,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yan-se" tabindex="-1">自定义颜色</h3><p>通过 <code>active-color</code> 属性来设置选中状态的高亮颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cascader</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cascaderValue&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;请选择所在地区&quot;</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n  <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span>\n  @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n  @<span class="hljs-attr">finish</span>=<span class="hljs-string">&quot;onFinish&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="yi-bu-jia-zai-xuan-xiang" tabindex="-1">异步加载选项</h3><p>可以监听 <code>change</code> 事件并动态设置 <code>options</code>，实现异步加载选项。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fieldValue&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;地区&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择所在地区&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">round</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cascader</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cascaderValue&quot;</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;请选择所在地区&quot;</span>\n    <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n    @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n    @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>\n    @<span class="hljs-attr">finish</span>=<span class="hljs-string">&quot;onFinish&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> fieldValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> cascaderValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> options = <span class="hljs-title function_">ref</span>([\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;浙江省&#39;</span>,\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;330000&#39;</span>,\n        <span class="hljs-attr">children</span>: [],\n      },\n    ]);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">{ value }</span>) =&gt; {\n      <span class="hljs-keyword">if</span> (value === options.<span class="hljs-property">value</span>[<span class="hljs-number">0</span>].<span class="hljs-property">value</span>) {\n        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n          options.<span class="hljs-property">value</span>[<span class="hljs-number">0</span>].<span class="hljs-property">children</span> = [\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;杭州市&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;330100&#39;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;宁波市&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;330200&#39;</span> },\n          ];\n        }, <span class="hljs-number">500</span>);\n      }\n    };\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onFinish</span> = (<span class="hljs-params">{ selectedOptions }</span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      fieldValue.<span class="hljs-property">value</span> = selectedOptions.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">option</span>) =&gt;</span> option.<span class="hljs-property">text</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#39;/&#39;</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      options,\n      onFinish,\n      fieldValue,\n      cascaderValue,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-zi-duan-ming" tabindex="-1">自定义字段名</h3><p>通过 <code>field-names</code> 属性可以自定义 <code>options</code> 里的字段名称。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cascader</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;code&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;请选择所在地区&quot;</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n  <span class="hljs-attr">:field-names</span>=<span class="hljs-string">&quot;fieldNames&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> code = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> fieldNames = {\n      <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;name&#39;</span>,\n      <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;code&#39;</span>,\n      <span class="hljs-attr">children</span>: <span class="hljs-string">&#39;items&#39;</span>,\n    };\n    <span class="hljs-keyword">const</span> options = [\n      {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;浙江省&#39;</span>,\n        <span class="hljs-attr">code</span>: <span class="hljs-string">&#39;330000&#39;</span>,\n        <span class="hljs-attr">items</span>: [{ <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;杭州市&#39;</span>, <span class="hljs-attr">code</span>: <span class="hljs-string">&#39;330100&#39;</span> }],\n      },\n      {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;江苏省&#39;</span>,\n        <span class="hljs-attr">code</span>: <span class="hljs-string">&#39;320000&#39;</span>,\n        <span class="hljs-attr">items</span>: [{ <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;南京市&#39;</span>, <span class="hljs-attr">code</span>: <span class="hljs-string">&#39;320100&#39;</span> }],\n      },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      code,\n      options,\n      fieldNames,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>顶部标题</td><td><em>string</em></td><td>-</td></tr><tr><td>value</td><td>选中项的值</td><td><em>string | number</em></td><td>-</td></tr><tr><td>options</td><td>可选项数据源</td><td><em>Option[]</em></td><td><code>[]</code></td></tr><tr><td>placeholder</td><td>未选中时的提示文案</td><td><em>string</em></td><td><code>请选择</code></td></tr><tr><td>active-color</td><td>选中状态的高亮颜色</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>swipeable <code>v3.0.11</code></td><td>是否开启手势左右滑动切换</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>closeable</td><td>是否显示关闭图标</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-icon <code>v3.0.10</code></td><td>关闭<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td><code>cross</code></td></tr><tr><td>field-names <code>v3.0.4</code></td><td>自定义 <code>options</code> 结构中的字段</td><td><em>object</em></td><td><code>{ text: &#39;text&#39;, value: &#39;value&#39;, children: &#39;children&#39; }</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="option-shu-ju-jie-gou" tabindex="-1">Option 数据结构</h3><p><code>options</code> 属性是一个由对象构成的数组，数组中的每个对象配置一个可选项，对象可以包含以下值：</p><table><thead><tr><th>键名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>text</td><td>选项文字（必填）</td><td><em>string</em></td></tr><tr><td>value</td><td>选项对应的值（必填）</td><td><em>string | number</em></td></tr><tr><td>color <code>v3.1.0</code></td><td>选项文字颜色</td><td><em>string</em></td></tr><tr><td>children</td><td>子选项列表</td><td><em>Option[]</em></td></tr><tr><td>disabled <code>v3.1.2</code></td><td>是否禁用选项</td><td><em>boolean</em></td></tr><tr><td>className <code>v3.1.0</code></td><td>为对应列添加额外的 class</td><td><em>string | Array | object</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>选中项变化时触发</td><td><code>{ value, selectedOptions, tabIndex }</code></td></tr><tr><td>finish</td><td>全部选项选择完成后触发</td><td><code>{ value, selectedOptions, tabIndex }</code></td></tr><tr><td>close</td><td>点击关闭图标时触发</td><td>-</td></tr><tr><td>click-tab</td><td>点击标签时触发</td><td><em>tabIndex: number, title: string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>title</td><td>自定义顶部标题</td><td>-</td></tr><tr><td>option <code>v3.1.4</code></td><td>自定义选项文字</td><td><em>{ option: Option, selected: boolean }</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CascaderOption</span>, <span class="hljs-title class_">CascaderFieldNames</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-cascader-header-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-cascader-header-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-cascader-title-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-cascader-title-line-height</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-cascader-close-icon-size</td><td><em>22px</em></td><td>-</td></tr><tr><td>–van-cascader-close-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-cascader-close-icon-active-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-cascader-selected-icon-size</td><td><em>18px</em></td><td>-</td></tr><tr><td>–van-cascader-tabs-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-cascader-active-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-cascader-options-height</td><td><em>384px</em></td><td>-</td></tr><tr><td>–van-cascader-option-disabled-color</td><td><em>van(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-cascader-tab-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-cascader-unselected-tab-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr></tbody></table></div>',16),Ya=[Xa],Za={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ja,Ya)))},Qa={class:"van-doc-markdown-body"},st=t('<h1>Cell 单元格</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>单元格为列表中的单个展示项。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Cell</span>, <span class="hljs-title class_">CellGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Cell</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CellGroup</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p><code>Cell</code> 可以单独使用，也可以与 <code>CellGroup</code> 搭配使用，<code>CellGroup</code> 可以为 <code>Cell</code> 提供上下外边框。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;描述信息&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="qia-pian-feng-ge" tabindex="-1">卡片风格</h3><p>通过 <code>CellGroup</code> 的 <code>inset</code> 属性，可以将单元格转换为圆角卡片风格（从 3.1.0 版本开始支持）。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;描述信息&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="dan-yuan-ge-da-xiao" tabindex="-1">单元格大小</h3><p>通过 <code>size</code> 属性可以控制单元格的大小。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;large&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;large&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;描述信息&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zhan-shi-tu-biao" tabindex="-1">展示图标</h3><p>通过 <code>icon</code> 属性在标题左侧展示图标。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;location-o&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zhi-she-zhi-value" tabindex="-1">只设置 value</h3><p>只设置 <code>value</code> 时，内容会靠左对齐。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zhan-shi-jian-tou" tabindex="-1">展示箭头</h3><p>设置 <code>is-link</code> 属性后会在单元格右侧显示箭头，并且可以通过 <code>arrow-direction</code> 属性控制箭头方向。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">is-link</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">is-link</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">is-link</span> <span class="hljs-attr">arrow-direction</span>=<span class="hljs-string">&quot;down&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="ye-mian-dao-hang" tabindex="-1">页面导航</h3><p>可以通过 <code>url</code> 属性进行 URL 跳转，或通过 <code>to</code> 属性进行路由跳转。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;URL 跳转&quot;</span> <span class="hljs-attr">is-link</span> <span class="hljs-attr">url</span>=<span class="hljs-string">&quot;/vant/mobile.html&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;路由跳转&quot;</span> <span class="hljs-attr">is-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;index&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="fen-zu-biao-ti" tabindex="-1">分组标题</h3><p>通过 <code>CellGroup</code> 的 <code>title</code> 属性可以指定分组标题。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;分组1&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;分组2&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="shi-yong-cha-cao" tabindex="-1">使用插槽</h3><p>如以上用法不能满足你的需求，可以使用插槽来自定义内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> <span class="hljs-attr">is-link</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- 使用 title 插槽来自定义标题 --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">title</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;custom-title&quot;</span>&gt;</span>单元格<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;shop-o&quot;</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- 使用 right-icon 插槽来自定义右侧图标 --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;search-icon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.custom-title</span> {\n    <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">4px</span>;\n    <span class="hljs-attribute">vertical-align</span>: middle;\n  }\n\n  <span class="hljs-selector-class">.search-icon</span> {\n    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;\n    <span class="hljs-attribute">line-height</span>: inherit;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="chui-zhi-ju-zhong" tabindex="-1">垂直居中</h3><p>通过 <code>center</code> 属性可以让 <code>Cell</code> 的左右内容都垂直居中。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">center</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;描述信息&quot;</span> /&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="cellgroup-props" tabindex="-1">CellGroup Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>分组标题</td><td><em>string</em></td><td><code>-</code></td></tr><tr><td>inset <code>v3.1.0</code></td><td>是否展示为圆角卡片风格</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>border</td><td>是否显示外边框</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="cell-props" tabindex="-1">Cell Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>左侧标题</td><td><em>number | string</em></td><td>-</td></tr><tr><td>value</td><td>右侧内容</td><td><em>number | string</em></td><td>-</td></tr><tr><td>label</td><td>标题下方的描述信息</td><td><em>string</em></td><td>-</td></tr><tr><td>size</td><td>单元格大小，可选值为 <code>large</code></td><td><em>string</em></td><td>-</td></tr><tr><td>icon</td><td>左侧<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td>-</td></tr><tr><td>icon-prefix</td><td>图标类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props">class-prefix 属性</a></td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>url</td><td>点击后跳转的链接地址</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>点击后跳转的目标路由对象，等同于 vue-router 的 <a href="https://router.vuejs.org/zh/api/#to">to 属性</a></td><td><em>string | object</em></td><td>-</td></tr><tr><td>border</td><td>是否显示内边框</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>replace</td><td>是否在跳转时替换当前页面历史</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>clickable</td><td>是否开启点击反馈</td><td><em>boolean</em></td><td><code>null</code></td></tr><tr><td>is-link</td><td>是否展示右侧箭头并开启点击反馈</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>required</td><td>是否显示表单必填星号</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>center</td><td>是否使内容垂直居中</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>arrow-direction</td><td>箭头方向，可选值为 <code>left</code> <code>up</code> <code>down</code></td><td><em>string</em></td><td><code>right</code></td></tr><tr><td>title-style</td><td>左侧标题额外样式</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>title-class</td><td>左侧标题额外类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>value-class</td><td>右侧内容额外类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>label-class</td><td>描述信息额外类名</td><td><em>string | Array | object</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="cell-events" tabindex="-1">Cell Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击单元格时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="cellgroup-slots" tabindex="-1">CellGroup Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>默认插槽</td></tr><tr><td>title</td><td>自定义分组标题</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="cell-slots" tabindex="-1">Cell Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>title</td><td>自定义左侧标题</td></tr><tr><td>value <code>v3.1.1</code></td><td>自定义右侧内容</td></tr><tr><td>label</td><td>自定义标题下方的描述信息</td></tr><tr><td>icon</td><td>自定义左侧图标</td></tr><tr><td>right-icon</td><td>自定义右侧图标</td></tr><tr><td>extra</td><td>自定义单元格最右侧的额外内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CellArrowDirection</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-cell-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-cell-line-height</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-cell-vertical-padding</td><td><em>10px</em></td><td>-</td></tr><tr><td>–van-cell-horizontal-padding</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-cell-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-cell-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-cell-border-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr><tr><td>–van-cell-active-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-cell-required-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-cell-label-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-cell-label-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-cell-label-line-height</td><td><em>var(–van-line-height-sm)</em></td><td>-</td></tr><tr><td>–van-cell-label-margin-top</td><td><em>var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-cell-value-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-cell-icon-size</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-cell-right-icon-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-cell-large-vertical-padding</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-cell-large-title-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-cell-large-label-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-cell-group-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-cell-group-title-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-cell-group-title-padding</td><td><em>var(–van-padding-md) var(–van-padding-md) var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-cell-group-title-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-cell-group-title-line-height</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-cell-group-inset-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-cell-group-inset-border-radius</td><td><em>var(–van-border-radius-lg)</em></td><td>-</td></tr><tr><td>–van-cell-group-inset-title-padding</td><td><em>var(–van-padding-md) var(–van-padding-md) var(–van-padding-xs) var(–van-padding-xl)</em></td><td>-</td></tr></tbody></table></div>',23),at=[st],tt={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Qa,at)))},nt={class:"van-doc-markdown-body"},lt=t('<h1>Checkbox 复选框</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>在一组备选项中进行多选。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Checkbox</span>, <span class="hljs-title class_">CheckboxGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Checkbox</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CheckboxGroup</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>v-model</code> 绑定复选框的勾选状态。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>复选框<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-keyword">return</span> { checked };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-zhuang-tai" tabindex="-1">禁用状态</h3><p>通过设置 <code>disabled</code> 属性可以禁用复选框。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>复选框<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-xing-zhuang" tabindex="-1">自定义形状</h3><p>将 <code>shape</code> 属性设置为 <code>square</code>，复选框的形状会变成方形。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span>&gt;</span>复选框<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yan-se" tabindex="-1">自定义颜色</h3><p>通过 <code>checked-color</code> 属性设置选中状态的图标颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">checked-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span>&gt;</span>复选框<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-da-xiao" tabindex="-1">自定义大小</h3><p>通过 <code>icon-size</code> 属性可以自定义图标的大小。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">icon-size</span>=<span class="hljs-string">&quot;24px&quot;</span>&gt;</span>复选框<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-tu-biao" tabindex="-1">自定义图标</h3><p>通过 <code>icon</code> 插槽自定义图标，可以通过 <code>slotProps</code> 判断是否为选中状态.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  自定义图标\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;props&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;img-icon&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;props.checked ? activeIcon : inactiveIcon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.img-icon</span> {\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-keyword">return</span> {\n      checked,\n      <span class="hljs-attr">activeIcon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/user-active.png&#39;</span>,\n      <span class="hljs-attr">inactiveIcon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/user-inactive.png&#39;</span>,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-wen-ben-dian-ji" tabindex="-1">禁用文本点击</h3><p>设置 <code>label-disabled</code> 属性后，点击图标以外的内容不会触发复选框切换。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">label-disabled</span>&gt;</span>复选框<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="fu-xuan-kuang-zu" tabindex="-1">复选框组</h3><p>复选框可以与复选框组一起使用，复选框组通过 <code>v-model</code> 数组绑定复选框的勾选状态。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;a&quot;</span>&gt;</span>复选框 a<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;b&quot;</span>&gt;</span>复选框 b<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>([<span class="hljs-string">&#39;a&#39;</span>, <span class="hljs-string">&#39;b&#39;</span>]);\n    <span class="hljs-keyword">return</span> { checked };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="shui-ping-pai-lie" tabindex="-1">水平排列</h3><p>将 <code>direction</code> 属性设置为 <code>horizontal</code> 后，复选框组会变成水平排列。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;horizontal&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;a&quot;</span>&gt;</span>复选框 a<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;b&quot;</span>&gt;</span>复选框 b<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">return</span> { checked };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xian-zhi-zui-da-ke-xuan-shu" tabindex="-1">限制最大可选数</h3><p>通过 <code>max</code> 属性可以限制复选框组的最大可选数。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">:max</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;a&quot;</span>&gt;</span>复选框 a<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;b&quot;</span>&gt;</span>复选框 b<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;c&quot;</span>&gt;</span>复选框 c<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="quan-xuan-yu-fan-xuan" tabindex="-1">全选与反选</h3><p>通过 <code>CheckboxGroup</code> 实例上的 <code>toggleAll</code> 方法可以实现全选与反选。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;checkboxGroup&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;a&quot;</span>&gt;</span>复选框 a<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;b&quot;</span>&gt;</span>复选框 b<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;c&quot;</span>&gt;</span>复选框 c<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;checkAll&quot;</span>&gt;</span>全选<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;toggleAll&quot;</span>&gt;</span>反选<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">const</span> checkboxGroup = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">checkAll</span> = (<span class="hljs-params"></span>) =&gt; {\n      checkboxGroup.<span class="hljs-property">value</span>.<span class="hljs-title function_">toggleAll</span>(<span class="hljs-literal">true</span>);\n    }\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">toggleAll</span> = (<span class="hljs-params"></span>) =&gt; {\n      checkboxGroup.<span class="hljs-property">value</span>.<span class="hljs-title function_">toggleAll</span>();\n    },\n\n    <span class="hljs-keyword">return</span> {\n      checked,\n      checkAll,\n      toggleAll,\n      checkboxGroup,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="da-pei-dan-yuan-ge-zu-jian-shi-yong" tabindex="-1">搭配单元格组件使用</h3><p>搭配单元格组件使用时，需要再引入 <code>Cell</code> 和 <code>CellGroup</code> 组件，并通过 <code>Checkbox</code> 实例上的 toggle 方法触发切换。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span>\n      <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item, index) in list&quot;</span>\n      <span class="hljs-attr">clickable</span>\n      <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span>\n      <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;`复选框 ${item}`&quot;</span>\n      @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;toggle(index)&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right-icon</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span>\n          <span class="hljs-attr">:name</span>=<span class="hljs-string">&quot;item&quot;</span>\n          <span class="hljs-attr">:ref</span>=<span class="hljs-string">&quot;el =&gt; checkboxRefs[index] = el&quot;</span>\n          @<span class="hljs-attr">click.stop</span>\n        /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref, onBeforeUpdate } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">const</span> checkboxRefs = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">toggle</span> = (<span class="hljs-params">index</span>) =&gt; {\n      checkboxRefs.<span class="hljs-property">value</span>[index].<span class="hljs-title function_">toggle</span>();\n    };\n\n    <span class="hljs-title function_">onBeforeUpdate</span>(<span class="hljs-function">() =&gt;</span> {\n      checkboxRefs.<span class="hljs-property">value</span> = [];\n    });\n\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">list</span>: [<span class="hljs-string">&#39;a&#39;</span>, <span class="hljs-string">&#39;b&#39;</span>],\n      toggle,\n      checked,\n      checkboxRefs,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="checkbox-props" tabindex="-1">Checkbox Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>是否为选中状态</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>name</td><td>标识符</td><td><em>any</em></td><td>-</td></tr><tr><td>shape</td><td>形状，可选值为 <code>square</code></td><td><em>string</em></td><td><code>round</code></td></tr><tr><td>disabled</td><td>是否禁用复选框</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>label-disabled</td><td>是否禁用复选框文本点击</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>label-position</td><td>文本位置，可选值为 <code>left</code></td><td><em>string</em></td><td><code>right</code></td></tr><tr><td>icon-size</td><td>图标大小，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>20px</code></td></tr><tr><td>checked-color</td><td>选中状态颜色</td><td><em>string</em></td><td><code>#1989fa</code></td></tr><tr><td>bind-group</td><td>是否与复选框组绑定</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="checkboxgroup-props" tabindex="-1">CheckboxGroup Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>所有选中项的标识符</td><td><em>any[]</em></td><td>-</td></tr><tr><td>disabled</td><td>是否禁用所有复选框</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>max</td><td>最大可选数，<code>0</code> 为无限制</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>direction</td><td>排列方向，可选值为 <code>horizontal</code></td><td><em>string</em></td><td><code>vertical</code></td></tr><tr><td>icon-size</td><td>所有复选框的图标大小，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>20px</code></td></tr><tr><td>checked-color</td><td>所有复选框的选中状态颜色</td><td><em>string</em></td><td><code>#1989fa</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="checkbox-events" tabindex="-1">Checkbox Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>当绑定值变化时触发的事件</td><td><em>checked: boolean</em></td></tr><tr><td>click</td><td>点击复选框时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="checkboxgroup-events" tabindex="-1">CheckboxGroup Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>当绑定值变化时触发的事件</td><td><em>names: any[]</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="checkbox-slots" tabindex="-1">Checkbox Slots</h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>default</td><td>自定义文本</td><td>-</td></tr><tr><td>icon</td><td>自定义图标</td><td><em>{ checked: boolean, disabled: boolean }</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="checkboxgroup-fang-fa" tabindex="-1">CheckboxGroup 方法</h3><p>通过 ref 可以获取到 CheckboxGroup 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>toggleAll</td><td>切换所有复选框，传 <code>true</code> 为选中，<code>false</code> 为取消选中，不传参为取反</td><td><em>options?: boolean | object</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="toggleall-fang-fa-shi-li" tabindex="-1">toggleAll 方法示例</h3><pre><code class="language-js"><span class="hljs-keyword">const</span> { checkboxGroup } = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>;\n\n<span class="hljs-comment">// 全部反选</span>\ncheckboxGroup.<span class="hljs-title function_">toggleAll</span>();\n<span class="hljs-comment">// 全部选中</span>\ncheckboxGroup.<span class="hljs-title function_">toggleAll</span>(<span class="hljs-literal">true</span>);\n<span class="hljs-comment">// 全部取消</span>\ncheckboxGroup.<span class="hljs-title function_">toggleAll</span>(<span class="hljs-literal">false</span>);\n\n<span class="hljs-comment">// 全部反选，并跳过禁用的复选框</span>\ncheckboxGroup.<span class="hljs-title function_">toggleAll</span>({\n  <span class="hljs-attr">skipDisabled</span>: <span class="hljs-literal">true</span>,\n});\n<span class="hljs-comment">// 全部选中，并跳过禁用的复选框</span>\ncheckboxGroup.<span class="hljs-title function_">toggleAll</span>({\n  <span class="hljs-attr">checked</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">skipDisabled</span>: <span class="hljs-literal">true</span>,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="checkbox-fang-fa" tabindex="-1">Checkbox 方法</h3><p>通过 ref 可以获取到 Checkbox 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>toggle</td><td>切换选中状态，传 <code>true</code> 为选中，<code>false</code> 为取消选中，不传参为取反</td><td><em>checked?: boolean</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">CheckboxInstance</span>,\n  <span class="hljs-title class_">CheckboxGroupInstance</span>,\n  <span class="hljs-title class_">CheckboxGroupToggleAllOptions</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>CheckboxInstance</code> 和 <code>CheckboxGroupInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CheckboxInstance</span>, <span class="hljs-title class_">CheckboxGroupInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> checkboxRef = ref&lt;<span class="hljs-title class_">CheckboxInstance</span>&gt;();\n<span class="hljs-keyword">const</span> checkboxGroupRef = ref&lt;<span class="hljs-title class_">CheckboxGroupInstance</span>&gt;();\n\ncheckboxRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">toggle</span>();\ncheckboxGroupRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">toggleAll</span>();\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-checkbox-size</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-checkbox-border-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-checkbox-transition-duration</td><td><em>var(–van-animation-duration-fast)</em></td><td>-</td></tr><tr><td>–van-checkbox-label-margin</td><td><em>var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-checkbox-label-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-checkbox-checked-icon-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-checkbox-disabled-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-checkbox-disabled-label-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-checkbox-disabled-background-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr></tbody></table></div>',28),et=[lt],dt={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",nt,et)))},pt={class:"van-doc-markdown-body"},ct=t('<h1>Circle 环形进度条</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>圆环形的进度条组件，支持进度渐变动画。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Circle</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Circle</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p><code>rate</code> 属性表示进度条的目标进度，<code>v-model:current-rate</code> 表示动画过程中的实时进度。当 <code>rate</code> 发生变化时，<code>v-model:current-rate</code> 会以 <code>speed</code> 的速度变化，直至达到 <code>rate</code> 设定的值。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;30&quot;</span>\n  <span class="hljs-attr">:speed</span>=<span class="hljs-string">&quot;100&quot;</span>\n  <span class="hljs-attr">:text</span>=<span class="hljs-string">&quot;text&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref, computed } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentRate = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> text = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> currentRate.<span class="hljs-property">value</span>.<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">0</span>) + <span class="hljs-string">&#39;%&#39;</span>);\n\n    <span class="hljs-keyword">return</span> {\n      text,\n      currentRate,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="kuan-du-ding-zhi" tabindex="-1">宽度定制</h3><p>通过 <code>stroke-width</code> 属性来控制进度条宽度。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">:stroke-width</span>=<span class="hljs-string">&quot;60&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;宽度定制&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="yan-se-ding-zhi" tabindex="-1">颜色定制</h3><p>通过 <code>color</code> 属性来控制进度条颜色，<code>layer-color</code> 属性来控制轨道颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">layer-color</span>=<span class="hljs-string">&quot;#ebedf0&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;颜色定制&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jian-bian-se" tabindex="-1">渐变色</h3><p><code>color</code> 属性支持传入对象格式来定义渐变色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">:color</span>=<span class="hljs-string">&quot;gradientColor&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;渐变色&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentRate = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> gradientColor = {\n      <span class="hljs-string">&#39;0%&#39;</span>: <span class="hljs-string">&#39;#3fecff&#39;</span>,\n      <span class="hljs-string">&#39;100%&#39;</span>: <span class="hljs-string">&#39;#6149f6&#39;</span>,\n    };\n\n    <span class="hljs-keyword">return</span> {\n      currentRate,\n      gradientColor,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="ni-shi-zhen-fang-xiang" tabindex="-1">逆时针方向</h3><p>将 <code>clockwise</code> 设置为 <code>false</code>，进度会从逆时针方向开始。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">:clockwise</span>=<span class="hljs-string">&quot;false&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;逆时针方向&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="da-xiao-ding-zhi" tabindex="-1">大小定制</h3><p>通过 <code>size</code> 属性设置圆环直径。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;120px&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;大小定制&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="qi-shi-wei-zhi" tabindex="-1">起始位置</h3><p>进度条默认从顶部开始，可以通过 <code>start-position</code> 属性设置起始位置。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">:text</span>=<span class="hljs-string">&quot;左侧&quot;</span>\n  <span class="hljs-attr">start-position</span>=<span class="hljs-string">&quot;left&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;右侧&quot;</span>\n  <span class="hljs-attr">start-position</span>=<span class="hljs-string">&quot;right&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;底部&quot;</span>\n  <span class="hljs-attr">start-position</span>=<span class="hljs-string">&quot;bottom&quot;</span>\n/&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model:current-rate</td><td>当前进度</td><td><em>number</em></td><td>-</td></tr><tr><td>rate</td><td>目标进度</td><td><em>number | string</em></td><td><code>100</code></td></tr><tr><td>size</td><td>圆环直径，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>100px</code></td></tr><tr><td>color</td><td>进度条颜色，传入对象格式可以定义渐变色</td><td><em>string | object</em></td><td><code>#1989fa</code></td></tr><tr><td>layer-color</td><td>轨道颜色</td><td><em>string</em></td><td><code>white</code></td></tr><tr><td>fill</td><td>填充颜色</td><td><em>string</em></td><td><code>none</code></td></tr><tr><td>speed</td><td>动画速度（单位为 rate/s）</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>text</td><td>文字</td><td><em>string</em></td><td>-</td></tr><tr><td>stroke-width</td><td>进度条宽度</td><td><em>number | string</em></td><td><code>40</code></td></tr><tr><td>stroke-linecap</td><td>进度条端点的形状，可选值为 <code>square</code> <code>butt</code></td><td><em>string</em></td><td><code>round</code></td></tr><tr><td>clockwise</td><td>是否顺时针增加</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>start-position <code>v3.2.1</code></td><td>进度起始位置，可选值为 <code>left</code>、<code>right</code>、<code>bottom</code></td><td><em>CircleStartPosition</em></td><td><code>top</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>自定义文字内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CircleStartPosition</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-circle-size</td><td><em>100px</em></td><td>-</td></tr><tr><td>–van-circle-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-circle-layer-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-circle-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-circle-text-font-weight</td><td><em>var(–van-font-weight-bold)</em></td><td>-</td></tr><tr><td>–van-circle-text-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-circle-text-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr></tbody></table></div>',17),ot=[ct],rt={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",pt,ot)))},it={class:"van-doc-markdown-body"},ht=t('<h1>Layout 布局</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>Layout 提供了 <code>van-row</code> 和 <code>van-col</code> 两个组件来进行行列布局。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Col</span>, <span class="hljs-title class_">Row</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Col</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Row</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>Layout 组件提供了 <code>24列栅格</code>，通过在 <code>Col</code> 上添加 <code>span</code> 属性设置列所占的宽度百分比。此外，添加 <code>offset</code> 属性可以设置列的偏移宽度，计算方式与 span 相同。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>span: 8<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>span: 8<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>span: 8<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>span: 4<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">offset</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>offset: 4, span: 10<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">offset</span>=<span class="hljs-string">&quot;12&quot;</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;12&quot;</span>&gt;</span>offset: 12, span: 12<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="she-zhi-lie-yuan-su-jian-ju" tabindex="-1">设置列元素间距</h3><p>通过 <code>gutter</code> 属性可以设置列元素之间的间距，默认间距为 0。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-row</span> <span class="hljs-attr">gutter</span>=<span class="hljs-string">&quot;20&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>span: 8<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>span: 8<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>span: 8<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="dui-qi-fang-shi" tabindex="-1">对齐方式</h3><p>通过 <code>justify</code> 属性可以设置主轴上内容的对齐方式，等价于 flex 布局中的 <code>justify-content</code> 属性。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 居中 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-row</span> <span class="hljs-attr">justify</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 右对齐 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-row</span> <span class="hljs-attr">justify</span>=<span class="hljs-string">&quot;end&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 两端对齐 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-row</span> <span class="hljs-attr">justify</span>=<span class="hljs-string">&quot;space-between&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 每个元素的两侧间隔相等 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-row</span> <span class="hljs-attr">justify</span>=<span class="hljs-string">&quot;space-around&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="row-props" tabindex="-1">Row Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>gutter</td><td>列元素之间的间距（单位为 px）</td><td><em>number | string</em></td><td>-</td></tr><tr><td>tag</td><td>自定义元素标签</td><td><em>string</em></td><td><code>div</code></td></tr><tr><td>justify</td><td>主轴对齐方式，可选值为 <code>end</code> <code>center</code> <br> <code>space-around</code> <code>space-between</code></td><td><em>string</em></td><td><code>start</code></td></tr><tr><td>align</td><td>交叉轴对齐方式，可选值为 <code>center</code> <code>bottom</code></td><td><em>string</em></td><td><code>top</code></td></tr><tr><td>wrap <code>v3.0.11</code></td><td>是否自动换行</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="col-props" tabindex="-1">Col Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>span</td><td>列元素宽度</td><td><em>number | string</em></td><td>-</td></tr><tr><td>offset</td><td>列元素偏移距离</td><td><em>number | string</em></td><td>-</td></tr><tr><td>tag</td><td>自定义元素标签</td><td><em>string</em></td><td><code>div</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="row-events" tabindex="-1">Row Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="col-events" tabindex="-1">Col Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">RowAlign</span>, <span class="hljs-title class_">RowJustify</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div>',13),jt=[ht],ut={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",it,jt)))},gt={class:"van-doc-markdown-body"},mt=t('<h1>Collapse 折叠面板</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>将一组内容放置在多个折叠面板中，点击面板的标题可以展开或收缩其内容。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Collapse</span>, <span class="hljs-title class_">CollapseItem</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Collapse</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CollapseItem</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>v-model</code> 控制展开的面板列表，<code>activeNames</code> 为数组格式。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-collapse</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;activeNames&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题1&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题2&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题3&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeNames = <span class="hljs-title function_">ref</span>([<span class="hljs-string">&#39;1&#39;</span>]);\n    <span class="hljs-keyword">return</span> { activeNames };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="shou-feng-qin" tabindex="-1">手风琴</h3><p>通过 <code>accordion</code> 可以设置为手风琴模式，最多展开一个面板，此时 <code>activeName</code> 为字符串格式。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-collapse</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;activeName&quot;</span> <span class="hljs-attr">accordion</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题1&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题2&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题3&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeName = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;1&#39;</span>);\n    <span class="hljs-keyword">return</span> { activeName };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-zhuang-tai" tabindex="-1">禁用状态</h3><p>通过 <code>disabled</code> 属性来禁用单个面板。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-collapse</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;activeNames&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题1&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题2&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题3&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-biao-ti-nei-rong" tabindex="-1">自定义标题内容</h3><p>通过 <code>title</code> 插槽可以自定义标题栏的内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-collapse</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;activeNames&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">title</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>标题1 <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;question-o&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    内容\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题2&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;shop-o&quot;</span>&gt;</span>\n    内容\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeNames = <span class="hljs-title function_">ref</span>([<span class="hljs-string">&#39;1&#39;</span>]);\n    <span class="hljs-keyword">return</span> { activeNames };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="collapse-props" tabindex="-1">Collapse Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>当前展开面板的 name</td><td>手风琴模式：<em>number | string</em><br>非手风琴模式：<em>(number | string)[]</em></td><td>-</td></tr><tr><td>accordion</td><td>是否开启手风琴模式</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>border</td><td>是否显示外边框</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="collapse-events" tabindex="-1">Collapse Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>切换面板时触发</td><td>activeNames: 类型与 v-model 绑定的值一致</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="collapseitem-props" tabindex="-1">CollapseItem Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>name</td><td>唯一标识符，默认为索引值</td><td><em>number | string</em></td><td><code>index</code></td></tr><tr><td>icon</td><td>标题栏左侧<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td>-</td></tr><tr><td>size</td><td>标题栏大小，可选值为 <code>large</code></td><td><em>string</em></td><td>-</td></tr><tr><td>title</td><td>标题栏左侧内容</td><td><em>number | string</em></td><td>-</td></tr><tr><td>value</td><td>标题栏右侧内容</td><td><em>number | string</em></td><td>-</td></tr><tr><td>label</td><td>标题栏描述信息</td><td><em>number | string</em></td><td>-</td></tr><tr><td>border</td><td>是否显示内边框</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>is-link</td><td>是否展示标题栏右侧箭头并开启点击反馈</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>disabled</td><td>是否禁用面板</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly <code>v3.0.12</code></td><td>是否为只读状态，只读状态下无法操作面板</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>title-class</td><td>左侧标题额外类名</td><td><em>string</em></td><td>-</td></tr><tr><td>value-class</td><td>右侧内容额外类名</td><td><em>string</em></td><td>-</td></tr><tr><td>label-class</td><td>描述信息额外类名</td><td><em>string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="collapseitem-fang-fa" tabindex="-1">CollapseItem 方法</h3><p>通过 ref 可以获取到 CollapseItem 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>toggle</td><td>切换面试展开状态，传 <code>true</code> 为展开，<code>false</code> 为收起，不传参为切换</td><td><em>expand?: boolean</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CollapseItemInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>CollapseItemInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CollapseItemInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> collapseItemRef = ref&lt;<span class="hljs-title class_">CollapseItemInstance</span>&gt;();\n\ncollapseItemRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">toggle</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="collapseitem-slots" tabindex="-1">CollapseItem Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>面板内容</td></tr><tr><td>title</td><td>自定义标题栏左侧内容</td></tr><tr><td>value</td><td>自定义标题栏右侧内容</td></tr><tr><td>label <code>v3.1.1</code></td><td>自定义标题栏描述信息</td></tr><tr><td>icon</td><td>自定义标题栏左侧图标</td></tr><tr><td>right-icon</td><td>自定义标题栏右侧图标</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-collapse-item-transition-duration</td><td><em>var(–van-animation-duration-base)</em></td><td>-</td></tr><tr><td>–van-collapse-item-content-padding</td><td><em>var(–van-padding-sm) var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-collapse-item-content-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-collapse-item-content-line-height</td><td><em>1.5</em></td><td>-</td></tr><tr><td>–van-collapse-item-content-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-collapse-item-content-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-collapse-item-title-disabled-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr></tbody></table></div>',17),vt=[mt],bt={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",gt,vt)))},ft={class:"van-doc-markdown-body"},yt=t('<h1>ConfigProvider 全局配置</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于配置 Vant 组件的主题样式，从 3.1.0 版本开始支持。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ConfigProvider</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ConfigProvider</span>);\n</code></pre></div><h2 id="ding-zhi-zhu-ti" tabindex="-1">定制主题</h2><div class="van-doc-card"><h3 id="jie-shao-1" tabindex="-1">介绍</h3><p>Vant 组件通过丰富的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Using_CSS_custom_properties">CSS 变量</a> 来组织样式，通过覆盖这些 CSS 变量，可以实现<strong>定制主题、动态切换主题</strong>等效果。</p><h4 id="shi-li" tabindex="-1">示例</h4><p>以 Button 组件为例，查看组件的样式，可以看到 <code>.van-button--primary</code> 类名上存在以下变量：</p><pre><code class="language-css"><span class="hljs-selector-class">.van-button--primary</span> {\n  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--van-button-primary-color);\n  <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--van-button-primary-background-color);\n}\n</code></pre><p>这些变量的默认值被定义在 <code>root</code> 节点上，HTML 文档的任何节点都可以访问到这些变量：</p><pre><code class="language-css"><span class="hljs-selector-pseudo">:root</span> {\n  <span class="hljs-attr">--van-white</span>: <span class="hljs-number">#fff</span>;\n  <span class="hljs-attr">--van-blue</span>: <span class="hljs-number">#1989fa</span>;\n  <span class="hljs-attr">--van-button-primary-color</span>: <span class="hljs-built_in">var</span>(--van-white);\n  <span class="hljs-attr">--van-button-primary-background-color</span>: <span class="hljs-built_in">var</span>(--van-primary-color);\n}\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-css-bian-liang" tabindex="-1">自定义 CSS 变量</h3><h4 id="tong-guo-css-fu-gai" tabindex="-1">通过 CSS 覆盖</h4><p>你可以直接在代码中覆盖这些 CSS 变量，Button 组件的样式会随之发生改变：</p><pre><code class="language-css"><span class="hljs-comment">/* 添加这段样式后，Primary Button 会变成红色 */</span>\n<span class="hljs-selector-pseudo">:root</span> {\n  <span class="hljs-attr">--van-button-primary-background-color</span>: red;\n}\n</code></pre><h4 id="tong-guo-configprovider-fu-gai" tabindex="-1">通过 ConfigProvider 覆盖</h4><p><code>ConfigProvider</code> 组件提供了覆盖 CSS 变量的能力，你需要在根节点包裹一个 <code>ConfigProvider</code> 组件，并通过 <code>theme-vars</code> 属性来配置一些主题变量。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-config-provider</span> <span class="hljs-attr">:theme-vars</span>=<span class="hljs-string">&quot;themeVars&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-form</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;rate&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;评分&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;rate&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;slider&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;滑块&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;slider&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin: 16px&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">round</span> <span class="hljs-attr">block</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">native-type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>\n        提交\n      <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-form</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-config-provider</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> rate = <span class="hljs-title function_">ref</span>(<span class="hljs-number">4</span>);\n    <span class="hljs-keyword">const</span> slider = <span class="hljs-title function_">ref</span>(<span class="hljs-number">50</span>);\n\n    <span class="hljs-comment">// themeVars 内的值会被转换成对应 CSS 变量</span>\n    <span class="hljs-comment">// 比如 sliderBarHeight 会转换成 `--van-slider-bar-height`</span>\n    <span class="hljs-keyword">const</span> themeVars = {\n      <span class="hljs-attr">rateIconFullColor</span>: <span class="hljs-string">&#39;#07c160&#39;</span>,\n      <span class="hljs-attr">sliderBarHeight</span>: <span class="hljs-string">&#39;4px&#39;</span>,\n      <span class="hljs-attr">sliderButtonWidth</span>: <span class="hljs-string">&#39;20px&#39;</span>,\n      <span class="hljs-attr">sliderButtonHeight</span>: <span class="hljs-string">&#39;20px&#39;</span>,\n      <span class="hljs-attr">sliderActiveBackgroundColor</span>: <span class="hljs-string">&#39;#07c160&#39;</span>,\n      <span class="hljs-attr">buttonPrimaryBorderColor</span>: <span class="hljs-string">&#39;#07c160&#39;</span>,\n      <span class="hljs-attr">buttonPrimaryBackgroundColor</span>: <span class="hljs-string">&#39;#07c160&#39;</span>,\n    };\n\n    <span class="hljs-keyword">return</span> {\n      rate,\n      slider,\n      themeVars,\n    };\n  },\n};\n</code></pre><blockquote><p>注意：ConfigProvider 仅影响它的子组件的样式，不影响全局 root 节点。</p></blockquote></div><div class="van-doc-card"><h3 id="ji-chu-bian-liang" tabindex="-1">基础变量</h3><p>Vant 中的 CSS 变量分为 <strong>基础变量</strong> 和 <strong>组件变量</strong>。组件变量会继承基础变量，因此在修改基础变量后，会影响所有相关的组件。</p><h4 id="xiu-gai-bian-liang" tabindex="-1">修改变量</h4><p>由于 CSS 变量继承机制的原因，\b 两者的修改方式有一定差异：</p><ul><li>基础变量只能通过 <code>root 选择器</code> 修改，不能通过 <code>ConfigProvider 组件</code> 修改。</li><li>组件变量可以通过 <code>root 选择器</code> 和 <code>ConfigProvider 组件</code> 修改。</li></ul><h4 id="bian-liang-lie-biao" tabindex="-1">变量列表</h4><p>下面是所有的基础变量：</p><pre><code class="language-less"><span class="hljs-comment">// Color Palette</span>\n<span class="hljs-attr">--van-black</span>: #000;\n<span class="hljs-attr">--van-white</span>: #fff;\n<span class="hljs-attr">--van-gray-1</span>: #f7f8fa;\n<span class="hljs-attr">--van-gray-2</span>: #f2f3f5;\n<span class="hljs-attr">--van-gray-3</span>: #ebedf0;\n<span class="hljs-attr">--van-gray-4</span>: #dcdee0;\n<span class="hljs-attr">--van-gray-5</span>: #c8c9cc;\n<span class="hljs-attr">--van-gray-6</span>: #969799;\n<span class="hljs-attr">--van-gray-7</span>: #646566;\n<span class="hljs-attr">--van-gray-8</span>: #323233;\n<span class="hljs-attr">--van-red</span>: #ee0a24;\n<span class="hljs-attr">--van-blue</span>: #1989fa;\n<span class="hljs-attr">--van-orange</span>: #ff976a;\n<span class="hljs-attr">--van-orange-dark</span>: #ed6a0c;\n<span class="hljs-attr">--van-orange-light</span>: #fffbe8;\n<span class="hljs-attr">--van-green</span>: #07c160;\n\n<span class="hljs-comment">// Gradient Colors</span>\n<span class="hljs-attr">--van-gradient-red</span>: linear-gradient(to <span class="hljs-attribute">right, #ff6034, #ee0a24);\n--van-gradient-orange</span>: linear-gradient(to right, <span class="hljs-number">#ffd01e</span>, <span class="hljs-number">#ff8917</span>);\n\n<span class="hljs-comment">// Component Colors</span>\n<span class="hljs-attr">--van-primary-color</span>: var(<span class="hljs-attr">--van-blue</span>);\n<span class="hljs-attr">--van-success-color</span>: var(<span class="hljs-attr">--van-green</span>);\n<span class="hljs-attr">--van-danger-color</span>: var(<span class="hljs-attr">--van-red</span>);\n<span class="hljs-attr">--van-warning-color</span>: var(<span class="hljs-attr">--van-orange</span>);\n<span class="hljs-attr">--van-text-color</span>: var(<span class="hljs-attr">--van-gray-8</span>);\n<span class="hljs-attr">--van-active-color</span>: var(<span class="hljs-attr">--van-gray-2</span>);\n<span class="hljs-attr">--van-active-opacity</span>: 0.7;\n<span class="hljs-attr">--van-disabled-opacity</span>: 0.5;\n<span class="hljs-attr">--van-background-color</span>: var(<span class="hljs-attr">--van-gray-1</span>);\n<span class="hljs-attr">--van-background-color-light</span>: #fafafa;\n<span class="hljs-attr">--van-text-link-color</span>: #576b95;\n\n<span class="hljs-comment">// Padding</span>\n<span class="hljs-attr">--van-padding-base</span>: 4px;\n<span class="hljs-attr">--van-padding-xs</span>: 8px;\n<span class="hljs-attr">--van-padding-sm</span>: 12px;\n<span class="hljs-attr">--van-padding-md</span>: 16px;\n<span class="hljs-attr">--van-padding-lg</span>: 24px;\n<span class="hljs-attr">--van-padding-xl</span>: 32px;\n\n<span class="hljs-comment">// Font</span>\n<span class="hljs-attr">--van-font-size-xs</span>: 10px;\n<span class="hljs-attr">--van-font-size-sm</span>: 12px;\n<span class="hljs-attr">--van-font-size-md</span>: 14px;\n<span class="hljs-attr">--van-font-size-lg</span>: 16px;\n<span class="hljs-attr">--van-font-weight-bold</span>: 500;\n<span class="hljs-attr">--van-line-height-xs</span>: 14px;\n<span class="hljs-attr">--van-line-height-sm</span>: 18px;\n<span class="hljs-attr">--van-line-height-md</span>: 20px;\n<span class="hljs-attr">--van-line-height-lg</span>: 22px;\n<span class="hljs-attr">--van-base-font-family</span>: -apple-system, BlinkMacSystemFont, &#39;Helvetica Neue&#39;,\n  Helvetica, Segoe UI, Arial, Roboto, &#39;PingFang SC&#39;, &#39;miui&#39;, &#39;Hiragino Sans GB&#39;,\n  &#39;Microsoft Yahei&#39;, sans-serif;\n<span class="hljs-attr">--van-price-integer-font-family</span>: Avenir-Heavy, PingFang SC, Helvetica Neue,\n  Arial, sans-serif;\n\n<span class="hljs-comment">// Animation</span>\n<span class="hljs-attr">--van-animation-duration-base</span>: 0.3s;\n<span class="hljs-attr">--van-animation-duration-fast</span>: 0.2s;\n<span class="hljs-attr">--van-animation-timing-function-enter</span>: ease-out;\n<span class="hljs-attr">--van-animation-timing-function-leave</span>: ease-in;\n\n<span class="hljs-comment">// Border</span>\n<span class="hljs-attr">--van-border-color</span>: var(<span class="hljs-attr">--van-gray-3</span>);\n<span class="hljs-attr">--van-border-width-base</span>: 1px;\n<span class="hljs-attr">--van-border-radius-sm</span>: 2px;\n<span class="hljs-attr">--van-border-radius-md</span>: 4px;\n<span class="hljs-attr">--van-border-radius-lg</span>: 8px;\n<span class="hljs-attr">--van-border-radius-max</span>: 999px;\n</code></pre><p>你可以在各个组件文档底部的表格中查看组件变量。</p></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>theme-vars</td><td>自定义主题变量</td><td><em>object</em></td><td>-</td></tr><tr><td>tag <code>v3.1.2</code></td><td>根节点对应的 HTML 标签名</td><td><em>string</em></td><td><code>div</code></td></tr><tr><td>icon-prefix <code>v3.1.3</code></td><td>所有图标的类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props">class-prefix 属性</a></td><td><em>string</em></td><td><code>van-icon</code></td></tr></tbody></table></div>',9),wt=[yt],qt={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",ft,wt)))},xt={class:"van-doc-markdown-body"},kt=t('<h1>ContactCard 联系人卡片</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>以卡片的形式展示联系人信息。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ContactCard</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ContactCard</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="tian-jia-lian-xi-ren" tabindex="-1">添加联系人</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-contact-card</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;add&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onAdd&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onAdd</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;新增&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      onAdd,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="bian-ji-lian-xi-ren" tabindex="-1">编辑联系人</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-contact-card</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;edit&quot;</span> <span class="hljs-attr">:tel</span>=<span class="hljs-string">&quot;tel&quot;</span> <span class="hljs-attr">:name</span>=<span class="hljs-string">&quot;name&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onEdit&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> tel = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;13000000000&#39;</span>);\n    <span class="hljs-keyword">const</span> name = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;张三&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onEdit</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;edit&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      tel,\n      name,\n      currentContact,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="bu-ke-bian-ji" tabindex="-1">不可编辑</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-contact-card</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;edit&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;张三&quot;</span> <span class="hljs-attr">tel</span>=<span class="hljs-string">&quot;13000000000&quot;</span> <span class="hljs-attr">:editable</span>=<span class="hljs-string">&quot;false&quot;</span> /&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>卡片类型，可选值为 <code>edit</code></td><td><em>string</em></td><td><code>add</code></td></tr><tr><td>name</td><td>联系人姓名</td><td><em>string</em></td><td>-</td></tr><tr><td>tel</td><td>联系人手机号</td><td><em>string</em></td><td>-</td></tr><tr><td>add-text</td><td>添加时的文案提示</td><td><em>string</em></td><td><code>添加联系人</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ContactCardType</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-contact-card-padding</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-contact-card-add-icon-size</td><td><em>40px</em></td><td>-</td></tr><tr><td>–van-contact-card-add-icon-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-contact-card-value-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr></tbody></table></div>',13),zt=[kt],_t={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",xt,zt)))},Ct={class:"van-doc-markdown-body"},St=t('<h1>ContactEdit 联系人编辑</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>编辑并保存联系人信息。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ContactEdit</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ContactEdit</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-contact-edit</span>\n  <span class="hljs-attr">is-edit</span>\n  <span class="hljs-attr">show-set-default</span>\n  <span class="hljs-attr">:contact-info</span>=<span class="hljs-string">&quot;editingContact&quot;</span>\n  <span class="hljs-attr">set-default-label</span>=<span class="hljs-string">&quot;设为默认联系人&quot;</span>\n  @<span class="hljs-attr">save</span>=<span class="hljs-string">&quot;onSave&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> editingContact = <span class="hljs-title function_">ref</span>({});\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSave</span> = (<span class="hljs-params">contactInfo</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;保存&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onDelete</span> = (<span class="hljs-params">contactInfo</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;删除&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      onSave,\n      onDelete,\n      editingContact,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>contact-info</td><td>联系人信息</td><td><em>Contact</em></td><td><code>{}</code></td></tr><tr><td>is-edit</td><td>是否为编辑联系人</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>is-saving</td><td>是否显示保存按钮加载动画</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>is-deleting</td><td>是否显示删除按钮加载动画</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>tel-validator</td><td>手机号格式校验函数</td><td><em>(tel: string) =&gt; boolean</em></td><td>-</td></tr><tr><td>show-set-default</td><td>是否显示默认联系人栏</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>set-default-label</td><td>默认联系人栏文案</td><td><em>string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>save</td><td>点击保存按钮时触发</td><td>content：表单内容</td></tr><tr><td>delete</td><td>点击删除按钮时触发</td><td>content：表单内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="contact-shu-ju-jie-gou" tabindex="-1">Contact 数据结构</h3><table><thead><tr><th>键名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>name</td><td>联系人姓名</td><td><em>string</em></td></tr><tr><td>tel</td><td>联系人手机号</td><td><em>number | string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ContactEditInfo</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-contact-edit-padding</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-contact-edit-fields-radius</td><td><em>var(–van-border-radius-md)</em></td><td>-</td></tr><tr><td>–van-contact-edit-buttons-padding</td><td><em>var(–van-padding-xl) 0</em></td><td>-</td></tr><tr><td>–van-contact-edit-button-margin-bottom</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-contact-edit-button-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-contact-edit-field-label-width</td><td><em>4.1em</em></td><td>-</td></tr></tbody></table></div>',12),Tt=[St],It={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ct,Tt)))},Pt={class:"van-doc-markdown-body"},Dt=t('<h1>ContactList 联系人列表</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>展示联系人列表。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ContactList</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ContactList</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-contact-list</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;chosenContactId&quot;</span>\n  <span class="hljs-attr">:list</span>=<span class="hljs-string">&quot;list&quot;</span>\n  <span class="hljs-attr">default-tag-text</span>=<span class="hljs-string">&quot;默认&quot;</span>\n  @<span class="hljs-attr">add</span>=<span class="hljs-string">&quot;onAdd&quot;</span>\n  @<span class="hljs-attr">edit</span>=<span class="hljs-string">&quot;onEdit&quot;</span>\n  @<span class="hljs-attr">select</span>=<span class="hljs-string">&quot;onSelect&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> chosenContactId = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;1&#39;</span>);\n    <span class="hljs-keyword">const</span> list = <span class="hljs-title function_">ref</span>([\n      {\n        <span class="hljs-attr">id</span>: <span class="hljs-string">&#39;1&#39;</span>,\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;张三&#39;</span>,\n        <span class="hljs-attr">tel</span>: <span class="hljs-string">&#39;13000000000&#39;</span>,\n        <span class="hljs-attr">isDefault</span>: <span class="hljs-literal">true</span>,\n      },\n      {\n        <span class="hljs-attr">id</span>: <span class="hljs-string">&#39;2&#39;</span>,\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;李四&#39;</span>,\n        <span class="hljs-attr">tel</span>: <span class="hljs-string">&#39;1310000000&#39;</span>,\n      },\n    ]);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onAdd</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;新增&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onEdit</span> = (<span class="hljs-params">contact</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;编辑&#39;</span> + contact.<span class="hljs-property">id</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSelect</span> = (<span class="hljs-params">contact</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;选择&#39;</span> + contact.<span class="hljs-property">id</span>);\n\n    <span class="hljs-keyword">return</span> {\n      list,\n      onAdd,\n      onEdit,\n      onSelect,\n      chosenContactId,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>当前选中联系人的 id</td><td><em>number | string</em></td><td>-</td></tr><tr><td>list</td><td>联系人列表</td><td><em>Contact[]</em></td><td><code>[]</code></td></tr><tr><td>add-text</td><td>新建按钮文案</td><td><em>string</em></td><td><code>新建联系人</code></td></tr><tr><td>default-tag-text</td><td>默认联系人标签文案</td><td><em>string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>add</td><td>点击新增按钮时触发</td><td>-</td></tr><tr><td>edit</td><td>点击编辑按钮时触发</td><td><em>contact: Contact，index: number</em></td></tr><tr><td>select</td><td>切换选中的联系人时触发</td><td><em>contact: Contact，index: number</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="contact-shu-ju-jie-gou" tabindex="-1">Contact 数据结构</h3><table><thead><tr><th>键名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>id</td><td>每位联系人的唯一标识</td><td><em>number | string</em></td></tr><tr><td>name</td><td>联系人姓名</td><td><em>string</em></td></tr><tr><td>tel</td><td>联系人手机号</td><td><em>number | string</em></td></tr><tr><td>isDefault</td><td>是否为默认联系人</td><td><em>boolean</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ContactListItem</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-contact-list-edit-icon-size</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-contact-list-add-button-z-index</td><td><em>999</em></td><td>-</td></tr><tr><td>–van-contact-list-item-padding</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-contact-list-item-radio-icon-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr></tbody></table></div>',12),At=[Dt],Nt={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Pt,At)))},Et={class:"van-doc-markdown-body"},Rt=t('<h1>CountDown 倒计时</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于实时展示倒计时数值，支持毫秒精度。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CountDown</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CountDown</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p><code>time</code> 属性表示倒计时总时长，单位为毫秒。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-count-down</span> <span class="hljs-attr">:time</span>=<span class="hljs-string">&quot;time&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> time = <span class="hljs-title function_">ref</span>(<span class="hljs-number">30</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>);\n    <span class="hljs-keyword">return</span> { time };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-ge-shi" tabindex="-1">自定义格式</h3><p>通过 <code>format</code> 属性设置倒计时文本的内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-count-down</span> <span class="hljs-attr">:time</span>=<span class="hljs-string">&quot;time&quot;</span> <span class="hljs-attr">format</span>=<span class="hljs-string">&quot;DD 天 HH 时 mm 分 ss 秒&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="hao-miao-ji-xuan-ran" tabindex="-1">毫秒级渲染</h3><p>倒计时默认每秒渲染一次，设置 <code>millisecond</code> 属性可以开启毫秒级渲染。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-count-down</span> <span class="hljs-attr">millisecond</span> <span class="hljs-attr">:time</span>=<span class="hljs-string">&quot;time&quot;</span> <span class="hljs-attr">format</span>=<span class="hljs-string">&quot;HH:mm:ss:SS&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yang-shi" tabindex="-1">自定义样式</h3><p>通过插槽自定义倒计时的样式，<code>timeData</code> 对象格式见下方表格。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-count-down</span> <span class="hljs-attr">:time</span>=<span class="hljs-string">&quot;time&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">default</span>=<span class="hljs-string">&quot;timeData&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>{{ timeData.hours }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;colon&quot;</span>&gt;</span>:<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>{{ timeData.minutes }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;colon&quot;</span>&gt;</span>:<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>{{ timeData.seconds }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-count-down</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.colon</span> {\n    <span class="hljs-attribute">display</span>: inline-block;\n    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">4px</span>;\n    <span class="hljs-attribute">color</span>: <span class="hljs-number">#ee0a24</span>;\n  }\n  <span class="hljs-selector-class">.block</span> {\n    <span class="hljs-attribute">display</span>: inline-block;\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">22px</span>;\n    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;\n    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>;\n    <span class="hljs-attribute">text-align</span>: center;\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ee0a24</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="shou-dong-kong-zhi" tabindex="-1">手动控制</h3><p>通过 ref 获取到组件实例后，可以调用 <code>start</code>、<code>pause</code>、<code>reset</code> 方法。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-count-down</span>\n  <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;countDown&quot;</span>\n  <span class="hljs-attr">millisecond</span>\n  <span class="hljs-attr">:time</span>=<span class="hljs-string">&quot;3000&quot;</span>\n  <span class="hljs-attr">:auto-start</span>=<span class="hljs-string">&quot;false&quot;</span>\n  <span class="hljs-attr">format</span>=<span class="hljs-string">&quot;ss:SSS&quot;</span>\n  @<span class="hljs-attr">finish</span>=<span class="hljs-string">&quot;onFinish&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">clickable</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;开始&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;play-circle-o&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;start&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;暂停&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;pause-circle-o&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;pause&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;重置&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;replay&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;reset&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> countDown = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">start</span> = (<span class="hljs-params"></span>) =&gt; {\n      countDown.<span class="hljs-property">value</span>.<span class="hljs-title function_">start</span>();\n    };\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">pause</span> = (<span class="hljs-params"></span>) =&gt; {\n      countDown.<span class="hljs-property">value</span>.<span class="hljs-title function_">pause</span>();\n    };\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">reset</span> = (<span class="hljs-params"></span>) =&gt; {\n      countDown.<span class="hljs-property">value</span>.<span class="hljs-title function_">reset</span>();\n    };\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onFinish</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;倒计时结束&#39;</span>);\n\n    <span class="hljs-keyword">return</span> {\n      start,\n      pause,\n      reset,\n      onFinish,\n      countDown,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>time</td><td>倒计时时长，单位毫秒</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>format</td><td>时间格式</td><td><em>string</em></td><td><code>HH:mm:ss</code></td></tr><tr><td>auto-start</td><td>是否自动开始倒计时</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>millisecond</td><td>是否开启毫秒级渲染</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="format-ge-shi" tabindex="-1">format 格式</h3><table><thead><tr><th>格式</th><th>说明</th></tr></thead><tbody><tr><td>DD</td><td>天数</td></tr><tr><td>HH</td><td>小时</td></tr><tr><td>mm</td><td>分钟</td></tr><tr><td>ss</td><td>秒数</td></tr><tr><td>S</td><td>毫秒（1 位）</td></tr><tr><td>SS</td><td>毫秒（2 位）</td></tr><tr><td>SSS</td><td>毫秒（3 位）</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>finish</td><td>倒计时结束时触发</td><td>-</td></tr><tr><td>change</td><td>倒计时变化时触发</td><td><em>currentTime: CurrentTime</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>default</td><td>自定义内容</td><td><em>currentTime: CurrentTime</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="currenttime-ge-shi" tabindex="-1">CurrentTime 格式</h3><table><thead><tr><th>名称</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>total</td><td>剩余总时间（单位毫秒）</td><td><em>number</em></td></tr><tr><td>days</td><td>剩余天数</td><td><em>number</em></td></tr><tr><td>hours</td><td>剩余小时</td><td><em>number</em></td></tr><tr><td>minutes</td><td>剩余分钟</td><td><em>number</em></td></tr><tr><td>seconds</td><td>剩余秒数</td><td><em>number</em></td></tr><tr><td>milliseconds</td><td>剩余毫秒</td><td><em>number</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><p>通过 ref 可以获取到 CountDown 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>start</td><td>开始倒计时</td><td>-</td><td>-</td></tr><tr><td>pause</td><td>暂停倒计时</td><td>-</td><td>-</td></tr><tr><td>reset</td><td>重设倒计时，若 <code>auto-start</code> 为 <code>true</code>，重设后会自动开始倒计时</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CountDownInstance</span>, <span class="hljs-title class_">CountDownCurrentTime</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>CountDownInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CountDownInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> countDownRef = ref&lt;<span class="hljs-title class_">CountDownInstance</span>&gt;();\n\ncountDownRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">start</span>();\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-count-down-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-count-down-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-count-down-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="zai-ios-xi-tong-shang-dao-ji-shi-bu-sheng-xiao" tabindex="-1">在 iOS 系统上倒计时不生效？</h3><p>如果你遇到了在 iOS 上倒计时不生效的问题，请确认在创建 Date 对象时没有使用<code>new Date(&#39;2020-01-01&#39;)</code>这样的写法，iOS 不支持以中划线分隔的日期格式，正确写法是<code>new Date(&#39;2020/01/01&#39;)</code>。</p><p>对此问题的详细解释：<a href="https://stackoverflow.com/questions/13363673/javascript-date-is-invalid-on-ios">stackoverflow</a>。</p></div>',21),Ut=[Rt],Bt={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Et,Ut)))},Vt={class:"van-doc-markdown-body"},Lt=t('<h1>Coupon 优惠券选择器</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于优惠券的兑换和选择。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CouponCell</span>, <span class="hljs-title class_">CouponList</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CouponCell</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CouponList</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 优惠券单元格 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-coupon-cell</span>\n  <span class="hljs-attr">:coupons</span>=<span class="hljs-string">&quot;coupons&quot;</span>\n  <span class="hljs-attr">:chosen-coupon</span>=<span class="hljs-string">&quot;chosenCoupon&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showList = true&quot;</span>\n/&gt;</span>\n<span class="hljs-comment">&lt;!-- 优惠券列表 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showList&quot;</span>\n  <span class="hljs-attr">round</span>\n  <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>\n  <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 90%; padding-top: 4px;&quot;</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-coupon-list</span>\n    <span class="hljs-attr">:coupons</span>=<span class="hljs-string">&quot;coupons&quot;</span>\n    <span class="hljs-attr">:chosen-coupon</span>=<span class="hljs-string">&quot;chosenCoupon&quot;</span>\n    <span class="hljs-attr">:disabled-coupons</span>=<span class="hljs-string">&quot;disabledCoupons&quot;</span>\n    @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>\n    @<span class="hljs-attr">exchange</span>=<span class="hljs-string">&quot;onExchange&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> coupon = {\n      <span class="hljs-attr">available</span>: <span class="hljs-number">1</span>,\n      <span class="hljs-attr">condition</span>: <span class="hljs-string">&#39;无使用门槛\\n最多优惠12元&#39;</span>,\n      <span class="hljs-attr">reason</span>: <span class="hljs-string">&#39;&#39;</span>,\n      <span class="hljs-attr">value</span>: <span class="hljs-number">150</span>,\n      <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;优惠券名称&#39;</span>,\n      <span class="hljs-attr">startAt</span>: <span class="hljs-number">1489104000</span>,\n      <span class="hljs-attr">endAt</span>: <span class="hljs-number">1514592000</span>,\n      <span class="hljs-attr">valueDesc</span>: <span class="hljs-string">&#39;1.5&#39;</span>,\n      <span class="hljs-attr">unitDesc</span>: <span class="hljs-string">&#39;元&#39;</span>,\n    };\n\n    <span class="hljs-keyword">const</span> coupons = <span class="hljs-title function_">ref</span>([coupon]);\n    <span class="hljs-keyword">const</span> showList = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> chosenCoupon = <span class="hljs-title function_">ref</span>(-<span class="hljs-number">1</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">index</span>) =&gt; {\n      showList.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      chosenCoupon.<span class="hljs-property">value</span> = index;\n    };\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onExchange</span> = (<span class="hljs-params">code</span>) =&gt; {\n      coupons.<span class="hljs-property">value</span>.<span class="hljs-title function_">push</span>(coupon);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      coupons,\n      showList,\n      onChange,\n      onExchange,\n      chosenCoupon,\n      <span class="hljs-attr">disabledCoupons</span>: [coupon],\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="couponcell-props" tabindex="-1">CouponCell Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>单元格标题</td><td><em>string</em></td><td><code>优惠券</code></td></tr><tr><td>chosen-coupon</td><td>当前选中优惠券的索引</td><td><em>number | string</em></td><td><code>-1</code></td></tr><tr><td>coupons</td><td>可用优惠券列表</td><td><em>Coupon[]</em></td><td><code>[]</code></td></tr><tr><td>editable</td><td>能否切换优惠券</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>border</td><td>是否显示内边框</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>currency</td><td>货币符号</td><td><em>string</em></td><td><code>¥</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="couponlist-props" tabindex="-1">CouponList Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model:code</td><td>当前输入的兑换码</td><td><em>string</em></td><td>-</td></tr><tr><td>chosen-coupon</td><td>当前选中优惠券的索引</td><td><em>number</em></td><td><code>-1</code></td></tr><tr><td>coupons</td><td>可用优惠券列表</td><td><em>Coupon[]</em></td><td><code>[]</code></td></tr><tr><td>disabled-coupons</td><td>不可用优惠券列表</td><td><em>Coupon[]</em></td><td><code>[]</code></td></tr><tr><td>enabled-title</td><td>可用优惠券列表标题</td><td><em>string</em></td><td><code>可使用优惠券</code></td></tr><tr><td>disabled-title</td><td>不可用优惠券列表标题</td><td><em>string</em></td><td><code>不可使用优惠券</code></td></tr><tr><td>exchange-button-text</td><td>兑换按钮文字</td><td><em>string</em></td><td><code>兑换</code></td></tr><tr><td>exchange-button-loading</td><td>是否显示兑换按钮加载动画</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>exchange-button-disabled</td><td>是否禁用兑换按钮</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>exchange-min-length</td><td>兑换码最小长度</td><td><em>number</em></td><td><code>1</code></td></tr><tr><td>displayed-coupon-index</td><td>滚动至特定优惠券位置</td><td><em>number</em></td><td>-</td></tr><tr><td>show-close-button</td><td>是否显示列表底部按钮</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-button-text</td><td>列表底部按钮文字</td><td><em>string</em></td><td><code>不使用优惠</code></td></tr><tr><td>input-placeholder</td><td>输入框文字提示</td><td><em>string</em></td><td><code>请输入优惠码</code></td></tr><tr><td>show-exchange-bar</td><td>是否展示兑换栏</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>currency</td><td>货币符号</td><td><em>string</em></td><td><code>¥</code></td></tr><tr><td>empty-image</td><td>列表为空时的占位图</td><td><em>string</em></td><td><code>https://img.yzcdn.cn/vant/coupon-empty.png</code></td></tr><tr><td>show-count</td><td>是否展示可用 / 不可用数量</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="couponlist-events" tabindex="-1">CouponList Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>优惠券切换回调</td><td>index, 选中优惠券的索引</td></tr><tr><td>exchange</td><td>兑换优惠券回调</td><td>code, 兑换码</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="couponlist-slots" tabindex="-1">CouponList Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>list-footer <code>v3.0.18</code></td><td>优惠券列表底部</td></tr><tr><td>disabled-list-footer <code>v3.0.18</code></td><td>不可用优惠券列表底部</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="coupon-shu-ju-jie-gou" tabindex="-1">Coupon 数据结构</h3><table><thead><tr><th>键名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>id</td><td>优惠券 id</td><td><em>string</em></td></tr><tr><td>name</td><td>优惠券名称</td><td><em>string</em></td></tr><tr><td>condition</td><td>满减条件</td><td><em>string</em></td></tr><tr><td>startAt</td><td>卡有效开始时间 (时间戳, 单位秒)</td><td><em>number</em></td></tr><tr><td>endAt</td><td>卡失效日期 (时间戳, 单位秒)</td><td><em>number</em></td></tr><tr><td>description</td><td>描述信息，优惠券可用时展示</td><td><em>string</em></td></tr><tr><td>reason</td><td>不可用原因，优惠券不可用时展示</td><td><em>string</em></td></tr><tr><td>value</td><td>折扣券优惠金额，单位分</td><td><em>number</em></td></tr><tr><td>valueDesc</td><td>折扣券优惠金额文案</td><td><em>string</em></td></tr><tr><td>unitDesc</td><td>单位文案</td><td><em>string</em></td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-coupon-margin</td><td><em>0 var(–van-padding-sm) var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-coupon-content-height</td><td><em>84px</em></td><td>-</td></tr><tr><td>–van-coupon-content-padding</td><td><em>14px 0</em></td><td>-</td></tr><tr><td>–van-coupon-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-coupon-active-background-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-coupon-border-radius</td><td><em>var(–van-border-radius-lg)</em></td><td>-</td></tr><tr><td>–van-coupon-box-shadow</td><td><em>0 0 4px rgba(0, 0, 0, 0.1)</em></td><td>-</td></tr><tr><td>–van-coupon-head-width</td><td><em>96px</em></td><td>-</td></tr><tr><td>–van-coupon-amount-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-coupon-amount-font-size</td><td><em>30px</em></td><td>-</td></tr><tr><td>–van-coupon-currency-font-size</td><td><em>40%</em></td><td>-</td></tr><tr><td>–van-coupon-name-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-coupon-disabled-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-coupon-description-padding</td><td><em>var(–van-padding-xs) var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-coupon-description-border-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr><tr><td>–van-coupon-corner-checkbox-icon-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-coupon-list-background-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-coupon-list-field-padding</td><td><em>5px 0 5px var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-coupon-list-exchange-button-height</td><td><em>32px</em></td><td>-</td></tr><tr><td>–van-coupon-list-close-button-height</td><td><em>40px</em></td><td>-</td></tr><tr><td>–van-coupon-list-empty-image-size</td><td><em>200px</em></td><td>-</td></tr><tr><td>–van-coupon-list-empty-tip-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-coupon-list-empty-tip-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-coupon-list-empty-tip-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-coupon-cell-selected-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr></tbody></table></div>',13),Ft=[Lt],Wt={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Vt,Ft)))},Mt={class:"van-doc-markdown-body"},Ot=t('<h1>DatetimePicker 时间选择</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>时间选择器，支持日期、年月、时分等维度，通常与<a href="#/zh-CN/popup">弹出层</a>组件配合使用。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">DatetimePicker</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">DatetimePicker</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="xuan-ze-nian-yue-ri" tabindex="-1">选择年月日</h3><p>DatetimePicker 通过 type 属性来定义需要选择的时间类型，type 为 <code>date</code> 表示选择年月日。通过 min-date 和 max-date 属性可以确定可选的时间范围。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;date&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;选择年月日&quot;</span>\n  <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span>\n  <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2021</span>, <span class="hljs-number">0</span>, <span class="hljs-number">17</span>));\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n      <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2025</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>),\n      currentDate,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xuan-ze-nian-yue" tabindex="-1">选择年月</h3><p>将 type 设置为 <code>year-month</code> 即可选择年份和月份。通过传入 <code>formatter</code> 函数，可以对选项文字进行格式化处理。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;year-month&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;选择年月&quot;</span>\n  <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span>\n  <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span>\n  <span class="hljs-attr">:formatter</span>=<span class="hljs-string">&quot;formatter&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatter</span> = (<span class="hljs-params">type, val</span>) =&gt; {\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;year&#39;</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">${val}</span>年`</span>;\n      }\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;month&#39;</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">${val}</span>月`</span>;\n      }\n      <span class="hljs-keyword">return</span> val;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n      <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2025</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>),\n      formatter,\n      currentDate,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xuan-ze-yue-ri" tabindex="-1">选择月日</h3><p>将 type 设置为 <code>month-day</code> 即可选择月份和日期。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;month-day&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;选择月日&quot;</span>\n  <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span>\n  <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span>\n  <span class="hljs-attr">:formatter</span>=<span class="hljs-string">&quot;formatter&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatter</span> = (<span class="hljs-params">type, val</span>) =&gt; {\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;month&#39;</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">${val}</span>月`</span>;\n      }\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;day&#39;</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">${val}</span>日`</span>;\n      }\n      <span class="hljs-keyword">return</span> val;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n      <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2025</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>),\n      formatter,\n      currentDate,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xuan-ze-shi-jian" tabindex="-1">选择时间</h3><p>将 type 设置为 <code>time</code> 即可选择时间（小时和分钟）。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentTime&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;time&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;选择时间&quot;</span>\n  <span class="hljs-attr">:min-hour</span>=<span class="hljs-string">&quot;10&quot;</span>\n  <span class="hljs-attr">:max-hour</span>=<span class="hljs-string">&quot;20&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentTime = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;12:00&#39;</span>);\n    <span class="hljs-keyword">return</span> { currentTime };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xuan-ze-wan-zheng-shi-jian" tabindex="-1">选择完整时间</h3><p>将 type 设置为 <code>datetime</code> 即可选择完整时间，包括年月日和小时、分钟。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;datetime&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;选择完整时间&quot;</span>\n  <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span>\n  <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n      <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2025</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>),\n      currentDate,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xuan-ze-nian-yue-ri-xiao-shi" tabindex="-1">选择年月日小时</h3><p>将 type 设置为 <code>datehour</code> 即可选择日期和小时，包括年月日和小时。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;datehour&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;选择年月日小时&quot;</span>\n  <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span>\n  <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n      <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2025</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>),\n      currentDate,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xuan-xiang-guo-lu-qi" tabindex="-1">选项过滤器</h3><p>通过传入 <code>filter</code> 函数，可以对选项数组进行过滤，实现自定义时间间隔。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentTime&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;time&quot;</span> <span class="hljs-attr">:filter</span>=<span class="hljs-string">&quot;filter&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentTime = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;12:00&#39;</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">filter</span> = (<span class="hljs-params">type, options</span>) =&gt; {\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;minute&#39;</span>) {\n        <span class="hljs-keyword">return</span> options.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">option</span>) =&gt;</span> <span class="hljs-title class_">Number</span>(option) % <span class="hljs-number">5</span> === <span class="hljs-number">0</span>);\n      }\n      <span class="hljs-keyword">return</span> options;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      filter,\n      currentTime,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-lie-pai-xu" tabindex="-1">自定义列排序</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;date&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;自定义列排序&quot;</span>\n  <span class="hljs-attr">:columns-order</span>=<span class="hljs-string">&quot;[&#39;month&#39;, &#39;day&#39;, &#39;year&#39;]&quot;</span>\n  <span class="hljs-attr">:formatter</span>=<span class="hljs-string">&quot;formatter&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatter</span> = (<span class="hljs-params">type, val</span>) =&gt; {\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;year&#39;</span>) {\n        <span class="hljs-keyword">return</span> val + <span class="hljs-string">&#39;年&#39;</span>;\n      }\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;month&#39;</span>) {\n        <span class="hljs-keyword">return</span> val + <span class="hljs-string">&#39;月&#39;</span>;\n      }\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;day&#39;</span>) {\n        <span class="hljs-keyword">return</span> val + <span class="hljs-string">&#39;日&#39;</span>;\n      }\n      <span class="hljs-keyword">return</span> val;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      formatter,\n      currentDate,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>时间类型，可选值为 <code>date</code> <code>time</code> <br> <code>year-month</code> <code>month-day</code> <code>datehour</code></td><td><em>string</em></td><td><code>datetime</code></td></tr><tr><td>title</td><td>顶部栏标题</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>confirm-button-text</td><td>确认按钮文字</td><td><em>string</em></td><td><code>确认</code></td></tr><tr><td>cancel-button-text</td><td>取消按钮文字</td><td><em>string</em></td><td><code>取消</code></td></tr><tr><td>show-toolbar</td><td>是否显示顶部栏</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>loading</td><td>是否显示加载状态</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly</td><td>是否为只读状态，只读状态下无法切换选项</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>filter</td><td>选项过滤函数</td><td><em>(type: string, values: string[]) =&gt; string[]</em></td><td>-</td></tr><tr><td>formatter</td><td>选项格式化函数</td><td><em>(type: string, value: string) =&gt; string</em></td><td>-</td></tr><tr><td>columns-order</td><td>自定义列排序数组, 子项可选值为<br> <code>year</code>、<code>month</code>、<code>day</code>、<code>hour</code>、<code>minute</code></td><td><em>string[]</em></td><td>-</td></tr><tr><td>item-height</td><td>选项高度，支持 <code>px</code> <code>vw</code> <code>vh</code> <code>rem</code> 单位，默认 <code>px</code></td><td><em>number | string</em></td><td><code>44</code></td></tr><tr><td>visible-item-count</td><td>可见的选项个数</td><td><em>number | string</em></td><td><code>6</code></td></tr><tr><td>swipe-duration</td><td>快速滑动时惯性滚动的时长，单位<code>ms</code></td><td><em>number | string</em></td><td><code>1000</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="datepicker-props" tabindex="-1">DatePicker Props</h3><p>当时间选择器类型为 date 或 datetime 时，支持以下 props:</p><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>min-date</td><td>可选的最小时间，精确到分钟</td><td><em>Date</em></td><td>十年前</td></tr><tr><td>max-date</td><td>可选的最大时间，精确到分钟</td><td><em>Date</em></td><td>十年后</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="timepicker-props" tabindex="-1">TimePicker Props</h3><p>当时间选择器类型为 time 时，支持以下 props:</p><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>min-hour</td><td>可选的最小小时</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>max-hour</td><td>可选的最大小时</td><td><em>number | string</em></td><td><code>23</code></td></tr><tr><td>min-minute</td><td>可选的最小分钟</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>max-minute</td><td>可选的最大分钟</td><td><em>number | string</em></td><td><code>59</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>当值变化时触发的事件</td><td>value: 当前选中的时间</td></tr><tr><td>confirm</td><td>点击完成按钮时触发的事件</td><td>value: 当前选中的时间</td></tr><tr><td>cancel</td><td>点击取消按钮时触发的事件</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>default</td><td>自定义整个顶部栏的内容</td><td>-</td></tr><tr><td>title</td><td>自定义标题内容</td><td>-</td></tr><tr><td>confirm</td><td>自定义确认按钮内容</td><td>-</td></tr><tr><td>cancel</td><td>自定义取消按钮内容</td><td>-</td></tr><tr><td>option</td><td>自定义选项内容</td><td><em>option: string | object</em></td></tr><tr><td>columns-top</td><td>自定义选项上方内容</td><td>-</td></tr><tr><td>columns-bottom</td><td>自定义选项下方内容</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><p>通过 ref 可以获取到 DatetimePicker 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>getPicker</td><td>获取 Picker 实例，用于调用 Picker 的<a href="#/zh-CN/picker#fang-fa">实例方法</a></td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">DatetimePickerType</span>, <span class="hljs-title class_">DatetimePickerInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>DatetimePickerInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">DatetimePickerInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> datetimePickerRef = ref&lt;<span class="hljs-title class_">DatetimePickerInstance</span>&gt;();\n\ndatetimePickerRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">getPicker</span>();\n</code></pre></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="she-zhi-min-date-huo-max-date-hou-chu-xian-ye-mian-qia-si-de-qing-kuang" tabindex="-1">设置 min-date 或 max-date 后出现页面卡死的情况？</h3><p>请注意不要在模板中直接使用类似<code>min-date=&quot;new Date()&quot;</code>的写法，这样会导致每次渲染组件时传入一个新的 Date 对象，而传入新的数据会触发下一次渲染，从而陷入死循环。</p><p>正确的做法是将<code>min-date</code>作为一个数据定义在<code>data</code>函数中。</p></div><div class="van-doc-card"><h3 id="zai-ios-xi-tong-shang-chu-shi-hua-zu-jian-shi-bai" tabindex="-1">在 iOS 系统上初始化组件失败？</h3><p>如果你遇到了在 iOS 上无法渲染组件的问题，请确认在创建 Date 对象时没有使用<code>new Date(&#39;2020-01-01&#39;)</code>这样的写法，iOS 不支持以中划线分隔的日期格式，正确写法是<code>new Date(&#39;2020/01/01&#39;)</code>。</p><p>对此问题的详细解释：<a href="https://stackoverflow.com/questions/13363673/javascript-date-is-invalid-on-ios">stackoverflow</a>。</p></div><div class="van-doc-card"><h3 id="zai-zhuo-mian-duan-wu-fa-cao-zuo-zu-jian" tabindex="-1">在桌面端无法操作组件？</h3><p>参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei">桌面端适配</a>。</p></div><div class="van-doc-card"><h3 id="shi-fou-you-nian-fen-huo-yue-fen-xuan-ze-qi" tabindex="-1">是否有年份或月份选择器？</h3><p>如果仅需要选择年份或者月份，建议直接使用 <a href="#/zh-CN/picker">Picker</a> 组件。</p></div>',25),Gt=[Ot],Ht={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Mt,Gt)))},Kt={class:"van-doc-markdown-body"},$t=t('<h1>Dialog 弹出框</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>弹出模态框，常用于消息提示、消息确认，或在当前页面内完成特定的交互操作，支持函数调用和组件调用两种方式。</p></div><div class="van-doc-card"><h3 id="han-shu-diao-yong" tabindex="-1">函数调用</h3><p><code>Dialog</code> 是一个函数，调用后会直接在页面中弹出相应的模态框。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Dialog</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-title class_">Dialog</span>({ <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;提示&#39;</span> });\n</code></pre></div><div class="van-doc-card"><h3 id="zu-jian-diao-yong" tabindex="-1">组件调用</h3><p>通过组件调用 Dialog 时，可以通过下面的方式进行注册：</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Dialog</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-comment">// 全局注册</span>\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Dialog</span>);\n\n<span class="hljs-comment">// 局部注册</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">components</span>: {\n    [<span class="hljs-title class_">Dialog</span>.<span class="hljs-property">Component</span>.<span class="hljs-property">name</span>]: <span class="hljs-title class_">Dialog</span>.<span class="hljs-property">Component</span>,\n  },\n};\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="xiao-xi-ti-shi" tabindex="-1">消息提示</h3><p>用于提示一些消息，只包含一个确认按钮。</p><pre><code class="language-js"><span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">alert</span>({\n  <span class="hljs-attr">title</span>: <span class="hljs-string">&#39;标题&#39;</span>,\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;弹窗内容&#39;</span>,\n}).<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n  <span class="hljs-comment">// on close</span>\n});\n\n<span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">alert</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;弹窗内容&#39;</span>,\n}).<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n  <span class="hljs-comment">// on close</span>\n});\n</code></pre></div><div class="van-doc-card"><h3 id="xiao-xi-que-ren" tabindex="-1">消息确认</h3><p>用于确认消息，包含取消和确认按钮。</p><pre><code class="language-js"><span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">confirm</span>({\n  <span class="hljs-attr">title</span>: <span class="hljs-string">&#39;标题&#39;</span>,\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;弹窗内容&#39;</span>,\n})\n  .<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n    <span class="hljs-comment">// on confirm</span>\n  })\n  .<span class="hljs-title function_">catch</span>(<span class="hljs-function">() =&gt;</span> {\n    <span class="hljs-comment">// on cancel</span>\n  });\n</code></pre></div><div class="van-doc-card"><h3 id="yuan-jiao-an-niu-feng-ge" tabindex="-1">圆角按钮风格</h3><p>将 theme 选项设置为 <code>round-button</code> 可以展示圆角按钮风格的弹窗。</p><pre><code class="language-js"><span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">alert</span>({\n  <span class="hljs-attr">title</span>: <span class="hljs-string">&#39;标题&#39;</span>,\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;弹窗内容&#39;</span>,\n  <span class="hljs-attr">theme</span>: <span class="hljs-string">&#39;round-button&#39;</span>,\n}).<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n  <span class="hljs-comment">// on close</span>\n});\n\n<span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">alert</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;弹窗内容&#39;</span>,\n  <span class="hljs-attr">theme</span>: <span class="hljs-string">&#39;round-button&#39;</span>,\n}).<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n  <span class="hljs-comment">// on close</span>\n});\n</code></pre></div><div class="van-doc-card"><h3 id="yi-bu-guan-bi" tabindex="-1">异步关闭</h3><p>通过 <code>beforeClose</code> 属性可以传入一个回调函数，在弹窗关闭前进行特定操作。</p><pre><code class="language-js"><span class="hljs-keyword">const</span> <span class="hljs-title function_">beforeClose</span> = (<span class="hljs-params">action</span>) =&gt;\n  <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-keyword">if</span> (action === <span class="hljs-string">&#39;confirm&#39;</span>) {\n        <span class="hljs-title function_">resolve</span>(<span class="hljs-literal">true</span>);\n      } <span class="hljs-keyword">else</span> {\n        <span class="hljs-comment">// 拦截取消操作</span>\n        <span class="hljs-title function_">resolve</span>(<span class="hljs-literal">false</span>);\n      }\n    }, <span class="hljs-number">1000</span>);\n  });\n\n<span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">confirm</span>({\n  <span class="hljs-attr">title</span>: <span class="hljs-string">&#39;标题&#39;</span>,\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;弹窗内容&#39;</span>,\n  beforeClose,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="quan-ju-fang-fa" tabindex="-1">全局方法</h3><p>通过 <code>app.use</code> 全局注册 Dialog 组件后，会自动在 app 的所有子组件上挂载 <code>$dialog</code> 方法，在所有组件内部都可以直接调用此方法。</p><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">$dialog</span>.<span class="hljs-title function_">alert</span>({\n      <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;弹窗内容&#39;</span>,\n    });\n  },\n};\n</code></pre><blockquote><p>Tips: 由于 setup 选项中无法访问 this，因此不能使用上述方式，请通过 import 引入。</p></blockquote></div><div class="van-doc-card"><h3 id="zu-jian-diao-yong-1" tabindex="-1">组件调用</h3><p>如果需要在弹窗内嵌入组件或其他自定义内容，可以使用组件调用的方式。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-dialog</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span> <span class="hljs-attr">show-cancel-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/apple-3.jpg&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-dialog</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">return</span> { show };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>Dialog</td><td>展示弹窗</td><td><em>options: DialogOptions</em></td><td><code>Promise&lt;void&gt;</code></td></tr><tr><td>Dialog.alert</td><td>展示消息提示弹窗</td><td><em>options: DialogOptions</em></td><td><code>Promise&lt;void&gt;</code></td></tr><tr><td>Dialog.confirm</td><td>展示消息确认弹窗</td><td><em>options: DialogOptions</em></td><td><code>Promise&lt;void&gt;</code></td></tr><tr><td>Dialog.setDefaultOptions</td><td>修改默认配置，对所有 Dialog 生效</td><td><em>options: DialogOptions</em></td><td><code>void</code></td></tr><tr><td>Dialog.resetDefaultOptions</td><td>重置默认配置，对所有 Dialog 生效</td><td>-</td><td><code>void</code></td></tr><tr><td>Dialog.close</td><td>关闭弹窗</td><td>-</td><td><code>void</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="dialogoptions" tabindex="-1">DialogOptions</h3><p>通过函数调用 <code>Dialog</code> 时，支持传入以下选项：</p><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>标题</td><td><em>string</em></td><td>-</td></tr><tr><td>width</td><td>弹窗宽度，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>320px</code></td></tr><tr><td>message</td><td>文本内容，支持通过 <code>\\n</code> 换行</td><td><em>string | () =&gt; JSX.ELement</em></td><td>-</td></tr><tr><td>messageAlign</td><td>内容对齐方式，可选值为 <code>left</code> <code>right</code></td><td><em>string</em></td><td><code>center</code></td></tr><tr><td>theme</td><td>样式风格，可选值为 <code>round-button</code></td><td><em>string</em></td><td><code>default</code></td></tr><tr><td>className</td><td>自定义类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>showConfirmButton</td><td>是否展示确认按钮</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>showCancelButton</td><td>是否展示取消按钮</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>confirmButtonText</td><td>确认按钮文案</td><td><em>string</em></td><td><code>确认</code></td></tr><tr><td>confirmButtonColor</td><td>确认按钮颜色</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>cancelButtonText</td><td>取消按钮文案</td><td><em>string</em></td><td><code>取消</code></td></tr><tr><td>cancelButtonColor</td><td>取消按钮颜色</td><td><em>string</em></td><td><code>black</code></td></tr><tr><td>overlay</td><td>是否展示遮罩层</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>overlayClass</td><td>自定义遮罩层类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>overlayStyle</td><td>自定义遮罩层样式</td><td><em>object</em></td><td>-</td></tr><tr><td>closeOnPopstate</td><td>是否在页面回退时自动关闭</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>closeOnClickOverlay</td><td>是否在点击遮罩层后关闭弹窗</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>lockScroll</td><td>是否锁定背景滚动</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>allowHtml</td><td>是否允许 message 内容中渲染 HTML</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>beforeClose</td><td>关闭前的回调函数，返回 <code>false</code> 可阻止关闭，支持返回 Promise</td><td><em>(action: string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr><tr><td>transition</td><td>动画类名，等价于 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#transition">transition</a> 的 <code>name</code> 属性</td><td><em>string</em></td><td>-</td></tr><tr><td>teleport</td><td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#teleport">to 属性</a></td><td><em>string | Element</em></td><td><code>body</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><p>通过组件调用 <code>Dialog</code> 时，支持以下 Props：</p><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model:show</td><td>是否显示弹窗</td><td><em>boolean</em></td><td>-</td></tr><tr><td>title</td><td>标题</td><td><em>string</em></td><td>-</td></tr><tr><td>width</td><td>弹窗宽度，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>320px</code></td></tr><tr><td>message</td><td>文本内容，支持通过 <code>\\n</code> 换行</td><td><em>string | () =&gt; JSX.ELement</em></td><td>-</td></tr><tr><td>message-align</td><td>内容水平对齐方式，可选值为 <code>left</code> <code>right</code></td><td><em>string</em></td><td><code>center</code></td></tr><tr><td>theme</td><td>样式风格，可选值为 <code>round-button</code></td><td><em>string</em></td><td><code>default</code></td></tr><tr><td>show-confirm-button</td><td>是否展示确认按钮</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-cancel-button</td><td>是否展示取消按钮</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>confirm-button-text</td><td>确认按钮文案</td><td><em>string</em></td><td><code>确认</code></td></tr><tr><td>confirm-button-color</td><td>确认按钮颜色</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>cancel-button-text</td><td>取消按钮文案</td><td><em>string</em></td><td><code>取消</code></td></tr><tr><td>cancel-button-color</td><td>取消按钮颜色</td><td><em>string</em></td><td><code>black</code></td></tr><tr><td>overlay</td><td>是否展示遮罩层</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>overlay-class</td><td>自定义遮罩层类名</td><td><em>string</em></td><td>-</td></tr><tr><td>overlay-style</td><td>自定义遮罩层样式</td><td><em>object</em></td><td>-</td></tr><tr><td>close-on-popstate</td><td>是否在页面回退时自动关闭</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-overlay</td><td>是否在点击遮罩层后关闭弹窗</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>lazy-render</td><td>是否在显示弹层时才渲染节点</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>lock-scroll</td><td>是否锁定背景滚动</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>allow-html</td><td>是否允许 message 内容中渲染 HTML</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>before-close</td><td>关闭前的回调函数，返回 <code>false</code> 可阻止关闭，支持返回 Promise</td><td><em>(action: string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr><tr><td>transition</td><td>动画类名，等价于 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#transition">transition</a> 的 <code>name</code> 属性</td><td><em>string</em></td><td>-</td></tr><tr><td>teleport</td><td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#teleport">to 属性</a></td><td><em>string | Element</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><p>通过组件调用 <code>Dialog</code> 时，支持以下事件：</p><table><thead><tr><th>事件</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>confirm</td><td>点击确认按钮时触发</td><td>-</td></tr><tr><td>cancel</td><td>点击取消按钮时触发</td><td>-</td></tr><tr><td>open</td><td>打开弹窗时触发</td><td>-</td></tr><tr><td>close</td><td>关闭弹窗时触发</td><td>-</td></tr><tr><td>opened</td><td>打开弹窗且动画结束后触发</td><td>-</td></tr><tr><td>closed</td><td>关闭弹窗且动画结束后触发</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><p>通过组件调用 <code>Dialog</code> 时，支持以下插槽：</p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>自定义内容</td></tr><tr><td>title</td><td>自定义标题</td></tr><tr><td>footer <code>v3.0.10</code></td><td>自定义底部按钮区域</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">DialogTheme</span>,\n  <span class="hljs-title class_">DialogMessage</span>,\n  <span class="hljs-title class_">DialogOptions</span>,\n  <span class="hljs-title class_">DialogMessageAlign</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-dialog-width</td><td><em>320px</em></td><td>-</td></tr><tr><td>–van-dialog-small-screen-width</td><td><em>90%</em></td><td>-</td></tr><tr><td>–van-dialog-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-dialog-transition</td><td><em>var(–van-animation-duration-base)</em></td><td>-</td></tr><tr><td>–van-dialog-border-radius</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-dialog-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-dialog-header-font-weight</td><td><em>var(–van-font-weight-bold)</em></td><td>-</td></tr><tr><td>–van-dialog-header-line-height</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-dialog-header-padding-top</td><td><em>26px</em></td><td>-</td></tr><tr><td>–van-dialog-header-isolated-padding</td><td><em>var(–van-padding-lg) 0</em></td><td>-</td></tr><tr><td>–van-dialog-message-padding</td><td><em>var(–van-padding-lg)</em></td><td>-</td></tr><tr><td>–van-dialog-message-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-dialog-message-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-dialog-message-max-height</td><td><em>60vh</em></td><td>-</td></tr><tr><td>–van-dialog-has-title-message-text-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-dialog-has-title-message-padding-top</td><td><em>var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-dialog-button-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-dialog-round-button-height</td><td><em>36px</em></td><td>-</td></tr><tr><td>–van-dialog-confirm-button-text-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="zai-beforerouteleave-li-diao-yong-dialog-wu-fa-zhan-shi" tabindex="-1">在 beforeRouteLeave 里调用 Dialog 无法展示？</h3><p>将 <code>closeOnPopstate</code> 属性设置为 false 即可。</p><pre><code class="language-js"><span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">alert</span>({\n  <span class="hljs-attr">title</span>: <span class="hljs-string">&#39;标题&#39;</span>,\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;弹窗内容&#39;</span>,\n  <span class="hljs-attr">closeOnPopstate</span>: <span class="hljs-literal">false</span>,\n}).<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n  <span class="hljs-comment">// on close</span>\n});\n</code></pre></div><div class="van-doc-card"><h3 id="zai-jsx-zhong-xuan-ran-dialog-zu-jian-wu-fa-zhan-shi" tabindex="-1">在 JSX 中渲染 Dialog 组件无法展示？</h3><p>请注意 <code>Dialog</code> 是一个函数，<code>Dialog.Component</code> 才是 Dialog 对应的组件。JSX 调用弹窗的正确姿势如下：</p><pre><code class="language-jsx"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">return</span> <span class="hljs-function">() =&gt;</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Dialog.Component</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">{[show,</span> &#39;<span class="hljs-attr">show</span>&#39;]} /&gt;</span></span>;\n  },\n};\n</code></pre></div>',23),Jt=[$t],Xt={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Kt,Jt)))},Yt={class:"van-doc-markdown-body"},Zt=t('<h1>Divider 分割线</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于将内容分隔为多个区域。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Divider</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Divider</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>默认渲染一条水平分割线。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-divider</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zhan-shi-wen-zi" tabindex="-1">展示文字</h3><p>通过插槽在可以分割线中间插入内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-divider</span>&gt;</span>文字<span class="hljs-tag">&lt;/<span class="hljs-name">van-divider</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="nei-rong-wei-zhi" tabindex="-1">内容位置</h3><p>通过 <code>content-position</code> 指定内容所在位置。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-divider</span> <span class="hljs-attr">content-position</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>文字<span class="hljs-tag">&lt;/<span class="hljs-name">van-divider</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-divider</span> <span class="hljs-attr">content-position</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>文字<span class="hljs-tag">&lt;/<span class="hljs-name">van-divider</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="xu-xian" tabindex="-1">虚线</h3><p>添加 <code>dashed</code> 属性使分割线渲染为虚线。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-divider</span> <span class="hljs-attr">dashed</span>&gt;</span>文字<span class="hljs-tag">&lt;/<span class="hljs-name">van-divider</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yang-shi" tabindex="-1">自定义样式</h3><p>可以直接通过 <code>style</code> 属性设置分割线的样式。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-divider</span>\n  <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ color: &#39;#1989fa&#39;, borderColor: &#39;#1989fa&#39;, padding: &#39;0 16px&#39; }&quot;</span>\n&gt;</span>\n  文字\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-divider</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>dashed</td><td>是否使用虚线</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>hairline</td><td>是否使用 0.5px 线</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>content-position</td><td>内容位置，可选值为 <code>left</code> <code>right</code></td><td><em>string</em></td><td><code>center</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">DividerContentPosition</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-divider-margin</td><td><em>var(–van-padding-md) 0</em></td><td>-</td></tr><tr><td>–van-divider-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-divider-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-divider-line-height</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-divider-border-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr><tr><td>–van-divider-content-padding</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-divider-content-left-width</td><td><em>10%</em></td><td>-</td></tr><tr><td>–van-divider-content-right-width</td><td><em>10%</em></td><td>-</td></tr></tbody></table></div>',15),Qt=[Zt],sn={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Yt,Qt)))},an={class:"van-doc-markdown-body"},tn=t('<h1>DropdownMenu 下拉菜单</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>向下弹出的菜单列表。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">DropdownMenu</span>, <span class="hljs-title class_">DropdownItem</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">DropdownMenu</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">DropdownItem</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option1&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option2&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value1 = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> value2 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;a&#39;</span>);\n    <span class="hljs-keyword">const</span> option1 = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;全部商品&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">0</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;新款商品&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">1</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;活动商品&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">2</span> },\n    ];\n    <span class="hljs-keyword">const</span> option2 = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;默认排序&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;好评排序&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;b&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;销量排序&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;c&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      value1,\n      value2,\n      option1,\n      option2,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-cai-dan-nei-rong" tabindex="-1">自定义菜单内容</h3><p>通过插槽可以自定义 <code>DropdownItem</code> 的内容，此时需要使用实例上的 <code>toggle</code> 方法手动控制菜单的显示。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;筛选&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">center</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;包邮&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right-icon</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;switch1&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">center</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;团购&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right-icon</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;switch2&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;padding: 5px 16px;&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">block</span> <span class="hljs-attr">round</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onConfirm&quot;</span>&gt;</span>\n        确认\n      <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-dropdown-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> item = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>);\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> switch1 = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> switch2 = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> options = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;全部商品&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">0</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;新款商品&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">1</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;活动商品&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">2</span> },\n    ];\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params"></span>) =&gt; {\n      item.<span class="hljs-property">value</span>.<span class="hljs-title function_">toggle</span>();\n    };\n\n    <span class="hljs-keyword">return</span> {\n      item,\n      value,\n      switch1,\n      switch2,\n      options,\n      onConfirm,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-xuan-zhong-tai-yan-se" tabindex="-1">自定义选中态颜色</h3><p>通过 <code>active-color</code> 属性可以自定义菜单标题和选项的选中态颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-menu</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option1&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option2&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="xiang-shang-zhan-kai" tabindex="-1">向上展开</h3><p>将 <code>direction</code> 属性值设置为 <code>up</code>，菜单即可向上展开。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-menu</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;up&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option1&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option2&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-cai-dan" tabindex="-1">禁用菜单</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option1&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option2&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="dropdownmenu-props" tabindex="-1">DropdownMenu Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>active-color</td><td>菜单标题和选项的选中态颜色</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>direction</td><td>菜单展开方向，可选值为<code>up</code></td><td><em>string</em></td><td><code>down</code></td></tr><tr><td>z-index</td><td>菜单栏 z-index 层级</td><td><em>number | string</em></td><td><code>10</code></td></tr><tr><td>duration</td><td>动画时长，单位秒，设置为 0 可以禁用动画</td><td><em>number | string</em></td><td><code>0.2</code></td></tr><tr><td>overlay</td><td>是否显示遮罩层</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-overlay</td><td>是否在点击遮罩层后关闭菜单</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-outside</td><td>是否在点击外部元素后关闭菜单</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="dropdownitem-props" tabindex="-1">DropdownItem Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>当前选中项对应的 value</td><td><em>number | string</em></td><td>-</td></tr><tr><td>title</td><td>菜单项标题</td><td><em>string</em></td><td>当前选中项文字</td></tr><tr><td>options</td><td>选项数组</td><td><em>Option[]</em></td><td><code>[]</code></td></tr><tr><td>disabled</td><td>是否禁用菜单</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>lazy-render</td><td>是否在首次展开时才渲染菜单内容</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>title-class</td><td>标题额外类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>teleport</td><td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#teleport">to 属性</a></td><td><em>string | Element</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="dropdownitem-events" tabindex="-1">DropdownItem Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>点击选项导致 value 变化时触发</td><td>value</td></tr><tr><td>open</td><td>打开菜单栏时触发</td><td>-</td></tr><tr><td>close</td><td>关闭菜单栏时触发</td><td>-</td></tr><tr><td>opened</td><td>打开菜单栏且动画结束后触发</td><td>-</td></tr><tr><td>closed</td><td>关闭菜单栏且动画结束后触发</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="dropdownitem-slots" tabindex="-1">DropdownItem Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>菜单内容</td></tr><tr><td>title</td><td>自定义菜单项标题</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="dropdownitem-fang-fa" tabindex="-1">DropdownItem 方法</h3><p>通过 ref 可以获取到 DropdownItem 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>toggle</td><td>切换菜单展示状态，传 <code>true</code> 为显示，<code>false</code> 为隐藏，不传参为取反</td><td><em>show?: boolean</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">DropdownItemOption</span>,\n  <span class="hljs-title class_">DropdownItemInstance</span>,\n  <span class="hljs-title class_">DropdownMenuDirection</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>DropdownItemInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">DropdownItemInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> dropdownItemRef = ref&lt;<span class="hljs-title class_">DropdownItemInstance</span>&gt;();\n\ndropdownItemRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">toggle</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="option-shu-ju-jie-gou" tabindex="-1">Option 数据结构</h3><table><thead><tr><th>键名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>text</td><td>文字</td><td><em>string</em></td></tr><tr><td>value</td><td>标识符</td><td><em>number | string</em></td></tr><tr><td>icon</td><td>左侧<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-dropdown-menu-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-box-shadow</td><td><em>0 2px 12px fade(var(–van-gray-7), 12)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-title-font-size</td><td><em>15px</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-title-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-title-active-text-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-title-disabled-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-title-padding</td><td><em>0 var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-title-line-height</td><td><em>var(–van-line-height-lg)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-option-active-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-content-max-height</td><td><em>80%</em></td><td>-</td></tr><tr><td>–van-dropdown-item-z-index</td><td><em>10</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="fu-yuan-su-she-zhi-transform-hou-xia-la-cai-dan-de-wei-zhi-cuo-wu" tabindex="-1">父元素设置 transform 后，下拉菜单的位置错误？</h3><p>把 <code>DropdownMenu</code> 嵌套在 <code>Tabs</code> 等组件内部使用时，可能会遇到下拉菜单位置错误的问题。这是因为在 Chrome 浏览器中，transform 元素内部的 fixed 布局会降级成 absolute 布局，导致下拉菜单的布局异常。</p><p>将 <code>DropdownItem</code> 的 <code>teleport</code> 属性设置为 <code>body</code> 即可避免此问题：</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">teleport</span>=<span class="hljs-string">&quot;body&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">teleport</span>=<span class="hljs-string">&quot;body&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n</code></pre></div>',21),nn=[tn],ln={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",an,nn)))},en={class:"van-doc-markdown-body"},dn=t('<h1>Empty 空状态</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>空状态时的占位提示。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Empty</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Empty</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-empty</span> <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;描述文字&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="tu-pian-lei-xing" tabindex="-1">图片类型</h3><p>Empty 组件内置了多种占位图片类型，可以在不同业务场景下使用。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 通用错误 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-empty</span> <span class="hljs-attr">image</span>=<span class="hljs-string">&quot;error&quot;</span> <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;描述文字&quot;</span> /&gt;</span>\n<span class="hljs-comment">&lt;!-- 网络错误 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-empty</span> <span class="hljs-attr">image</span>=<span class="hljs-string">&quot;network&quot;</span> <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;描述文字&quot;</span> /&gt;</span>\n<span class="hljs-comment">&lt;!-- 搜索提示 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-empty</span> <span class="hljs-attr">image</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;描述文字&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-tu-pian" tabindex="-1">自定义图片</h3><p>需要自定义图片时，可以在 image 属性中传入任意图片 URL。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-empty</span>\n  <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;custom-image&quot;</span>\n  <span class="hljs-attr">image</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/custom-empty-image.png&quot;</span>\n  <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;描述文字&quot;</span>\n/&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.custom-image</span> <span class="hljs-selector-class">.van-empty__image</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">90px</span>;\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">90px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="di-bu-nei-rong" tabindex="-1">底部内容</h3><p>通过默认插槽可以在 Empty 组件的下方插入内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-empty</span> <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;描述文字&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">round</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bottom-button&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-empty</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.bottom-button</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">160px</span>;\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>image</td><td>图片类型，可选值为 <code>error</code> <code>network</code> <code>search</code>，支持传入图片 URL</td><td><em>string</em></td><td><code>default</code></td></tr><tr><td>image-size</td><td>图片大小，默认单位为 <code>px</code></td><td><em>number | string</em></td><td>-</td></tr><tr><td>description</td><td>图片下方的描述文字</td><td><em>string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>自定义底部内容</td></tr><tr><td>image</td><td>自定义图标</td></tr><tr><td>description</td><td>自定义描述文字</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-empty-padding</td><td><em>var(–van-padding-xl) 0</em></td><td>-</td></tr><tr><td>–van-empty-image-size</td><td><em>160px</em></td><td>-</td></tr><tr><td>–van-empty-description-margin-top</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-empty-description-padding</td><td><em>0 60px</em></td><td>-</td></tr><tr><td>–van-empty-description-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-empty-description-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-empty-description-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-empty-bottom-margin-top</td><td><em>24px</em></td><td>-</td></tr></tbody></table></div>',13),pn=[dn],cn={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",en,pn)))},on={class:"van-doc-markdown-body"},rn=t('<h1>Field 输入框</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用户可以在文本框内输入或编辑文字。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Field</span>, <span class="hljs-title class_">CellGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Field</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CellGroup</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>可以通过 <code>v-model</code> 双向绑定输入框的值，通过 <code>placeholder</code> 设置占位提示文字。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 可以使用 CellGroup 作为容器 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;文本&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入用户名&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-lei-xing" tabindex="-1">自定义类型</h3><p>根据 <code>type</code> 属性定义不同类型的输入框，默认值为 <code>text</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- 输入任意文本 --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span>\n  <span class="hljs-comment">&lt;!-- 输入手机号，调起手机号键盘 --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;tel&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;tel&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;手机号&quot;</span> /&gt;</span>\n  <span class="hljs-comment">&lt;!-- 允许输入正整数，调起纯数字键盘 --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;digit&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;digit&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;整数&quot;</span> /&gt;</span>\n  <span class="hljs-comment">&lt;!-- 允许输入数字，调起带符号的纯数字键盘 --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;数字&quot;</span> /&gt;</span>\n  <span class="hljs-comment">&lt;!-- 输入密码 --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;密码&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> tel = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> text = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> digit = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> number = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> password = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n\n    <span class="hljs-keyword">return</span> { tel, text, digit, number, password };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-shu-ru-kuang" tabindex="-1">禁用输入框</h3><p>通过 <code>readonly</code> 将输入框设置为只读状态，通过 <code>disabled</code> 将输入框设置为禁用状态。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;文本&quot;</span> <span class="hljs-attr">model-value</span>=<span class="hljs-string">&quot;输入框只读&quot;</span> <span class="hljs-attr">readonly</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;文本&quot;</span> <span class="hljs-attr">model-value</span>=<span class="hljs-string">&quot;输入框已禁用&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="xian-shi-tu-biao" tabindex="-1">显示图标</h3><p>通过 <code>left-icon</code> 和 <code>right-icon</code> 配置输入框两侧的图标，通过设置 <code>clearable</code> 在输入过程中展示清除图标。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;文本&quot;</span>\n    <span class="hljs-attr">left-icon</span>=<span class="hljs-string">&quot;smile-o&quot;</span>\n    <span class="hljs-attr">right-icon</span>=<span class="hljs-string">&quot;warning-o&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;显示图标&quot;</span>\n  /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span>\n    <span class="hljs-attr">clearable</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;文本&quot;</span>\n    <span class="hljs-attr">left-icon</span>=<span class="hljs-string">&quot;music-o&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;显示清除图标&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value1 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> value2 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;123&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      value1,\n      value2,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="cuo-wu-ti-shi" tabindex="-1">错误提示</h3><p>设置 <code>required</code> 属性表示这是一个必填项，可以配合 <code>error</code> 或 <code>error-message</code> 属性显示对应的错误提示。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;username&quot;</span>\n    <span class="hljs-attr">error</span>\n    <span class="hljs-attr">required</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;用户名&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入用户名&quot;</span>\n  /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;phone&quot;</span>\n    <span class="hljs-attr">required</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;手机号&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入手机号&quot;</span>\n    <span class="hljs-attr">error-message</span>=<span class="hljs-string">&quot;手机号格式错误&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="cha-ru-an-niu" tabindex="-1">插入按钮</h3><p>通过 button 插槽可以在输入框尾部插入按钮。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;sms&quot;</span>\n    <span class="hljs-attr">center</span>\n    <span class="hljs-attr">clearable</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;短信验证码&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入短信验证码&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>发送验证码<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="ge-shi-hua-shu-ru-nei-rong" tabindex="-1">格式化输入内容</h3><p>通过 <code>formatter</code> 属性可以对输入的内容进行格式化，通过 <code>format-trigger</code> 属性可以指定执行格式化的时机，默认在输入时进行格式化。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;文本&quot;</span>\n    <span class="hljs-attr">:formatter</span>=<span class="hljs-string">&quot;formatter&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;在输入时执行格式化&quot;</span>\n  /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;文本&quot;</span>\n    <span class="hljs-attr">:formatter</span>=<span class="hljs-string">&quot;formatter&quot;</span>\n    <span class="hljs-attr">format-trigger</span>=<span class="hljs-string">&quot;onBlur&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;在失焦时执行格式化&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value1 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> value2 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-comment">// 过滤输入的数字</span>\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatter</span> = (<span class="hljs-params">value</span>) =&gt; value.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/\\d/g</span>, <span class="hljs-string">&#39;&#39;</span>);\n\n    <span class="hljs-keyword">return</span> {\n      value1,\n      value2,\n      formatter,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="gao-du-zi-gua-ying" tabindex="-1">高度自适应</h3><p>对于 textarea，可以通过 <code>autosize</code> 属性设置高度自适应。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;message&quot;</span>\n    <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;1&quot;</span>\n    <span class="hljs-attr">autosize</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;留言&quot;</span>\n    <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;textarea&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入留言&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="xian-shi-zi-shu-tong-ji" tabindex="-1">显示字数统计</h3><p>设置 <code>maxlength</code> 和 <code>show-word-limit</code> 属性后会在底部显示字数统计。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;message&quot;</span>\n    <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;2&quot;</span>\n    <span class="hljs-attr">autosize</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;留言&quot;</span>\n    <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;textarea&quot;</span>\n    <span class="hljs-attr">maxlength</span>=<span class="hljs-string">&quot;50&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入留言&quot;</span>\n    <span class="hljs-attr">show-word-limit</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="shu-ru-kuang-nei-rong-dui-qi" tabindex="-1">输入框内容对齐</h3><p>通过 <code>input-align</code> 属性可以设置输入框内容的对齐方式，可选值为 <code>center</code>、<code>right</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;文本&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;输入框内容右对齐&quot;</span>\n    <span class="hljs-attr">input-align</span>=<span class="hljs-string">&quot;right&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>当前输入的值</td><td><em>number | string</em></td><td>-</td></tr><tr><td>label</td><td>输入框左侧文本</td><td><em>string</em></td><td>-</td></tr><tr><td>name</td><td>名称，作为提交表单时的标识符</td><td><em>string</em></td><td>-</td></tr><tr><td>id <code>v3.2.2</code></td><td>输入框 id，同时会设置 label 的 for 属性</td><td><em>string</em></td><td>-</td></tr><tr><td>type</td><td>输入框类型, 可选值为 <code>tel</code> <code>digit</code><br><code>number</code> <code>textarea</code> <code>password</code> 等</td><td><em>string</em></td><td><code>text</code></td></tr><tr><td>size</td><td>大小，可选值为 <code>large</code></td><td><em>string</em></td><td>-</td></tr><tr><td>maxlength</td><td>输入的最大字符数</td><td><em>number | string</em></td><td>-</td></tr><tr><td>placeholder</td><td>输入框占位提示文字</td><td><em>string</em></td><td>-</td></tr><tr><td>border</td><td>是否显示内边框</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>disabled</td><td>是否禁用输入框</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly</td><td>是否为只读状态，只读状态下无法输入内容</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>colon</td><td>是否在 label 后面添加冒号</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>required</td><td>是否显示表单必填星号</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>center</td><td>是否使内容垂直居中</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>clearable</td><td>是否启用清除图标，点击清除图标后会清空输入框</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>clear-icon <code>v3.0.12</code></td><td>清除<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td><code>clear</code></td></tr><tr><td>clear-trigger</td><td>显示清除图标的时机，<code>always</code> 表示输入框不为空时展示，<br><code>focus</code> 表示输入框聚焦且不为空时展示</td><td><em>string</em></td><td><code>focus</code></td></tr><tr><td>clickable</td><td>是否开启点击反馈</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>is-link</td><td>是否展示右侧箭头并开启点击反馈</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>autofocus</td><td>是否自动聚焦，iOS 系统不支持该属性</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-word-limit</td><td>是否显示字数统计，需要设置 <code>maxlength</code> 属性</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>error</td><td>是否将输入内容标红</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>error-message</td><td>底部错误提示文案，为空时不展示</td><td><em>string</em></td><td>-</td></tr><tr><td>error-message-align</td><td>错误提示文案对齐方式，可选值为 <code>center</code> <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>formatter</td><td>输入内容格式化函数</td><td><em>(val: string) =&gt; string</em></td><td>-</td></tr><tr><td>format-trigger</td><td>格式化函数触发的时机，可选值为 <code>onBlur</code></td><td><em>string</em></td><td><code>onChange</code></td></tr><tr><td>arrow-direction</td><td>箭头方向，可选值为 <code>left</code> <code>up</code> <code>down</code></td><td><em>string</em></td><td><code>right</code></td></tr><tr><td>label-class</td><td>左侧文本额外类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>label-width</td><td>左侧文本宽度，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>6.2em</code></td></tr><tr><td>label-align</td><td>左侧文本对齐方式，可选值为 <code>center</code> <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>input-align</td><td>输入框对齐方式，可选值为 <code>center</code> <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>autosize</td><td>是否自适应内容高度，只对 textarea 有效，<br>可传入对象,如 { maxHeight: 100, minHeight: 50 }，<br>单位为<code>px</code></td><td><em>boolean | object</em></td><td><code>false</code></td></tr><tr><td>left-icon</td><td>左侧<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td>-</td></tr><tr><td>right-icon</td><td>右侧<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td>-</td></tr><tr><td>icon-prefix</td><td>图标类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props">class-prefix 属性</a></td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>rules</td><td>表单校验规则，详见 <a href="#/zh-CN/form#rule-shu-ju-jie-gou">Form 组件</a></td><td><em>Rule[]</em></td><td>-</td></tr><tr><td>autocomplete <code>v3.0.3</code></td><td>input 标签原生的<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete">自动完成属性</a></td><td><em>string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>update:model-value</td><td>输入框内容变化时触发</td><td><em>value: string (当前输入的值)</em></td></tr><tr><td>focus</td><td>输入框获得焦点时触发</td><td><em>event: Event</em></td></tr><tr><td>blur</td><td>输入框失去焦点时触发</td><td><em>event: Event</em></td></tr><tr><td>clear</td><td>点击清除按钮时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>click</td><td>点击组件时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-input</td><td>点击输入区域时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-left-icon</td><td>点击左侧图标时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-right-icon</td><td>点击右侧图标时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><p>通过 ref 可以获取到 Field 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>focus</td><td>获取输入框焦点</td><td>-</td><td>-</td></tr><tr><td>blur</td><td>取消输入框焦点</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">FieldType</span>,\n  <span class="hljs-title class_">FieldRule</span>,\n  <span class="hljs-title class_">FieldInstance</span>,\n  <span class="hljs-title class_">FieldTextAlign</span>,\n  <span class="hljs-title class_">FieldClearTrigger</span>,\n  <span class="hljs-title class_">FieldFormatTrigger</span>,\n  <span class="hljs-title class_">FieldValidateError</span>,\n  <span class="hljs-title class_">FieldAutosizeConfig</span>,\n  <span class="hljs-title class_">FieldValidateTrigger</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>FieldInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">FieldInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> fieldRef = ref&lt;<span class="hljs-title class_">FieldInstance</span>&gt;();\n\nfieldRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">focus</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>label</td><td>自定义输入框左侧文本</td></tr><tr><td>input</td><td>自定义输入框，使用此插槽后，与输入框相关的属性和事件将失效。<br>在 Form 组件进行表单校验时，会使用 input 插槽中子组件的 <code>value</code>，而不是 Field 组件的 <code>value</code>。</td></tr><tr><td>left-icon</td><td>自定义输入框头部图标</td></tr><tr><td>right-icon</td><td>自定义输入框尾部图标</td></tr><tr><td>button</td><td>自定义输入框尾部按钮</td></tr><tr><td>extra</td><td>自定义输入框最右侧的额外内容</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-field-label-width</td><td><em>6.2em</em></td><td>-</td></tr><tr><td>–van-field-label-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-field-label-margin-right</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-field-input-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-field-input-error-text-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-field-input-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-field-placeholder-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-field-icon-size</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-field-clear-icon-size</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-field-clear-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-field-right-icon-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-field-error-message-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-field-error-message-font-size</td><td><em>12px</em></td><td>-</td></tr><tr><td>–van-field-text-area-min-height</td><td><em>60px</em></td><td>-</td></tr><tr><td>–van-field-word-limit-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-field-word-limit-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-field-word-limit-line-height</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-field-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-field-required-mark-color</td><td><em>var(–van-red)</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="she-zhi-type-wei-number-hou-wei-shi-me-input-biao-qian-de-lei-xing-reng-wei-text" tabindex="-1">设置 type 为 number 后，为什么 input 标签的类型仍为 text?</h3><p>HTML 原生的 <code>type=&quot;number&quot;</code> 属性在 iOS 和 Android 系统上都存在一定问题，比如 maxlength 属性不生效、无法获取到完整的输入内容等。因此设置 type 为 <code>number</code> 时，Field 不会使用原生的 <code>type=&quot;number&quot;</code> 属性，而是用现代浏览器支持的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes/inputmode">inputmode 属性</a>来控制输入键盘的类型。</p></div><div class="van-doc-card"><h3 id="zai-zhuo-mian-duan-dian-ji-qing-chu-an-niu-wu-xiao" tabindex="-1">在桌面端点击清除按钮无效？</h3><p>清除按钮监听是的移动端 Touch 事件，参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei">桌面端适配</a>。</p></div>',25),hn=[rn],jn={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",on,hn)))},un={class:"van-doc-markdown-body"},gn=t('<h1>Form 表单</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于数据录入、校验，支持输入框、单选框、复选框、文件上传等类型，需要与 <a href="#/zh-CN/field">Field 输入框</a> 组件搭配使用。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Form</span>, <span class="hljs-title class_">Field</span>, <span class="hljs-title class_">CellGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Form</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Field</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CellGroup</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>在表单中，每个 <a href="#/zh-CN/field">Field 组件</a> 代表一个表单项，使用 Field 的 <code>rules</code> 属性定义校验规则。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-form</span> @<span class="hljs-attr">submit</span>=<span class="hljs-string">&quot;onSubmit&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;username&quot;</span>\n      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;用户名&quot;</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;用户名&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;用户名&quot;</span>\n      <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;[{ required: true, message: &#39;请填写用户名&#39; }]&quot;</span>\n    /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;password&quot;</span>\n      <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span>\n      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;密码&quot;</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;密码&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;密码&quot;</span>\n      <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;[{ required: true, message: &#39;请填写密码&#39; }]&quot;</span>\n    /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin: 16px;&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">round</span> <span class="hljs-attr">block</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">native-type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>\n      提交\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-form</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> username = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> password = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSubmit</span> = (<span class="hljs-params">values</span>) =&gt; {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;submit&#39;</span>, values);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      username,\n      password,\n      onSubmit,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xiao-yan-gui-ze" tabindex="-1">校验规则</h3><p>通过 <code>rules</code> 定义表单校验规则，所有可用字段见<a href="#/zh-CN/form#rule-shu-ju-jie-gou">下方表格</a>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-form</span> @<span class="hljs-attr">failed</span>=<span class="hljs-string">&quot;onFailed&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n    <span class="hljs-comment">&lt;!-- 通过 pattern 进行正则校验 --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span>\n      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pattern&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;正则校验&quot;</span>\n      <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;[{ pattern, message: &#39;请输入正确内容&#39; }]&quot;</span>\n    /&gt;</span>\n    <span class="hljs-comment">&lt;!-- 通过 validator 进行函数校验 --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span>\n      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;validator&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;函数校验&quot;</span>\n      <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;[{ validator, message: &#39;请输入正确内容&#39; }]&quot;</span>\n    /&gt;</span>\n    <span class="hljs-comment">&lt;!-- 通过 validator 返回错误提示 --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value3&quot;</span>\n      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;validatorMessage&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;校验函数返回错误提示&quot;</span>\n      <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;[{ validator: validatorMessage }]&quot;</span>\n    /&gt;</span>\n    <span class="hljs-comment">&lt;!-- 通过 validator 进行异步函数校验 --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value4&quot;</span>\n      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;asyncValidator&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;异步函数校验&quot;</span>\n      <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;[{ validator: asyncValidator, message: &#39;请输入正确内容&#39; }]&quot;</span>\n    /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin: 16px;&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">round</span> <span class="hljs-attr">block</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">native-type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>\n      提交\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-form</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value1 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> value2 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> value3 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> value4 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> pattern = <span class="hljs-regexp">/\\d{6}/</span>;\n\n    <span class="hljs-comment">// 校验函数返回 true 表示校验通过，false 表示不通过</span>\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">validator</span> = (<span class="hljs-params">val</span>) =&gt; <span class="hljs-regexp">/1\\d{10}/</span>.<span class="hljs-title function_">test</span>(val);\n\n    <span class="hljs-comment">// 校验函数可以直接返回一段错误提示</span>\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">validatorMessage</span> = (<span class="hljs-params">val</span>) =&gt; <span class="hljs-string">`<span class="hljs-subst">${val}</span> 不合法，请重新输入`</span>;\n\n    <span class="hljs-comment">// 校验函数可以返回 Promise，实现异步校验</span>\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">asyncValidator</span> = (<span class="hljs-params">val</span>) =&gt;\n      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n        <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">loading</span>(<span class="hljs-string">&#39;验证中...&#39;</span>);\n\n        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">clear</span>();\n          <span class="hljs-title function_">resolve</span>(<span class="hljs-regexp">/\\d{6}/</span>.<span class="hljs-title function_">test</span>(val));\n        }, <span class="hljs-number">1000</span>);\n      });\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onFailed</span> = (<span class="hljs-params">errorInfo</span>) =&gt; {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;failed&#39;</span>, errorInfo);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      value1,\n      value2,\n      value3,\n      value4,\n      pattern,\n      onFailed,\n      validator,\n      asyncValidator,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="biao-dan-xiang-lei-xing---kai-guan" tabindex="-1">表单项类型 - 开关</h3><p>在表单中使用 <a href="#/zh-CN/switch">Switch 组件</a>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;switch&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;开关&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;20&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">return</span> { checked };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="biao-dan-xiang-lei-xing---fu-xuan-kuang" tabindex="-1">表单项类型 - 复选框</h3><p>在表单中使用 <a href="#/zh-CN/checkbox">Checkbox 组件</a>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;复选框&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;checkboxGroup&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;复选框组&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;groupChecked&quot;</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;horizontal&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span>&gt;</span>复选框 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span>&gt;</span>复选框 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> groupChecked = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">return</span> {\n      checked,\n      groupChecked,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="biao-dan-xiang-lei-xing---dan-xuan-kuang" tabindex="-1">表单项类型 - 单选框</h3><p>在表单中使用 <a href="#/zh-CN/radio">Radio 组件</a>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;单选框&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;horizontal&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>单选框 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>单选框 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;1&#39;</span>);\n    <span class="hljs-keyword">return</span> { checked };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="biao-dan-xiang-lei-xing---bu-jin-qi" tabindex="-1">表单项类型 - 步进器</h3><p>在表单中使用 <a href="#/zh-CN/stepper">Stepper 组件</a>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;stepper&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;步进器&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="biao-dan-xiang-lei-xing---ping-fen" tabindex="-1">表单项类型 - 评分</h3><p>在表单中使用 <a href="#/zh-CN/rate">Rate 组件</a>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;rate&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;评分&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">3</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="biao-dan-xiang-lei-xing---hua-kuai" tabindex="-1">表单项类型 - 滑块</h3><p>在表单中使用 <a href="#/zh-CN/slider">Slider 组件</a>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;slider&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;滑块&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">50</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="biao-dan-xiang-lei-xing---wen-jian-shang-chuan" tabindex="-1">表单项类型 - 文件上传</h3><p>在表单中使用 <a href="#/zh-CN/uploader">Uploader 组件</a>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;uploader&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;文件上传&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>([{ <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/leaf.jpg&#39;</span> }]);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="biao-dan-xiang-lei-xing---xuan-ze-qi" tabindex="-1">表单项类型 - 选择器</h3><p>在表单中使用 <a href="#/zh-CN/picker">Picker 组件</a>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;result&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;picker&quot;</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;选择器&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;点击选择城市&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showPicker = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPicker&quot;</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span>\n    <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span>\n    @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span>\n    @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;showPicker = false&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> result = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> showPicker = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> columns = [<span class="hljs-string">&#39;杭州&#39;</span>, <span class="hljs-string">&#39;宁波&#39;</span>, <span class="hljs-string">&#39;温州&#39;</span>, <span class="hljs-string">&#39;嘉兴&#39;</span>, <span class="hljs-string">&#39;湖州&#39;</span>];\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">value</span>) =&gt; {\n      result.<span class="hljs-property">value</span> = value;\n      showPicker.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      result,\n      columns,\n      onConfirm,\n      showPicker,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="biao-dan-xiang-lei-xing---shi-jian-xuan-ze-qi" tabindex="-1">表单项类型 - 时间选择器</h3><p>在表单中使用 <a href="#/zh-CN/datetime-picker">DatetimePicker 组件</a>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;result&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;datetimePicker&quot;</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;时间选择&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;点击选择时间&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showPicker = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPicker&quot;</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n    <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;time&quot;</span>\n    @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span>\n    @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;showPicker = false&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> result = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> showPicker = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">value</span>) =&gt; {\n      result.<span class="hljs-property">value</span> = value;\n      showPicker.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      result,\n      onConfirm,\n      showPicker,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="biao-dan-xiang-lei-xing---sheng-shi-qu-xuan-ze-qi" tabindex="-1">表单项类型 - 省市区选择器</h3><p>在表单中使用 <a href="#/zh-CN/area">Area 组件</a>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;result&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;area&quot;</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;地区选择&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;点击选择省市区&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showArea = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showArea&quot;</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-area</span>\n    <span class="hljs-attr">:area-list</span>=<span class="hljs-string">&quot;areaList&quot;</span>\n    @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span>\n    @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;showArea = false&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { areaList } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/area-data&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> result = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> showArea = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">value</span>) =&gt; {\n      showArea.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      result.<span class="hljs-property">value</span> = values\n        .<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> !!item)\n        .<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> item.<span class="hljs-property">name</span>)\n        .<span class="hljs-title function_">join</span>(<span class="hljs-string">&#39;/&#39;</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      result,\n      areaList,\n      showArea,\n      onConfirm,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="biao-dan-xiang-lei-xing---ri-li" tabindex="-1">表单项类型 - 日历</h3><p>在表单中使用 <a href="#/zh-CN/calendar">Calendar 组件</a>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;calendar&quot;</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;日历&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;点击选择日期&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showCalendar = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showCalendar&quot;</span> @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> result = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> showCalendar = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">date</span>) =&gt; {\n      result.<span class="hljs-property">value</span> = <span class="hljs-string">`<span class="hljs-subst">${date.getMonth() + <span class="hljs-number">1</span>}</span>/<span class="hljs-subst">${date.getDate()}</span>`</span>;\n      showCalendar.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      result,\n      onConfirm,\n      showCalendar,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>label-width</td><td>表单项 label 宽度，默认单位为<code>px</code></td><td><em>number | string</em></td><td><code>6.2em</code></td></tr><tr><td>label-align</td><td>\b 表单项 label 对齐方式，可选值为 <code>center</code> <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>input-align</td><td>输入框对齐方式，可选值为 <code>center</code> <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>error-message-align</td><td>错误提示文案对齐方式，可选值为 <code>center</code> <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>validate-trigger</td><td>表单校验触发时机，可选值为 <code>onChange</code>、<code>onSubmit</code>，详见下表</td><td><em>string</em></td><td><code>onBlur</code></td></tr><tr><td>colon</td><td>是否在 label 后面添加冒号</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disabled</td><td>是否禁用表单中的所有输入框</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly</td><td>是否将表单中的所有输入框设置为只读状态</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>validate-first</td><td>是否在某一项校验不通过时停止校验</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>scroll-to-error</td><td>是否在提交表单且校验不通过时滚动至错误的表单项</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-error</td><td>是否在校验不通过时标红输入框</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-error-message</td><td>是否在校验不通过时在输入框下方展示错误提示</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>submit-on-enter</td><td>是否在按下回车键时提交表单</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table><blockquote><p>表单项的 API 参见：<a href="#/zh-CN/field#api">Field 组件</a></p></blockquote></div><div class="van-doc-card"><h3 id="rule-shu-ju-jie-gou" tabindex="-1">Rule 数据结构</h3><p>使用 Field 的<code>rules</code>属性可以定义校验规则，可选属性如下:</p><table><thead><tr><th>键名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>required</td><td>是否为必选字段</td><td><em>boolean</em></td></tr><tr><td>message</td><td>错误提示文案</td><td><em>string | (value, rule) =&gt; string</em></td></tr><tr><td>validator</td><td>通过函数进行校验</td><td><em>(value, rule) =&gt; boolean | string | Promise</em></td></tr><tr><td>pattern</td><td>通过正则表达式进行校验</td><td><em>RegExp</em></td></tr><tr><td>trigger</td><td>本项规则的触发时机，可选值为 <code>onChange</code>、<code>onBlur</code></td><td><em>string</em></td></tr><tr><td>formatter</td><td>格式化函数，将表单项的值转换后进行校验</td><td><em>(value, rule) =&gt; any</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="validate-trigger-ke-xuan-zhi" tabindex="-1">validate-trigger \b 可选值</h3><p>通过 <code>validate-trigger</code> 属性可以自定义表单校验的触发时机。</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>onSubmit</td><td>仅在提交表单时触发校验</td></tr><tr><td>onBlur</td><td>在提交表单和输入框失焦时触发校验</td></tr><tr><td>onChange</td><td>在提交表单和输入框内容变化时触发校验</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>submit</td><td>提交表单且验证通过后触发</td><td><em>values: object</em></td></tr><tr><td>failed</td><td>提交表单且验证不通过后触发</td><td><em>errorInfo: { values: object, errors: object[] }</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><p>通过 ref 可以获取到 Form 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>submit</td><td>提交表单，与点击提交按钮的效果等价</td><td>-</td><td>-</td></tr><tr><td>validate</td><td>验证表单，支持传入 <code>name</code> 来验证单个或部分表单项</td><td><em>name?: string | string[]</em></td><td><em>Promise</em></td></tr><tr><td>resetValidation</td><td>重置表单项的验证提示，支持传入 <code>name</code> 来重置单个或部分表单项</td><td><em>name?: string | string[]</em></td><td>-</td></tr><tr><td>scrollToField</td><td>滚动到对应表单项的位置，默认滚动到顶部，第二个参数传 false 可滚动至底部</td><td><em>name: string, alignToTop: boolean</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">FormInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>FormInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">FormInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> formRef = ref&lt;<span class="hljs-title class_">FormInstance</span>&gt;();\n\nformRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">submit</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>表单内容</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="ru-he-zi-ding-yi-biao-dan-xiang" tabindex="-1">如何自定义表单项？</h3><p>Vant 支持在 Form 组件中插入自定义的表单项，具体用法参见 <a href="#/zh-CN/use-custom-field-value">useCustomFieldValue</a>。</p></div>',27),mn=[gn],vn={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",un,mn)))},bn={class:"van-doc-markdown-body"},fn=t('<h1>Grid 宫格</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>宫格可以在水平方向上把页面分隔成等宽度的区块，用于展示内容或进行页面导航。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Grid</span>, <span class="hljs-title class_">GridItem</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Grid</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">GridItem</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>icon</code> 属性设置格子内的图标，<code>text</code> 属性设置文字内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;文字&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;文字&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;文字&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;文字&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-lie-shu" tabindex="-1">自定义列数</h3><p>默认一行展示四个格子，可以通过 <code>column-num</code> 自定义列数。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">:column-num</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;value in 6&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;文字&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-nei-rong" tabindex="-1">自定义内容</h3><p>通过插槽可以自定义格子展示的内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">:border</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">:column-num</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/apple-1.jpg&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-grid-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/apple-2.jpg&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-grid-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/apple-3.jpg&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-grid-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zheng-fang-xing-ge-zi" tabindex="-1">正方形格子</h3><p>设置 <code>square</code> 属性后，格子的高度会和宽度保持一致。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">square</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;value in 8&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;文字&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="ge-zi-jian-ju" tabindex="-1">格子间距</h3><p>通过 <code>gutter</code> 属性设置格子之间的距离。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">:gutter</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;value in 8&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;文字&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="nei-rong-heng-pai" tabindex="-1">内容横排</h3><p>将 <code>direction</code> 属性设置为 <code>horizontal</code>，可以让宫格的内容呈横向排列。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;horizontal&quot;</span> <span class="hljs-attr">:column-num</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;文字&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;文字&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;文字&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="ye-mian-dao-hang" tabindex="-1">页面导航</h3><p>通过 <code>to</code> 属性设置 <code>vue-router</code> 跳转链接，通过 <code>url</code> 属性设置 URL 跳转链接。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">clickable</span> <span class="hljs-attr">:column-num</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;路由跳转&quot;</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;URL 跳转&quot;</span> <span class="hljs-attr">url</span>=<span class="hljs-string">&quot;/vant/mobile.html&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="hui-biao-ti-shi" tabindex="-1">徽标提示</h3><p>设置 <code>dot</code> 属性后，会在图标右上角展示一个小红点。设置 <code>badge</code> 属性后，会在图标右上角展示相应的徽标。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">:column-num</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;文字&quot;</span> <span class="hljs-attr">dot</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;文字&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;99+&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="grid-props" tabindex="-1">Grid Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>column-num</td><td>列数</td><td><em>number | string</em></td><td><code>4</code></td></tr><tr><td>icon-size</td><td>图标大小，默认单位为<code>px</code></td><td><em>number | string</em></td><td><code>28px</code></td></tr><tr><td>gutter</td><td>格子之间的间距，默认单位为<code>px</code></td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>border</td><td>是否显示边框</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>center</td><td>是否将格子内容居中显示</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>square</td><td>是否将格子固定为正方形</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>clickable</td><td>是否开启格子点击反馈</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>direction</td><td>格子内容排列的方向，可选值为 <code>horizontal</code></td><td><em>string</em></td><td><code>vertical</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="griditem-props" tabindex="-1">GridItem Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>text</td><td>文字</td><td><em>string</em></td><td>-</td></tr><tr><td>icon</td><td><a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td>-</td></tr><tr><td>icon-prefix</td><td>图标类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props">class-prefix 属性</a></td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>icon-color</td><td>图标颜色，等同于 Icon 组件的 <a href="#/zh-CN/icon#props">color 属性</a></td><td><em>string</em></td><td>-</td></tr><tr><td>reverse <code>v3.1.0</code></td><td>是否调换图标和文本的位置</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>dot</td><td>是否显示图标右上角小红点</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>badge</td><td>图标右上角徽标的内容</td><td><em>number | string</em></td><td>-</td></tr><tr><td>url</td><td>点击后跳转的链接地址</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>点击后跳转的目标路由对象，等同于 vue-router 的 <a href="https://router.vuejs.org/zh/api/#to">to 属性</a></td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>是否在跳转时替换当前页面历史</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="griditem-events" tabindex="-1">GridItem Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击格子时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="griditem-slots" tabindex="-1">GridItem Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>自定义宫格的所有内容</td></tr><tr><td>icon</td><td>自定义图标</td></tr><tr><td>text</td><td>自定义文字</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">GridDirection</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-grid-item-content-padding</td><td><em>var(–van-padding-md) var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-grid-item-content-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-grid-item-content-active-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-grid-item-icon-size</td><td><em>28px</em></td><td>-</td></tr><tr><td>–van-grid-item-text-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-grid-item-text-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr></tbody></table></div>',20),yn=[fn],wn={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",bn,yn)))},qn={class:"van-doc-markdown-body"},xn=t('<h1>Icon 图标</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>基于字体的图标集，可以通过 Icon 组件使用，也可以在其他组件中通过 <code>icon</code> 属性引用。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Icon</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Icon</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>name</code> 属性来指定需要使用的图标，Vant 内置了一套图标库（见右侧示例），可以直接传入对应的名称来使用。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chat-o&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="shi-yong-tu-pian-url" tabindex="-1">使用图片 URL</h3><p>你也可以直接在 <code>name</code> 属性中传入一个图片 URL 来作为图标。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;https://b.yzcdn.cn/vant/icon-demo-1126.png&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="hui-biao-ti-shi" tabindex="-1">徽标提示</h3><p>设置 <code>dot</code> 属性后，会在图标右上角展示一个小红点；设置 <code>badge</code> 属性后，会在图标右上角展示相应的徽标。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">dot</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;9&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;99+&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="tu-biao-yan-se" tabindex="-1">图标颜色</h3><p>通过 <code>color</code> 属性来设置图标的颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;cart-o&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;fire-o&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="tu-biao-da-xiao" tabindex="-1">图标大小</h3><p>通过 <code>size</code> 属性来设置图标的尺寸大小，可以指定任意 CSS 单位。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 不指定单位，默认使用 px --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;40&quot;</span> /&gt;</span>\n<span class="hljs-comment">&lt;!-- 指定使用 rem 单位 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;3rem&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-tu-biao" tabindex="-1">自定义图标</h3><p>如果需要在现有 Icon 的基础上使用更多图标，可以引入第三方 iconfont 对应的字体文件和 CSS 文件，之后就可以在 Icon 组件中直接使用。</p><pre><code class="language-css"><span class="hljs-comment">/* 引入第三方或自定义的字体图标样式 */</span>\n<span class="hljs-keyword">@font-face</span> {\n  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#39;my-icon&#39;</span>;\n  <span class="hljs-attribute">src</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#39;./my-icon.ttf&#39;</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">&#39;truetype&#39;</span>);\n}\n\n<span class="hljs-selector-class">.my-icon</span> {\n  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#39;my-icon&#39;</span>;\n}\n\n<span class="hljs-selector-class">.my-icon-extra</span><span class="hljs-selector-pseudo">::before</span> {\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#39;\\e626&#39;</span>;\n}\n</code></pre><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 通过 class-prefix 指定类名为 my-icon --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">class-prefix</span>=<span class="hljs-string">&quot;my-icon&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;extra&quot;</span> /&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>name</td><td>图标名称或图片链接</td><td><em>string</em></td><td>-</td></tr><tr><td>dot</td><td>是否显示图标右上角小红点</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>badge</td><td>图标右上角徽标的内容</td><td><em>number | string</em></td><td>-</td></tr><tr><td>color</td><td>图标颜色</td><td><em>string</em></td><td><code>inherit</code></td></tr><tr><td>size</td><td>图标大小，如 <code>20px</code> <code>2em</code>，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>inherit</code></td></tr><tr><td>class-prefix</td><td>类名前缀，用于使用自定义图标</td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>tag</td><td>根节点对应的 HTML 标签名</td><td><em>string</em></td><td><code>i</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击图标时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div>',13),kn=[xn],zn={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",qn,kn)))},_n={class:"van-doc-markdown-body"},Cn=t('<h1>Image 图片</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>增强版的 img 标签，提供多种图片填充模式，支持图片懒加载、加载中提示、加载失败提示。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Image</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanImage</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">VanImage</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>基础用法与原生 <code>img</code> 标签一致，可以设置 <code>src</code>、<code>width</code>、<code>height</code>、<code>alt</code> 等原生属性。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/cat.jpeg&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="tian-chong-mo-shi" tabindex="-1">填充模式</h3><p>通过 <code>fit</code> 属性可以设置图片填充模式，可选值见下方表格。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span>\n  <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;10rem&quot;</span>\n  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;10rem&quot;</span>\n  <span class="hljs-attr">fit</span>=<span class="hljs-string">&quot;contain&quot;</span>\n  <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/cat.jpeg&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="yuan-xing-tu-pian" tabindex="-1">圆形图片</h3><p>通过 <code>round</code> 属性可以设置图片变圆，注意当图片宽高不相等且 <code>fit</code> 为 <code>contain</code> 或 <code>scale-down</code> 时，将无法填充一个完整的圆形。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span>\n  <span class="hljs-attr">round</span>\n  <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;10rem&quot;</span>\n  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;10rem&quot;</span>\n  <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/cat.jpeg&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="tu-pian-lan-jia-zai" tabindex="-1">图片懒加载</h3><p>设置 <code>lazy-load</code> 属性来开启图片懒加载，需要搭配 <a href="#/zh-CN/lazyload">Lazyload</a> 组件使用。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span>\n  <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100&quot;</span>\n  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100&quot;</span>\n  <span class="hljs-attr">lazy-load</span>\n  <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/cat.jpeg&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Lazyload</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Lazyload</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="jia-zai-zhong-ti-shi" tabindex="-1">加载中提示</h3><p><code>Image</code> 组件提供了默认的加载中提示，支持通过 <code>loading</code> 插槽自定义内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/cat.jpeg&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:loading</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;spinner&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;20&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-image</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jia-zai-shi-bai-ti-shi" tabindex="-1">加载失败提示</h3><p><code>Image</code> 组件提供了默认的加载失败提示，支持通过 <code>error</code> 插槽自定义内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/cat.jpeg&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:error</span>&gt;</span>加载失败<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-image</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>src</td><td>图片链接</td><td><em>string</em></td><td>-</td></tr><tr><td>fit</td><td>图片填充模式</td><td><em>string</em></td><td><code>fill</code></td></tr><tr><td>alt</td><td>替代文本</td><td><em>string</em></td><td>-</td></tr><tr><td>width</td><td>宽度，默认单位为 <code>px</code></td><td><em>number | string</em></td><td>-</td></tr><tr><td>height</td><td>高度，默认单位为 <code>px</code></td><td><em>number | string</em></td><td>-</td></tr><tr><td>radius</td><td>圆角大小，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>round</td><td>是否显示为圆形</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>lazy-load</td><td>是否开启图片懒加载，须配合 <a href="#/zh-CN/lazyload">Lazyload</a> 组件使用</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-error</td><td>是否展示图片加载失败提示</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-loading</td><td>是否展示图片加载中提示</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>error-icon</td><td>失败时提示的<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td><code>photo-fail</code></td></tr><tr><td>loading-icon</td><td>加载时提示的<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td><code>photo</code></td></tr><tr><td>icon-size <code>v3.0.11</code></td><td>加载图标和失败图标的大小</td><td><em>number | string</em></td><td><code>32px</code></td></tr><tr><td>icon-prefix</td><td>图标类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props">class-prefix 属性</a></td><td><em>string</em></td><td><code>van-icon</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tu-pian-tian-chong-mo-shi" tabindex="-1">图片填充模式 \b</h3><table><thead><tr><th>名称</th><th>含义</th></tr></thead><tbody><tr><td>contain</td><td>保持宽高缩放图片，使图片的长边能完全显示出来</td></tr><tr><td>cover</td><td>保持宽高缩放图片，使图片的短边能完全显示出来，裁剪长边</td></tr><tr><td>fill</td><td>拉伸图片，使图片填满元素</td></tr><tr><td>none</td><td>保持图片原有尺寸</td></tr><tr><td>scale-down</td><td>取 <code>none</code> 或 <code>contain</code> 中较小的一个</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击图片时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>load</td><td>图片加载完毕时触发</td><td>-</td></tr><tr><td>error</td><td>图片加载失败时触发</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>自定义图片下方的内容</td></tr><tr><td>loading</td><td>自定义加载中的提示内容</td></tr><tr><td>error</td><td>自定义加载失败时的提示内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ImageFit</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-image-placeholder-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-image-placeholder-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-image-placeholder-background-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-image-loading-icon-size</td><td><em>32px</em></td><td>-</td></tr><tr><td>–van-image-loading-icon-color</td><td><em>var(–van-gray-4)</em></td><td>-</td></tr><tr><td>–van-image-error-icon-size</td><td><em>32px</em></td><td>-</td></tr><tr><td>–van-image-error-icon-color</td><td><em>var(–van-gray-4)</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="ru-he-yin-yong-ben-di-tu-pian" tabindex="-1">如何引用本地图片？</h3><p>在 .vue 文件中通过相对路径引用本地图片时，需要在图片的链接外包上一层 <code>require()</code>，将图片 URL 转换为 webpack 模块请求，并结合 <a href="https://github.com/webpack-contrib/file-loader">file-loader</a> 或者 <a href="https://github.com/webpack-contrib/url-loader">url-loader</a> 进行处理。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 错误写法 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./image.png&quot;</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 正确写法 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;require(&#39;./image.png&#39;)&quot;</span> /&gt;</span>\n</code></pre><blockquote><p>对此更详细的解释可以参考 vue-loader 的<a href="https://vue-loader.vuejs.org/zh/guide/asset-url.html">处理资源路径</a>章节。</p></blockquote></div><div class="van-doc-card"><h3 id="shi-yong-image-biao-qian-wu-fa-xuan-ran" tabindex="-1">使用 image 标签无法渲染？</h3><p>使用 Image 组件时，可能会遇到将 &lt;image&gt; 作为标签名时无法渲染的问题，比如下面的写法：</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;xxx&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Image</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">components</span>: {\n    <span class="hljs-title class_">Image</span>,\n  },\n};\n&lt;script&gt;\n</span></code></pre><p>这是因为 &lt;image&gt; 标签是原生的 SVG 标签，Vue 不允许将原生标签名注册为组件名，使用 &lt;van-image&gt; 即可规避这个问题。</p></div>',21),Sn=[Cn],Tn={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",_n,Sn)))},In={class:"van-doc-markdown-body"},Pn=t('<h1>ImagePreview 图片预览</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>图片放大预览，支持函数调用和组件调用两种方式。</p></div><div class="van-doc-card"><h3 id="han-shu-diao-yong" tabindex="-1">函数调用</h3><p><code>ImagePreview</code> 是一个函数，调用函数后会直接在页面中展示图片预览界面。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">ImagePreview</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-title class_">ImagePreview</span>([<span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>]);\n</code></pre></div><div class="van-doc-card"><h3 id="zu-jian-diao-yong" tabindex="-1">组件调用</h3><p>通过组件调用 <code>ImagePreview</code> 时，可以通过下面的方式进行注册。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ImagePreview</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-comment">// 全局注册</span>\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ImagePreview</span>);\n\n<span class="hljs-comment">// 局部注册</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">components</span>: {\n    [<span class="hljs-title class_">ImagePreview</span>.<span class="hljs-property">Component</span>.<span class="hljs-property">name</span>]: <span class="hljs-title class_">ImagePreview</span>.<span class="hljs-property">Component</span>,\n  },\n};\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>直接传入图片数组，即可展示图片预览。</p><pre><code class="language-js"><span class="hljs-title class_">ImagePreview</span>([\n  <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n  <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n]);\n</code></pre></div><div class="van-doc-card"><h3 id="zhi-ding-chu-shi-wei-zhi" tabindex="-1">指定初始位置</h3><p><code>ImagePreview</code> 支持传入配置对象，并通过 <code>startPosition</code> 选项指定图片的初始位置（索引值）。</p><pre><code class="language-js"><span class="hljs-title class_">ImagePreview</span>({\n  <span class="hljs-attr">images</span>: [\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n  ],\n  <span class="hljs-attr">startPosition</span>: <span class="hljs-number">1</span>,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="zhan-shi-guan-bi-an-niu" tabindex="-1">展示关闭按钮</h3><p>设置 <code>closeable</code> 属性后，会在弹出层的右上角显示关闭图标，并且可以通过 <code>close-icon</code> 属性自定义图标，使用<code>close-icon-position</code> 属性可以自定义图标位置。</p><pre><code class="language-js"><span class="hljs-title class_">ImagePreview</span>({\n  <span class="hljs-attr">images</span>: [\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n  ],\n  <span class="hljs-attr">closeable</span>: <span class="hljs-literal">true</span>,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="jian-ting-guan-bi-shi-jian" tabindex="-1">监听关闭事件</h3><p>通过 <code>onClose</code> 选项监听图片预览的关闭事件。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-title class_">ImagePreview</span>({\n  <span class="hljs-attr">images</span>: [\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n  ],\n  <span class="hljs-title function_">onClose</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;关闭&#39;</span>);\n  },\n});\n</code></pre></div><div class="van-doc-card"><h3 id="yi-bu-guan-bi" tabindex="-1">异步关闭</h3><p>通过 <code>beforeClose</code> 属性可以拦截关闭行为。</p><pre><code class="language-js"><span class="hljs-keyword">const</span> instance = <span class="hljs-title class_">ImagePreview</span>({\n  <span class="hljs-attr">images</span>: [\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n  ],\n  <span class="hljs-attr">beforeClose</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-literal">false</span>,\n});\n\n<span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n  <span class="hljs-comment">// 调用实例上的 close 方法手动关闭图片预览</span>\n  instance.<span class="hljs-title function_">close</span>();\n}, <span class="hljs-number">2000</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="zu-jian-diao-yong-1" tabindex="-1">组件调用</h3><p>如果需要在图片预览内嵌入组件或其他自定义内容，可以使用组件调用的方式，调用前需要通过 <code>app.use</code> 注册组件。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image-preview</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:images</span>=<span class="hljs-string">&quot;images&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:index</span>&gt;</span>第{{ index }}页<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-image-preview</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> index = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> images = [\n      <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n      <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n    ];\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">newIndex</span>) =&gt; {\n      index.<span class="hljs-property">value</span> = newIndex;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      index,\n      images,\n      onChange,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="options" tabindex="-1">Options</h3><p>通过函数调用 <code>ImagePreview</code> 时，支持传入以下选项：</p><table><thead><tr><th>参数名</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>images</td><td>需要预览的图片 URL 数组</td><td><em>string[]</em></td><td><code>[]</code></td></tr><tr><td>startPosition</td><td>图片预览起始位置索引</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>swipeDuration</td><td>动画时长，单位为 <code>ms</code></td><td><em>number | string</em></td><td><code>300</code></td></tr><tr><td>showIndex</td><td>是否显示页码</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>showIndicators</td><td>是否显示轮播指示器</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loop</td><td>是否开启循环播放</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>onClose</td><td>关闭时的回调函数</td><td><em>Function</em></td><td>-</td></tr><tr><td>onChange</td><td>切换图片时的回调函数，回调参数为当前索引</td><td><em>Function</em></td><td>-</td></tr><tr><td>onScale</td><td>缩放图片时的回调函数，回调参数为当前索引和当前缩放值组成的对象</td><td><em>Function</em></td><td>-</td></tr><tr><td>beforeClose</td><td>关闭前的回调函数，返回 <code>false</code> 可阻止关闭，支持返回 Promise</td><td><em>(active: number) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr><tr><td>closeOnPopstate</td><td>是否在页面回退时自动关闭</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>className</td><td>自定义类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>maxZoom</td><td>手势缩放时，最大缩放比例</td><td><em>number | string</em></td><td><code>3</code></td></tr><tr><td>minZoom</td><td>手势缩放时，最小缩放比例</td><td><em>number | string</em></td><td><code>1/3</code></td></tr><tr><td>closeable</td><td>是否显示关闭图标</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>closeIcon</td><td>关闭图标名称或图片链接</td><td><em>string</em></td><td><code>clear</code></td></tr><tr><td>closeIconPosition</td><td>关闭图标位置，可选值为 <code>top-left</code><br><code>bottom-left</code> <code>bottom-right</code></td><td><em>string</em></td><td><code>top-right</code></td></tr><tr><td>transition <code>v3.0.8</code></td><td>动画类名，等价于 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#transition">transition</a> 的 <code>name</code> 属性</td><td><em>string</em></td><td><code>van-fade</code></td></tr><tr><td>overlay-style <code>v3.0.8</code></td><td>自定义遮罩层样式</td><td><em>object</em></td><td>-</td></tr><tr><td>teleport</td><td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#teleport">to 属性</a></td><td><em>string | Element</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><p>通过组件调用 <code>ImagePreview</code> 时，支持以下 Props：</p><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model:show</td><td>是否展示图片预览</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>images</td><td>需要预览的图片 URL 数组</td><td><em>string[]</em></td><td><code>[]</code></td></tr><tr><td>start-position</td><td>图片预览起始位置索引</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>swipe-duration</td><td>动画时长，单位为 ms</td><td><em>number | string</em></td><td><code>300</code></td></tr><tr><td>show-index</td><td>是否显示页码</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-indicators</td><td>是否显示轮播指示器</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loop</td><td>是否开启循环播放</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>before-close</td><td>关闭前的回调函数，返回 <code>false</code> 可阻止关闭，支持返回 Promise</td><td><em>(active: number) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr><tr><td>close-on-popstate</td><td>是否在页面回退时自动关闭</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>class-name</td><td>自定义类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>max-zoom</td><td>手势缩放时，最大缩放比例</td><td><em>number | string</em></td><td><code>3</code></td></tr><tr><td>min-zoom</td><td>手势缩放时，最小缩放比例</td><td><em>number | string</em></td><td><code>1/3</code></td></tr><tr><td>closeable</td><td>是否显示关闭图标</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>close-icon</td><td>关闭图标名称或图片链接</td><td><em>string</em></td><td><code>clear</code></td></tr><tr><td>close-icon-position</td><td>关闭图标位置，可选值为 <code>top-left</code><br><code>bottom-left</code> <code>bottom-right</code></td><td><em>string</em></td><td><code>top-right</code></td></tr><tr><td>transition <code>v3.0.8</code></td><td>动画类名，等价于 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#transition">transition</a> 的 <code>name</code> 属性</td><td><em>string</em></td><td><code>van-fade</code></td></tr><tr><td>overlay-style <code>v3.0.8</code></td><td>自定义遮罩层样式</td><td><em>object</em></td><td>-</td></tr><tr><td>teleport</td><td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#teleport">to 属性</a></td><td><em>string | Element</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><p>通过组件调用 <code>ImagePreview</code> 时，支持以下事件：</p><table><thead><tr><th>事件</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>close</td><td>关闭时触发</td><td>{ index: 索引, url: 图片链接 }</td></tr><tr><td>closed</td><td>关闭且且动画结束后触发</td><td>-</td></tr><tr><td>change</td><td>切换当前图片时触发</td><td>index: 当前图片的索引</td></tr><tr><td>scale</td><td>缩放当前图片时触发</td><td>{ index: 当前图片的索引, scale: 当前缩放的值 }</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><p>通过组件调用 <code>ImagePreview</code> 时，通过 ref 可以获取到 ImagePreview 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>swipeTo <code>2.9.0</code></td><td>切换到指定位置</td><td><em>index: number, options?: SwipeToOptions</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">ImagePreviewOptions</span>,\n  <span class="hljs-title class_">ImagePreviewInstance</span>,\n  <span class="hljs-title class_">ImagePreviewScaleEventParams</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>ImagePreviewInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ImagePreviewInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> imagePreviewRef = ref&lt;<span class="hljs-title class_">ImagePreviewInstance</span>&gt;();\n\nimagePreviewRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">swipeTo</span>(<span class="hljs-number">1</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><p>通过组件调用 <code>ImagePreview</code> 时，支持以下插槽：</p><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>index</td><td>自定义页码内容</td><td>{ index: 当前图片的索引 }</td></tr><tr><td>cover</td><td>自定义覆盖在图片预览上方的内容</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="onclose-hui-diao-can-shu" tabindex="-1">onClose 回调参数</h3><table><thead><tr><th>参数名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>url</td><td>当前图片 URL</td><td><em>string</em></td></tr><tr><td>index</td><td>当前图片的索引值</td><td><em>number</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="onscale-hui-diao-can-shu" tabindex="-1">onScale 回调参数</h3><table><thead><tr><th>参数名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>index</td><td>当前图片的索引值</td><td><em>number</em></td></tr><tr><td>scale</td><td>当前图片的缩放值</td><td><em>number</em></td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-image-preview-index-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-image-preview-index-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-image-preview-index-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-image-preview-index-text-shadow</td><td><em>0 1px 1px var(–van-gray-8)</em></td><td>-</td></tr><tr><td>–van-image-preview-overlay-background-color</td><td><em>rgba(0, 0, 0, 0.9)</em></td><td>-</td></tr><tr><td>–van-image-preview-close-icon-size</td><td><em>22px</em></td><td>-</td></tr><tr><td>–van-image-preview-close-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-image-preview-close-icon-active-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-image-preview-close-icon-margin</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-image-preview-close-icon-z-index</td><td><em>1</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="zai-zhuo-mian-duan-wu-fa-cao-zuo-zu-jian" tabindex="-1">在桌面端无法操作组件？</h3><p>参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei">桌面端适配</a>。</p></div><div class="van-doc-card"><h3 id="zai-jsx-zhong-xuan-ran-imagepreview-zu-jian-wu-fa-zhan-shi" tabindex="-1">在 JSX 中渲染 ImagePreview 组件无法展示？</h3><p>请注意 <code>ImagePreview</code> 是一个函数，<code>ImagePreview.Component</code> 才是 ImagePreview 对应的组件。JSX 调用图片预览的正确姿势如下：</p><pre><code class="language-jsx"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">return</span> <span class="hljs-function">() =&gt;</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ImagePreview.Component</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">{[show,</span> &#39;<span class="hljs-attr">show</span>&#39;]} /&gt;</span></span>;\n  },\n};\n</code></pre></div>',25),Dn=[Pn],An={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",In,Dn)))},Nn={class:"van-doc-markdown-body"},En=t('<h1>IndexBar 索引栏</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于列表的索引分类显示和快速定位。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">IndexBar</span>, <span class="hljs-title class_">IndexAnchor</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">IndexBar</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">IndexAnchor</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>点击索引栏时，会自动跳转到对应的 <code>IndexAnchor</code> 锚点位置。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-index-bar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-index-anchor</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;A&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-index-anchor</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;B&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span>\n\n  ...\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-index-bar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-suo-yin-lie-biao" tabindex="-1">自定义索引列表</h3><p>可以通过 <code>index-list</code> 属性自定义展示的索引字符列表。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-index-bar</span> <span class="hljs-attr">:index-list</span>=<span class="hljs-string">&quot;indexList&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-index-anchor</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>标题1<span class="hljs-tag">&lt;/<span class="hljs-name">van-index-anchor</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-index-anchor</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>标题2<span class="hljs-tag">&lt;/<span class="hljs-name">van-index-anchor</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span>\n\n  ...\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-index-bar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">indexList</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>],\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="indexbar-props" tabindex="-1">IndexBar Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>index-list</td><td>索引字符列表</td><td><em>string[] | number[]</em></td><td><code>A-Z</code></td></tr><tr><td>z-index</td><td>z-index 层级</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>sticky</td><td>是否开启锚点自动吸顶</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>sticky-offset-top</td><td>锚点自动吸顶时与顶部的距离</td><td><em>number</em></td><td><code>0</code></td></tr><tr><td>highlight-color</td><td>索引字符高亮颜色</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>teleport <code>v3.0.19</code></td><td>指定索引栏挂载的节点</td><td><em>string | Element</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="indexanchor-props" tabindex="-1">IndexAnchor Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>index</td><td>索引字符</td><td><em>number | string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="indexbar-events" tabindex="-1">IndexBar Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>select</td><td>点击索引栏的字符时触发</td><td><em>index: number | string</em></td></tr><tr><td>change</td><td>当前高亮的索引字符变化时触发</td><td><em>index: number | string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="indexbar-fang-fa" tabindex="-1">IndexBar 方法</h3><p>通过 ref 可以获取到 IndexBar 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>scrollTo</td><td>滚动到指定锚点</td><td><em>index: number | string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">IndexBarInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>IndexBarInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">IndexBarInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> indexBarRef = ref&lt;<span class="hljs-title class_">IndexBarInstance</span>&gt;();\n\nindexBarRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">scrollTo</span>(<span class="hljs-string">&#39;B&#39;</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="indexanchor-slots" tabindex="-1">IndexAnchor Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>锚点位置显示内容，默认为索引字符</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-index-bar-sidebar-z-index</td><td><em>2</em></td><td>-</td></tr><tr><td>–van-index-bar-index-font-size</td><td><em>var(–van-font-size-xs)</em></td><td>-</td></tr><tr><td>–van-index-bar-index-line-height</td><td><em>var(–van-line-height-xs)</em></td><td>-</td></tr><tr><td>–van-index-bar-index-active-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-index-anchor-z-index</td><td><em>1</em></td><td>-</td></tr><tr><td>–van-index-anchor-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-index-anchor-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-index-anchor-font-weight</td><td><em>var(–van-font-weight-bold)</em></td><td>-</td></tr><tr><td>–van-index-anchor-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-index-anchor-line-height</td><td><em>32px</em></td><td>-</td></tr><tr><td>–van-index-anchor-background-color</td><td><em>transparent</em></td><td>-</td></tr><tr><td>–van-index-anchor-sticky-text-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-index-anchor-sticky-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr></tbody></table></div>',15),Rn=[En],Un={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Nn,Rn)))},Bn={class:"van-doc-markdown-body"},Vn=t('<h1>Lazyload 懒加载</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>当页面需要加载大量内容时，使用懒加载可以实现延迟加载页面可视区域外的内容，从而使页面加载更流畅。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><p><code>Lazyload</code> 是 <code>Vue</code> 指令，使用前需要对指令进行注册。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Lazyload</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Lazyload</span>);\n\n<span class="hljs-comment">// 注册时可以配置额外的选项</span>\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Lazyload</span>, {\n  <span class="hljs-attr">lazyComponent</span>: <span class="hljs-literal">true</span>,\n});\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>将 <code>v-lazy</code> 指令的值设置为你需要懒加载的图片。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;img in imageList&quot;</span> <span class="hljs-attr">v-lazy</span>=<span class="hljs-string">&quot;img&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">imageList</span>: [\n        <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n        <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n      ],\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="bei-jing-tu-lan-jia-zai" tabindex="-1">背景图懒加载</h3><p>和图片懒加载不同，背景图懒加载需要使用 <code>v-lazy:background-image</code>，值设置为背景图片的地址，需要注意的是必须声明容器高度。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;img in imageList&quot;</span> <span class="hljs-attr">v-lazy:background-image</span>=<span class="hljs-string">&quot;img&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zu-jian-lan-jia-zai" tabindex="-1">组件懒加载</h3><p>将需要懒加载的组件放在 <code>lazy-component</code> 标签中，即可实现组件懒加载。</p><pre><code class="language-js"><span class="hljs-comment">// 注册时设置`lazyComponent`选项</span>\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Lazyload</span>, {\n  <span class="hljs-attr">lazyComponent</span>: <span class="hljs-literal">true</span>,\n});\n</code></pre><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">lazy-component</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;img in imageList&quot;</span> <span class="hljs-attr">v-lazy</span>=<span class="hljs-string">&quot;img&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">lazy-component</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="options" tabindex="-1">Options</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>loading</td><td>加载时的图片</td><td><em>string</em></td><td>-</td></tr><tr><td>error</td><td>错误时的图片</td><td><em>string</em></td><td>-</td></tr><tr><td>preload</td><td>预加载高度的比例</td><td><em>string</em></td><td>-</td></tr><tr><td>attempt</td><td>尝试次数</td><td><em>number</em></td><td><code>3</code></td></tr><tr><td>listenEvents</td><td>监听的事件</td><td><em>string[]</em></td><td><code>scroll</code>等</td></tr><tr><td>adapter</td><td>适配器</td><td><em>object</em></td><td>-</td></tr><tr><td>filter</td><td>图片 URL 过滤</td><td><em>object</em></td><td>-</td></tr><tr><td>lazyComponent</td><td>是否能懒加载模块</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table><blockquote><p>更多内容请参照：<a href="https://github.com/hilongjw/vue-lazyload">vue-lazyload 官方文档</a></p></blockquote></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="tong-guo-cdn-yin-ru-vant-shi-mei-you-zi-dong-zhu-ce-lazyload-zu-jian" tabindex="-1">通过 CDN 引入 Vant 时，没有自动注册 Lazyload 组件？</h3><p>由于 Lazyload 组件在注册时可以传入一些配置项，所以我们不会自动注册 Lazyload 组件，需要手动进行注册：</p><pre><code class="language-js"><span class="hljs-keyword">const</span> app = <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">createApp</span>();\n\napp.<span class="hljs-title function_">use</span>(vant.<span class="hljs-property">Lazyload</span>, {\n  <span class="hljs-attr">lazyComponent</span>: <span class="hljs-literal">true</span>,\n});\n</code></pre></div>',11),Ln=[Vn],Fn={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Bn,Ln)))},Wn={class:"van-doc-markdown-body"},Mn=t('<h1>List 列表</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>瀑布流滚动加载，用于展示长列表，当列表即将滚动到底部时，会触发事件并加载更多列表项。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">List</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">List</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>List 组件通过 <code>loading</code> 和 <code>finished</code> 两个变量控制加载状态，当组件滚动到底部时，会触发 <code>load</code> 事件并将 <code>loading</code> 设置成 <code>true</code>。此时可以发起异步操作并更新数据，数据更新完毕后，将 <code>loading</code> 设置成 <code>false</code> 即可。若数据已全部加载完毕，则直接将 <code>finished</code> 设置成 <code>true</code> 即可。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-list</span>\n  <span class="hljs-attr">v-model:loading</span>=<span class="hljs-string">&quot;loading&quot;</span>\n  <span class="hljs-attr">:finished</span>=<span class="hljs-string">&quot;finished&quot;</span>\n  <span class="hljs-attr">finished-text</span>=<span class="hljs-string">&quot;没有更多了&quot;</span>\n  @<span class="hljs-attr">load</span>=<span class="hljs-string">&quot;onLoad&quot;</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in list&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;item&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-list</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> list = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> finished = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onLoad</span> = (<span class="hljs-params"></span>) =&gt; {\n      <span class="hljs-comment">// 异步更新数据</span>\n      <span class="hljs-comment">// setTimeout 仅做示例，真实场景中一般为 ajax 请求</span>\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) {\n          list.<span class="hljs-property">value</span>.<span class="hljs-title function_">push</span>(list.<span class="hljs-property">value</span>.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);\n        }\n\n        <span class="hljs-comment">// 加载状态结束</span>\n        loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n\n        <span class="hljs-comment">// 数据全部加载完成</span>\n        <span class="hljs-keyword">if</span> (list.<span class="hljs-property">value</span>.<span class="hljs-property">length</span> &gt;= <span class="hljs-number">40</span>) {\n          finished.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;\n        }\n      }, <span class="hljs-number">1000</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      list,\n      onLoad,\n      loading,\n      finished,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="cuo-wu-ti-shi" tabindex="-1">错误提示</h3><p>若列表数据加载失败，将 <code>error</code> 设置成 <code>true</code> 即可显示错误提示，用户点击错误提示后会重新触发 load 事件。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-list</span>\n  <span class="hljs-attr">v-model:loading</span>=<span class="hljs-string">&quot;loading&quot;</span>\n  <span class="hljs-attr">v-model:error</span>=<span class="hljs-string">&quot;error&quot;</span>\n  <span class="hljs-attr">error-text</span>=<span class="hljs-string">&quot;请求失败，点击重新加载&quot;</span>\n  @<span class="hljs-attr">load</span>=<span class="hljs-string">&quot;onLoad&quot;</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in list&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;item&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-list</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> list = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">const</span> error = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onLoad</span> = (<span class="hljs-params"></span>) =&gt; {\n      <span class="hljs-title function_">fetchSomeThing</span>().<span class="hljs-title function_">catch</span>(<span class="hljs-function">() =&gt;</span> {\n        error.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;\n      });\n    };\n\n    <span class="hljs-keyword">return</span> {\n      list,\n      error,\n      onLoad,\n      loading,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xia-la-shua-xin" tabindex="-1">下拉刷新</h3><p>List 组件可以与 <a href="#/zh-CN/pull-refresh">PullRefresh</a> 组件结合使用，实现下拉刷新的效果。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pull-refresh</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;refreshing&quot;</span> @<span class="hljs-attr">refresh</span>=<span class="hljs-string">&quot;onRefresh&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-list</span>\n    <span class="hljs-attr">v-model:loading</span>=<span class="hljs-string">&quot;loading&quot;</span>\n    <span class="hljs-attr">:finished</span>=<span class="hljs-string">&quot;finished&quot;</span>\n    <span class="hljs-attr">finished-text</span>=<span class="hljs-string">&quot;没有更多了&quot;</span>\n    @<span class="hljs-attr">load</span>=<span class="hljs-string">&quot;onLoad&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in list&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;item&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-list</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-pull-refresh</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> list = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> finished = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> refreshing = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onLoad</span> = (<span class="hljs-params"></span>) =&gt; {\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-keyword">if</span> (refreshing.<span class="hljs-property">value</span>) {\n          list.<span class="hljs-property">value</span> = [];\n          refreshing.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n        }\n\n        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) {\n          list.<span class="hljs-property">value</span>.<span class="hljs-title function_">push</span>(list.<span class="hljs-property">value</span>.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);\n        }\n        loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n\n        <span class="hljs-keyword">if</span> (list.<span class="hljs-property">value</span>.<span class="hljs-property">length</span> &gt;= <span class="hljs-number">40</span>) {\n          finished.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;\n        }\n      }, <span class="hljs-number">1000</span>);\n    };\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onRefresh</span> = (<span class="hljs-params"></span>) =&gt; {\n      <span class="hljs-comment">// 清空列表数据</span>\n      finished.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n\n      <span class="hljs-comment">// 重新加载数据</span>\n      <span class="hljs-comment">// 将 loading 设置为 true，表示处于加载状态</span>\n      loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;\n      <span class="hljs-title function_">onLoad</span>();\n    };\n\n    <span class="hljs-keyword">return</span> {\n      list,\n      onLoad,\n      loading,\n      finished,\n      onRefresh,\n      refreshing,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model:loading</td><td>是否处于加载状态，加载过程中不触发 <code>load</code> 事件</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>v-model:error</td><td>是否加载失败，加载失败后点击错误提示可以重新触发 <code>load</code> 事件</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>finished</td><td>是否已加载完成，加载完成后不再触发 <code>load</code> 事件</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>offset</td><td>滚动条与底部距离小于 offset 时触发 <code>load</code> 事件</td><td><em>number | string</em></td><td><code>300</code></td></tr><tr><td>loading-text</td><td>加载过程中的提示文案</td><td><em>string</em></td><td><code>加载中...</code></td></tr><tr><td>finished-text</td><td>加载完成后的提示文案</td><td><em>string</em></td><td>-</td></tr><tr><td>error-text</td><td>加载失败后的提示文案</td><td><em>string</em></td><td>-</td></tr><tr><td>immediate-check</td><td>是否在初始化时立即执行滚动位置检查</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>direction</td><td>滚动触发加载的方向，可选值为 <code>up</code></td><td><em>string</em></td><td><code>down</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>load</td><td>滚动条与底部距离小于 offset 时触发</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><p>通过 ref 可以获取到 List 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>check</td><td>检查当前的滚动位置，若已滚动至底部，则会触发 load 事件</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ListInstance</span>, <span class="hljs-title class_">ListDirection</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>ListInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ListInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> listRef = ref&lt;<span class="hljs-title class_">ListInstance</span>&gt;();\n\nlistRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">check</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>列表内容</td></tr><tr><td>loading</td><td>自定义底部加载中提示</td></tr><tr><td>finished</td><td>自定义加载完成后的提示文案</td></tr><tr><td>error</td><td>自定义加载失败后的提示文案</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-list-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-list-text-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-list-text-line-height</td><td><em>50px</em></td><td>-</td></tr><tr><td>–van-list-loading-icon-size</td><td><em>16px</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="list-de-yun-xing-ji-zhi-shi-shi-me" tabindex="-1">List 的运行机制是什么？</h3><p>List 会监听浏览器的滚动事件并计算列表的位置，当列表底部与可视区域的距离小于 <code>offset</code> 时，List 会触发一次 load 事件。</p></div><div class="van-doc-card"><h3 id="wei-shi-me-list-chu-shi-hua-hou-hui-li-ji-chu-fa-load-shi-jian" tabindex="-1">为什么 List 初始化后会立即触发 load 事件？</h3><p>List 初始化后会触发一次 load 事件，用于加载第一屏的数据，这个特性可以通过 <code>immediate-check</code> 属性关闭。</p></div><div class="van-doc-card"><h3 id="wei-shi-me-hui-lian-xu-chu-fa-load-shi-jian" tabindex="-1">为什么会连续触发 load 事件？</h3><p>如果一次请求加载的数据条数较少，导致列表内容无法铺满当前屏幕，List 会继续触发 load 事件，直到内容铺满屏幕或数据全部加载完成。因此你需要调整每次获取的数据条数，理想情况下每次请求获取的数据条数应能够填满一屏高度。</p></div><div class="van-doc-card"><h3 id="loading-he-finished-fen-bie-shi-shi-me-han-yi" tabindex="-1">loading 和 finished 分别是什么含义？</h3><p><code>List</code> 有以下三种状态，理解这些状态有助于你正确地使用 <code>List</code> 组件：</p><ul><li>非加载中，<code>loading</code> 为 <code>false</code>，此时会根据列表滚动位置判断是否触发 <code>load</code> 事件（列表内容不足一屏幕时，会直接触发）</li><li>加载中，<code>loading</code> 为 <code>true</code>，表示正在发送异步请求，此时不会触发 <code>load</code> 事件</li><li>加载完成，<code>finished</code> 为 <code>true</code>，此时不会触发 <code>load</code> 事件</li></ul><p>在每次请求完毕后，需要手动将 <code>loading</code> 设置为 <code>false</code>，表示加载结束</p></div><div class="van-doc-card"><h3 id="shi-yong-float-bu-ju-hou-yi-zhi-chu-fa-jia-zai" tabindex="-1">使用 float 布局后一直触发加载？</h3><p>若 List 的内容使用了 float 布局，可以在容器上添加 <code>van-clearfix</code> 类名来清除浮动，使得 List 能正确判断元素位置</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-list</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-clearfix&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;float-item&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;float-item&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;float-item&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-list</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zai-html-body-shang-she-zhi-overflow-hou-yi-zhi-chu-fa-jia-zai" tabindex="-1">在 html、body 上设置 overflow 后一直触发加载？</h3><p>如果在 html 和 body 标签上设置了 <code>overflow-x: hidden</code> 样式，会导致 List 一直触发加载。</p><pre><code class="language-css"><span class="hljs-selector-tag">html</span>,\n<span class="hljs-selector-tag">body</span> {\n  <span class="hljs-attribute">overflow-x</span>: hidden;\n}\n</code></pre><p>这个问题的原因是当元素设置了 <code>overflow-x: hidden</code> 样式时，该元素的 <code>overflow-y</code> 会被浏览器设置为 <code>auto</code>，而不是默认值 <code>visible</code>，导致 List 无法正确地判断滚动容器。解决方法是去除该样式，或者在 html 和 body 标签上添加 <code>height: 100%</code> 样式。</p></div><div class="van-doc-card"><h3 id="direction-shu-xing-she-zhi-wei-up-hou-yi-zhi-chu-fa-jia-zai" tabindex="-1">direction 属性设置为 up 后一直触发加载？</h3><p>设置 <code>direction</code> 属性为 up 后，当滚动条处于页面顶部时，就会触发 List 组件的加载。</p><p>因此在使用该属性时，建议在每次数据加载完成后，将滚动条滚动至页面底部或非顶部的位置。</p></div>',23),On=[Mn],Gn={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Wn,On)))},Hn={class:"van-doc-markdown-body"},Kn=t('<h1>Loading 加载</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>加载图标，用于表示加载中的过渡状态。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Loading</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Loading</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="jia-zai-lei-xing" tabindex="-1">加载类型</h3><p>通过 <code>type</code> 属性可以设置加载图标的类型，默认为 <code>circular</code>，可选值为 <code>spinner</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> /&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;spinner&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yan-se" tabindex="-1">自定义颜色</h3><p>通过 <code>color</code> 属性设置加载图标的颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span> /&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;spinner&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-da-xiao" tabindex="-1">自定义大小</h3><p>通过 <code>size</code> 属性设置加载图标的大小，默认单位为 <code>px</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24&quot;</span> /&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;spinner&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24px&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jia-zai-wen-an" tabindex="-1">加载文案</h3><p>可以使用默认插槽在图标的右侧插入加载文案。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24px&quot;</span>&gt;</span>加载中...<span class="hljs-tag">&lt;/<span class="hljs-name">van-loading</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="chui-zhi-pai-lie" tabindex="-1">垂直排列</h3><p>设置 <code>vertical</code> 属性后，图标和文案会垂直排列。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24px&quot;</span> <span class="hljs-attr">vertical</span>&gt;</span>加载中...<span class="hljs-tag">&lt;/<span class="hljs-name">van-loading</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-wen-an-yan-se" tabindex="-1">自定义文案颜色</h3><p>通过 <code>color</code> 或者 <code>text-color</code> 属性设置加载文案的颜色。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 可修改文案和加载图标的颜色 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#0094ff&quot;</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 只修改文案颜色 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">text-color</span>=<span class="hljs-string">&quot;#0094ff&quot;</span> /&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>color</td><td>颜色</td><td><em>string</em></td><td><code>#c9c9c9</code></td></tr><tr><td>type</td><td>类型，可选值为 <code>spinner</code></td><td><em>string</em></td><td><code>circular</code></td></tr><tr><td>size</td><td>加载图标大小，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>30px</code></td></tr><tr><td>text-size</td><td>文字大小，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>14px</code></td></tr><tr><td>text-color</td><td>文字颜色</td><td><em>string</em></td><td><code>#c9c9c9</code></td></tr><tr><td>vertical</td><td>是否垂直排列图标和文字内容</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>加载文案</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">LoadingType</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-loading-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-loading-text-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-loading-spinner-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-loading-spinner-size</td><td><em>30px</em></td><td>-</td></tr><tr><td>–van-loading-spinner-animation-duration</td><td><em>0.8s</em></td><td>-</td></tr></tbody></table></div>',16),$n=[Kn],Jn={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Hn,$n)))},Xn={class:"van-doc-markdown-body"},Yn=t('<h1>国际化</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>Vant 采用中文作为默认语言，同时支持多语言切换，请按照下方教程进行国际化设置。</p></div><h2 id="shi-yong-fang-fa" tabindex="-1">使用方法</h2><div class="van-doc-card"><h3 id="duo-yu-yan-qie-huan" tabindex="-1">多语言切换</h3><p>Vant 通过 Locale 组件实现多语言支持，使用 <code>Locale.use</code> 方法可以切换当前使用的语言。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Locale</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n<span class="hljs-comment">// 引入英文语言包</span>\n<span class="hljs-keyword">import</span> enUS <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant/es/locale/lang/en-US&#39;</span>;\n\n<span class="hljs-title class_">Locale</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&#39;en-US&#39;</span>, enUS);\n</code></pre></div><div class="van-doc-card"><h3 id="fu-gai-yu-yan-bao" tabindex="-1">覆盖语言包</h3><p>通过 <code>Locale.add</code> 方法可以实现文案的修改和扩展，示例如下：</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Locale</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> messages = {\n  <span class="hljs-string">&#39;zh-CN&#39;</span>: {\n    <span class="hljs-attr">vanPicker</span>: {\n      <span class="hljs-attr">confirm</span>: <span class="hljs-string">&#39;关闭&#39;</span>, <span class="hljs-comment">// 将&#39;确认&#39;修改为&#39;关闭&#39;</span>\n    },\n  },\n};\n\n<span class="hljs-title class_">Locale</span>.<span class="hljs-title function_">add</span>(messages);\n</code></pre></div><div class="van-doc-card"><h3 id="yu-yan-bao" tabindex="-1">语言包</h3><p>目前支持的语言:</p><table><thead><tr><th>语言</th><th>文件名</th></tr></thead><tbody><tr><td>简体中文</td><td>zh-CN</td></tr><tr><td>繁體中文（港）</td><td>zh-HK</td></tr><tr><td>繁體中文（台）</td><td>zh-TW</td></tr><tr><td>德语</td><td>de-DE</td></tr><tr><td>德语 (正式)</td><td>de-DE-formal</td></tr><tr><td>英语</td><td>en-US</td></tr><tr><td>西班牙语</td><td>es-ES</td></tr><tr><td>日语</td><td>ja-JP</td></tr><tr><td>挪威语</td><td>nb-NO</td></tr><tr><td>罗马尼亚语</td><td>ro-RO</td></tr><tr><td>俄罗斯语</td><td>ru-RU</td></tr><tr><td>土耳其语</td><td>tr-TR</td></tr><tr><td>泰语</td><td>th-TH</td></tr><tr><td>法语</td><td>fr-FR</td></tr></tbody></table><blockquote><p>在 <a href="https://github.com/youzan/vant/tree/dev/packages/vant/src/locale/lang">这里</a> 查看所有的语言包源文件。</p></blockquote></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="zhao-bu-dao-suo-xu-de-yu-yan-bao" tabindex="-1">找不到所需的语言包？</h3><p>如果上方列表中没有你需要的语言，欢迎给我们提 Pull Request 来增加新的语言包，改动内容可以参考<a href="https://github.com/youzan/vant/pull/7245">增加德语语言包</a> 的 PR。</p></div><div class="van-doc-card"><h3 id="ye-wu-dai-ma-ru-he-shi-xian-guo-ji-hua" tabindex="-1">业务代码如何实现国际化？</h3><p>可以使用 <a href="https://github.com/kazupon/vue-i18n">vue-i18n</a> 来实现。</p></div><div class="van-doc-card"><h3 id="yi-cdn-xing-shi-yin-ru-shi-ru-he-shi-yong-yu-yan-bao" tabindex="-1">以 CDN 形式引入时，如何使用语言包？</h3><p>目前没有提供 CDN 形式的语言包，可以手动拷贝语言包的内容来使用。</p></div><div class="van-doc-card"><h3 id="yu-yan-bao-zhong-bu-bao-han-sku-zu-jian" tabindex="-1">语言包中不包含 Sku 组件？</h3><p>语言包中默认不包含 Sku 业务组件的语言配置，因此如果有 Sku 组件的国际化需求，请自行配置国际化文案。</p></div>',11),Zn=[Yn],Qn={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Xn,Zn)))},sl={class:"van-doc-markdown-body"},al=t('<h1>NavBar 导航栏</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>为页面提供导航功能，常用于页面顶部。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NavBar</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">NavBar</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-nav-bar</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span>\n  <span class="hljs-attr">left-text</span>=<span class="hljs-string">&quot;返回&quot;</span>\n  <span class="hljs-attr">right-text</span>=<span class="hljs-string">&quot;按钮&quot;</span>\n  <span class="hljs-attr">left-arrow</span>\n  @<span class="hljs-attr">click-left</span>=<span class="hljs-string">&quot;onClickLeft&quot;</span>\n  @<span class="hljs-attr">click-right</span>=<span class="hljs-string">&quot;onClickRight&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickLeft</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;返回&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickRight</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;按钮&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      onClickLeft,\n      onClickRight,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="shi-yong-cha-cao" tabindex="-1">使用插槽</h3><p>通过插槽自定义导航栏两侧的内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-nav-bar</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span> <span class="hljs-attr">left-text</span>=<span class="hljs-string">&quot;返回&quot;</span> <span class="hljs-attr">left-arrow</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;18&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-nav-bar</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>标题</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>left-text</td><td>左侧文案</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>right-text</td><td>右侧文案</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>left-arrow</td><td>是否显示左侧箭头</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>border</td><td>是否显示下边框</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>fixed</td><td>是否固定在顶部</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>placeholder</td><td>固定在顶部时，是否在标签位置生成一个等高的占位元素</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>z-index</td><td>导航栏 z-index</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>safe-area-inset-top</td><td>是否开启<a href="#/zh-CN/advanced-usage#di-bu-an-quan-qu-gua-pei">顶部安全区适配</a></td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>title</td><td>自定义标题</td></tr><tr><td>left</td><td>自定义左侧区域内容</td></tr><tr><td>right</td><td>自定义右侧区域内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click-left</td><td>点击左侧按钮时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-right</td><td>点击右侧按钮时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-nav-bar-height</td><td><em>46px</em></td><td>-</td></tr><tr><td>–van-nav-bar-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-nav-bar-arrow-size</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-nav-bar-icon-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-nav-bar-text-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-nav-bar-title-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-nav-bar-title-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-nav-bar-z-index</td><td><em>1</em></td><td>-</td></tr></tbody></table></div>',12),tl=[al],nl={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",sl,tl)))},ll={class:"van-doc-markdown-body"},el=t('<h1>NoticeBar 通知栏</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于循环播放展示一组消息通知。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NoticeBar</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">NoticeBar</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>text</code> 属性设置通知栏的内容，通过 <code>left-icon</code> 属性设置通知栏左侧的图标。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span>\n  <span class="hljs-attr">left-icon</span>=<span class="hljs-string">&quot;volume-o&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;在代码阅读过程中人们说脏话的频率是衡量代码质量的唯一标准。&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="gun-dong-bo-fang" tabindex="-1">滚动播放</h3><p>通知栏的内容长度溢出时会自动开启滚动播放，通过 <code>scrollable</code> 属性可以控制该行为。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 文字较短时，通过设置 scrollable 属性开启滚动播放 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">scrollable</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;技术是开发它的人的共同灵魂。&quot;</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 文字较长时，通过禁用 scrollable 属性关闭滚动播放 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span>\n  <span class="hljs-attr">:scrollable</span>=<span class="hljs-string">&quot;false&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;在代码阅读过程中人们说脏话的频率是衡量代码质量的唯一标准。&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="duo-xing-zhan-shi" tabindex="-1">多行展示</h3><p>文字较长时，可以通过设置 <code>wrapable</code> 属性来开启多行展示。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span>\n  <span class="hljs-attr">wrapable</span>\n  <span class="hljs-attr">:scrollable</span>=<span class="hljs-string">&quot;false&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;在代码阅读过程中人们说脏话的频率是衡量代码质量的唯一标准。&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="tong-zhi-lan-mo-shi" tabindex="-1">通知栏模式</h3><p>通知栏支持 <code>closeable</code> 和 <code>link</code> 两种模式。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- closeable 模式，在右侧显示关闭按钮 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;closeable&quot;</span>&gt;</span>技术是开发它的人的共同灵魂。<span class="hljs-tag">&lt;/<span class="hljs-name">van-notice-bar</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- link 模式，在右侧显示链接箭头 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;link&quot;</span>&gt;</span>技术是开发它的人的共同灵魂。<span class="hljs-tag">&lt;/<span class="hljs-name">van-notice-bar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yang-shi" tabindex="-1">自定义样式</h3><p>通过 <code>color</code> 属性设置文本颜色，通过 <code>background</code> 属性设置背景色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span> <span class="hljs-attr">background</span>=<span class="hljs-string">&quot;#ecf9ff&quot;</span> <span class="hljs-attr">left-icon</span>=<span class="hljs-string">&quot;info-o&quot;</span>&gt;</span>\n  技术是开发它的人的共同灵魂。\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-notice-bar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="chui-zhi-gun-dong" tabindex="-1">垂直滚动</h3><p>搭配 NoticeBar 和 Swipe 组件可以实现垂直滚动的效果。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">left-icon</span>=<span class="hljs-string">&quot;volume-o&quot;</span> <span class="hljs-attr">:scrollable</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span>\n    <span class="hljs-attr">vertical</span>\n    <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;notice-swipe&quot;</span>\n    <span class="hljs-attr">:autoplay</span>=<span class="hljs-string">&quot;3000&quot;</span>\n    <span class="hljs-attr">:show-indicators</span>=<span class="hljs-string">&quot;false&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>内容 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>内容 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>内容 3<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-notice-bar</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.notice-swipe</span> {\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;\n    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">40px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>mode</td><td>通知栏模式，可选值为 <code>closeable</code> <code>link</code></td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>text</td><td>通知文本内容</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>color</td><td>通知文本颜色</td><td><em>string</em></td><td><code>#f60</code></td></tr><tr><td>background</td><td>滚动条背景</td><td><em>string</em></td><td><code>#fff7cc</code></td></tr><tr><td>left-icon</td><td>左侧<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td>-</td></tr><tr><td>delay</td><td>动画延迟时间 (s)</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>speed</td><td>滚动速率 (px/s)</td><td><em>number | string</em></td><td><code>60</code></td></tr><tr><td>scrollable</td><td>是否开启滚动播放，内容长度溢出时默认开启</td><td><em>boolean</em></td><td>-</td></tr><tr><td>wrapable</td><td>是否开启文本换行，只在禁用滚动时生效</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击通知栏时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>close</td><td>关闭通知栏时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>replay</td><td>每当滚动栏重新开始滚动时触发</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><p>通过 ref 可以获取到 NoticeBar 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>reset <code>v3.1.1</code></td><td>重置通知栏到初始状态</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">NoticeBarMode</span>, <span class="hljs-title class_">NoticeBarInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>NoticeBarInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">NoticeBarInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> noticeBarRef = ref&lt;<span class="hljs-title class_">NoticeBarInstance</span>&gt;();\n\nnoticeBarRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">reset</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>内容</th></tr></thead><tbody><tr><td>default</td><td>通知文本内容</td></tr><tr><td>left-icon</td><td>自定义左侧图标</td></tr><tr><td>right-icon</td><td>自定义右侧图标</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-notice-bar-height</td><td><em>40px</em></td><td>-</td></tr><tr><td>–van-notice-bar-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-notice-bar-wrapable-padding</td><td><em>var(–van-padding-xs) var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-notice-bar-text-color</td><td><em>var(–van-orange-dark)</em></td><td>-</td></tr><tr><td>–van-notice-bar-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-notice-bar-line-height</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-notice-bar-background-color</td><td><em>var(–van-orange-light)</em></td><td>-</td></tr><tr><td>–van-notice-bar-icon-size</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-notice-bar-icon-min-width</td><td><em>24px</em></td><td>-</td></tr></tbody></table></div>',18),dl=[el],pl={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",ll,dl)))},cl={class:"van-doc-markdown-body"},ol=t('<h1>Notify 消息提示</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>在页面顶部展示消息提示，支持函数调用和组件调用两种方式。</p></div><div class="van-doc-card"><h3 id="han-shu-diao-yong" tabindex="-1">函数调用</h3><p>Notify 是一个函数，调用后会直接在页面中弹出相应的消息提示。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Notify</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-title class_">Notify</span>(<span class="hljs-string">&#39;通知内容&#39;</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="zu-jian-diao-yong" tabindex="-1">组件调用</h3><p>通过组件调用 Notify 时，可以通过下面的方式进行注册：</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Notify</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-comment">// 全局注册</span>\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Notify</span>);\n\n<span class="hljs-comment">// 局部注册</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">components</span>: {\n    [<span class="hljs-title class_">Notify</span>.<span class="hljs-property">Component</span>.<span class="hljs-property">name</span>]: <span class="hljs-title class_">Notify</span>.<span class="hljs-property">Component</span>,\n  },\n};\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><pre><code class="language-js"><span class="hljs-title class_">Notify</span>(<span class="hljs-string">&#39;通知内容&#39;</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="tong-zhi-lei-xing" tabindex="-1">通知类型</h3><p>支持 <code>primary</code>、<code>success</code>、<code>warning</code>、<code>danger</code> 四种通知类型，默认为 <code>danger</code>。</p><pre><code class="language-js"><span class="hljs-comment">// 主要通知</span>\n<span class="hljs-title class_">Notify</span>({ <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;primary&#39;</span>, <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;通知内容&#39;</span> });\n\n<span class="hljs-comment">// 成功通知</span>\n<span class="hljs-title class_">Notify</span>({ <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;success&#39;</span>, <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;通知内容&#39;</span> });\n\n<span class="hljs-comment">// 危险通知</span>\n<span class="hljs-title class_">Notify</span>({ <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;danger&#39;</span>, <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;通知内容&#39;</span> });\n\n<span class="hljs-comment">// 警告通知</span>\n<span class="hljs-title class_">Notify</span>({ <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;warning&#39;</span>, <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;通知内容&#39;</span> });\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-tong-zhi" tabindex="-1">自定义通知</h3><p>自定义消息通知的颜色和展示时长。</p><pre><code class="language-js"><span class="hljs-title class_">Notify</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;自定义颜色&#39;</span>,\n  <span class="hljs-attr">color</span>: <span class="hljs-string">&#39;#ad0000&#39;</span>,\n  <span class="hljs-attr">background</span>: <span class="hljs-string">&#39;#ffe1e1&#39;</span>,\n});\n\n<span class="hljs-title class_">Notify</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;自定义时长&#39;</span>,\n  <span class="hljs-attr">duration</span>: <span class="hljs-number">1000</span>,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="quan-ju-fang-fa" tabindex="-1">全局方法</h3><p>通过 <code>app.use</code> 全局注册 Notify 组件后，会自动在 app 的所有子组件上挂载 <code>$notify</code> 方法，便于在组件内调用。</p><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.$notify(<span class="hljs-string">&#39;提示文案&#39;</span>);\n  },\n};\n</code></pre><blockquote><p>Tips: 由于 setup 选项中无法访问 this，因此不能使用上述方式，请通过 import 引入。</p></blockquote></div><div class="van-doc-card"><h3 id="zu-jian-diao-yong-1" tabindex="-1">组件调用</h3><p>如果需要在 Notify 内嵌入组件或其他自定义内容，可以使用组件调用的方式。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;组件调用&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showNotify&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-notify</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;bell&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-right: 4px;&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>通知内容<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-notify</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">showNotify</span> = (<span class="hljs-params"></span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      }, <span class="hljs-number">2000</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      showNotify,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>Notify</td><td>展示提示</td><td><code>options | message</code></td><td>notify 实例</td></tr><tr><td>Notify.clear</td><td>关闭提示</td><td>-</td><td><code>void</code></td></tr><tr><td>Notify.setDefaultOptions</td><td>修改默认配置，对所有 Notify 生效</td><td><code>options</code></td><td><code>void</code></td></tr><tr><td>Notify.resetDefaultOptions</td><td>重置默认配置，对所有 Notify 生效</td><td>-</td><td><code>void</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="options" tabindex="-1">Options</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>类型，可选值为 <code>primary</code> <code>success</code> <code>warning</code></td><td><em>string</em></td><td><code>danger</code></td></tr><tr><td>message</td><td>展示文案，支持通过<code>\\n</code>换行</td><td><em>string</em></td><td>-</td></tr><tr><td>duration</td><td>展示时长(ms)，值为 0 时，notify 不会消失</td><td><em>number | string</em></td><td><code>3000</code></td></tr><tr><td>color</td><td>字体颜色</td><td><em>string</em></td><td><code>white</code></td></tr><tr><td>background</td><td>背景颜色</td><td><em>string</em></td><td>-</td></tr><tr><td>className</td><td>自定义类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>lockScroll <code>v3.0.7</code></td><td>是否锁定背景滚动</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>onClick</td><td>点击时的回调函数</td><td><em>(event: MouseEvent): void</em></td><td>-</td></tr><tr><td>onOpened</td><td>完全展示后的回调函数</td><td><em>() =&gt; void</em></td><td>-</td></tr><tr><td>onClose</td><td>关闭时的回调函数</td><td><em>() =&gt; void</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">NotifyType</span>, <span class="hljs-title class_">NotifyOptions</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-notify-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-notify-padding</td><td><em>var(–van-padding-xs) var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-notify-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-notify-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-notify-primary-background-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-notify-success-background-color</td><td><em>var(–van-success-color)</em></td><td>-</td></tr><tr><td>–van-notify-danger-background-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-notify-warning-background-color</td><td><em>var(–van-warning-color)</em></td><td>-</td></tr></tbody></table></div>',16),rl=[ol],il={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",cl,rl)))},hl={class:"van-doc-markdown-body"},jl=t('<h1>NumberKeyboard 数字键盘</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>虚拟数字键盘，可以配合<a href="#/zh-CN/password-input">密码输入框组件</a>或自定义的输入框组件使用。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NumberKeyboard</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">NumberKeyboard</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="mo-ren-yang-shi" tabindex="-1">默认样式</h3><p>数字键盘提供了 <code>input</code>、<code>delete</code>、<code>blur</code> 事件，分别对应输入内容、删除内容和失去焦点的动作。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> @<span class="hljs-attr">touchstart.stop</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span>弹出默认键盘<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n  @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onInput</span> = (<span class="hljs-params">value</span>) =&gt; <span class="hljs-title class_">Toast</span>(value);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onDelete</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;删除&#39;</span>);\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      onInput,\n      onDelete,\n    };\n  },\n};\n</code></pre><blockquote><p>点击键盘以外的区域时，键盘会自动收起，通过阻止元素上的 touchstart 事件冒泡可以避免键盘收起。</p></blockquote></div><div class="van-doc-card"><h3 id="dai-you-ce-lan-de-jian-pan" tabindex="-1">带右侧栏的键盘</h3><p>将 theme 属性设置为 <code>custom</code> 来展示键盘的右侧栏，常用于输入金额的场景。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;custom&quot;</span>\n  <span class="hljs-attr">extra-key</span>=<span class="hljs-string">&quot;.&quot;</span>\n  <span class="hljs-attr">close-button-text</span>=<span class="hljs-string">&quot;完成&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n  @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="shen-fen-zheng-hao-jian-pan" tabindex="-1">身份证号键盘</h3><p>通过 <code>extra-key</code> 属性可以设置左下角按键内容，比如需要输入身份证号时，可以将 <code>extra-key</code> 设置为 <code>X</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">touchstart.stop</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span>\n  弹出身份证号键盘\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">extra-key</span>=<span class="hljs-string">&quot;X&quot;</span>\n  <span class="hljs-attr">close-button-text</span>=<span class="hljs-string">&quot;完成&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n  @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jian-pan-biao-ti" tabindex="-1">键盘标题</h3><p>通过 <code>title</code> 属性可以设置键盘标题。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">touchstart.stop</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span>\n  弹出带标题的键盘\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;键盘标题&quot;</span>\n  <span class="hljs-attr">extra-key</span>=<span class="hljs-string">&quot;.&quot;</span>\n  <span class="hljs-attr">close-button-text</span>=<span class="hljs-string">&quot;完成&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n  @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="pei-zhi-duo-ge-an-jian" tabindex="-1">配置多个按键</h3><p>当 theme 为 <code>custom</code> 时，支持以数组的形式配置两个 <code>extra-key</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">touchstart.stop</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span>\n  弹出配置多个按键的键盘\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">:extra-key</span>=<span class="hljs-string">&quot;[&#39;00&#39;, &#39;.&#39;]&quot;</span>\n  <span class="hljs-attr">close-button-text</span>=<span class="hljs-string">&quot;完成&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n  @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="sui-ji-shu-zi-jian-pan" tabindex="-1">随机数字键盘</h3><p>通过 <code>random-key-order</code> 属性可以随机排序数字键盘，常用于安全等级较高的场景。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> @<span class="hljs-attr">touchstart.stop</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span> 弹出配置随机数字的键盘 <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">random-key-order</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n  @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="shuang-xiang-bang-ding" tabindex="-1">双向绑定</h3><p>可以通过 <code>v-model</code> 绑定键盘当前输入值，并通过 <code>maxlength</code> 属性来限制输入长度。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">readonly</span> <span class="hljs-attr">clickable</span> @<span class="hljs-attr">touchstart.stop</span>=<span class="hljs-string">&quot;show = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">:maxlength</span>=<span class="hljs-string">&quot;6&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      show,\n      value,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>当前输入值</td><td><em>string</em></td><td>-</td></tr><tr><td>show</td><td>是否显示键盘</td><td><em>boolean</em></td><td>-</td></tr><tr><td>title</td><td>键盘标题</td><td><em>string</em></td><td>-</td></tr><tr><td>theme</td><td>样式风格，可选值为 <code>custom</code></td><td><em>string</em></td><td><code>default</code></td></tr><tr><td>maxlength</td><td>输入值最大长度</td><td><em>number | string</em></td><td>-</td></tr><tr><td>transition</td><td>是否开启过场动画</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>z-index</td><td>键盘 z-index 层级</td><td><em>number | string</em></td><td><code>100</code></td></tr><tr><td>extra-key</td><td>底部额外按键的内容</td><td><em>string | string[]</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>close-button-text</td><td>关闭按钮文字，空则不展示</td><td><em>string</em></td><td>-</td></tr><tr><td>delete-button-text</td><td>删除按钮文字，空则展示删除图标</td><td><em>string</em></td><td>-</td></tr><tr><td>close-button-loading</td><td>是否将关闭按钮设置为加载中状态，仅在 <code>theme=&quot;custom&quot;</code> 时有效</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-delete-key</td><td>是否展示删除图标</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>blur-on-close <code>v3.0.6</code></td><td>是否在点击关闭按钮时触发 blur 事件</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>hide-on-click-outside</td><td>是否在点击外部时收起键盘</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>teleport</td><td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#teleport">to 属性</a></td><td><em>string | Element</em></td><td>-</td></tr><tr><td>safe-area-inset-bottom</td><td>是否开启<a href="#/zh-CN/advanced-usage#di-bu-an-quan-qu-gua-pei">底部安全区适配</a></td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>random-key-order</td><td>是否将通过随机顺序展示按键</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>input</td><td>点击按键时触发</td><td>key: 按键内容</td></tr><tr><td>delete</td><td>点击删除键时触发</td><td>-</td></tr><tr><td>close</td><td>点击关闭按钮时触发</td><td>-</td></tr><tr><td>blur</td><td>点击关闭按钮或非键盘区域时触发</td><td>-</td></tr><tr><td>show</td><td>键盘完全弹出时触发</td><td>-</td></tr><tr><td>hide</td><td>键盘完全收起时触发</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>delete</td><td>自定义删除按键内容</td></tr><tr><td>extra-key</td><td>自定义左下角按键内容</td></tr><tr><td>title-left</td><td>自定义标题栏左侧内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">NumberKeyboardTheme</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-number-keyboard-background-color</td><td><em>var(–van-gray-2)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-key-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-number-keyboard-key-font-size</td><td><em>28px</em></td><td>-</td></tr><tr><td>–van-number-keyboard-key-active-color</td><td><em>var(–van-gray-3)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-key-background-color</td><td><em>van(–van-white)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-delete-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-title-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-title-height</td><td><em>34px</em></td><td>-</td></tr><tr><td>–van-number-keyboard-title-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-close-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-close-color</td><td><em>var(–van-text-link-color)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-close-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-button-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-button-background-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-z-index</td><td><em>100</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="zai-zhuo-mian-duan-wu-fa-cao-zuo-zu-jian" tabindex="-1">在桌面端无法操作组件？</h3><p>参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei">桌面端适配</a>。</p></div>',20),ul=[jl],gl={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",hl,ul)))},ml={class:"van-doc-markdown-body"},vl=t('<h1>Overlay 遮罩层</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>创建一个遮罩层，用于强调特定的页面元素，并阻止用户进行其他操作。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Overlay</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Overlay</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;显示遮罩层&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-overlay</span> <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = false&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">return</span> { show };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="qian-ru-nei-rong" tabindex="-1">嵌入内容</h3><p>通过默认插槽可以在遮罩层上嵌入任意内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-overlay</span> <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = false&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;wrapper&quot;</span> @<span class="hljs-attr">click.stop</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-overlay</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.wrapper</span> {\n    <span class="hljs-attribute">display</span>: flex;\n    <span class="hljs-attribute">align-items</span>: center;\n    <span class="hljs-attribute">justify-content</span>: center;\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;\n  }\n\n  <span class="hljs-selector-class">.block</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">120px</span>;\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">120px</span>;\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>show</td><td>是否展示遮罩层</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>z-index</td><td>z-index 层级</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>duration</td><td>动画时长，单位秒，设置为 0 可以禁用动画</td><td><em>number | string</em></td><td><code>0.3</code></td></tr><tr><td>class-name</td><td>自定义类名</td><td><em>string</em></td><td>-</td></tr><tr><td>custom-style</td><td>自定义样式</td><td><em>object</em></td><td>-</td></tr><tr><td>lock-scroll</td><td>是否锁定背景滚动，锁定时蒙层里的内容也将无法滚动</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>默认插槽，用于在遮罩层上方嵌入内容</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-overlay-z-index</td><td><em>1</em></td><td>-</td></tr><tr><td>–van-overlay-background-color</td><td><em>rgba(0, 0, 0, 0.7)</em></td><td>-</td></tr></tbody></table></div>',12),bl=[vl],fl={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",ml,bl)))},yl={class:"van-doc-markdown-body"},wl=t('<h1>Pagination 分页</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>数据量过多时，采用分页的形式将数据分隔，每次只加载一个页面。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Pagination</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Pagination</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>v-model</code> 来绑定当前页码。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pagination</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span> <span class="hljs-attr">:total-items</span>=<span class="hljs-string">&quot;24&quot;</span> <span class="hljs-attr">:items-per-page</span>=<span class="hljs-string">&quot;5&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentPage = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>);\n    <span class="hljs-keyword">return</span> { currentPage };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="jian-dan-mo-shi" tabindex="-1">简单模式</h3><p>\b 将 <code>mode</code> 设置为 <code>simple</code> 来切换到简单模式，此时分页器不会展示具体的页码按钮。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pagination</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span> <span class="hljs-attr">:page-count</span>=<span class="hljs-string">&quot;12&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;simple&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="xian-shi-sheng-lue-hao" tabindex="-1">显示省略号</h3><p>设置 <code>force-ellipses</code> 后会展示省略号按钮，点击后可以快速跳转。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pagination</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span>\n  <span class="hljs-attr">:total-items</span>=<span class="hljs-string">&quot;125&quot;</span>\n  <span class="hljs-attr">:show-page-size</span>=<span class="hljs-string">&quot;3&quot;</span>\n  <span class="hljs-attr">force-ellipses</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-an-niu" tabindex="-1">自定义按钮</h3><p>通过 <code>prev-text</code>、<code>next-text</code> 等插槽来自定义分页按钮的内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pagination</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span> <span class="hljs-attr">:total-items</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">:show-page-size</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">prev-text</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;arrow-left&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">next-text</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;arrow&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">page</span>=<span class="hljs-string">&quot;{ text }&quot;</span>&gt;</span>{{ text }}<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-pagination</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>当前页码</td><td><em>number</em></td><td>-</td></tr><tr><td>mode</td><td>显示模式，可选值为 <code>simple</code></td><td><em>string</em></td><td><code>multi</code></td></tr><tr><td>prev-text</td><td>上一页按钮文字</td><td><em>string</em></td><td><code>上一页</code></td></tr><tr><td>next-text</td><td>下一页按钮文字</td><td><em>string</em></td><td><code>下一页</code></td></tr><tr><td>page-count</td><td>总页数</td><td><em>number | string</em></td><td>根据页数计算</td></tr><tr><td>total-items</td><td>总记录数</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>items-per-page</td><td>每页记录数</td><td><em>number | string</em></td><td><code>10</code></td></tr><tr><td>show-page-size</td><td>显示的页码个数</td><td><em>number | string</em></td><td><code>5</code></td></tr><tr><td>force-ellipses</td><td>是否显示省略号</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>页码改变时触发</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>描述</th><th>参数</th></tr></thead><tbody><tr><td>page</td><td>自定义页码</td><td><em>{ number: number, text: string, active: boolean }</em></td></tr><tr><td>prev-text</td><td>自定义上一页按钮文字</td><td>-</td></tr><tr><td>next-text</td><td>自定义下一页按钮文字</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">PaginationMode</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-pagination-height</td><td><em>40px</em></td><td>-</td></tr><tr><td>–van-pagination-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-pagination-item-width</td><td><em>36px</em></td><td>-</td></tr><tr><td>–van-pagination-item-default-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-pagination-item-disabled-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-pagination-item-disabled-background-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-pagination-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-pagination-desc-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-pagination-disabled-opacity</td><td><em>var(–van-disabled-opacity)</em></td><td>-</td></tr></tbody></table></div>',15),ql=[wl],xl={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",yl,ql)))},kl={class:"van-doc-markdown-body"},zl=t('<h1>PasswordInput 密码输入框</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>带网格的输入框组件，可以用于输入密码、短信验证码等场景，通常与<a href="#/zh-CN/number-keyboard">数字键盘</a>组件配合使用。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">PasswordInput</span>, <span class="hljs-title class_">NumberKeyboard</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">PasswordInput</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">NumberKeyboard</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>搭配数字键盘组件来实现密码输入功能。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 密码输入框 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-password-input</span>\n  <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:focused</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n  @<span class="hljs-attr">focus</span>=<span class="hljs-string">&quot;showKeyboard = true&quot;</span>\n/&gt;</span>\n<span class="hljs-comment">&lt;!-- 数字键盘 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;showKeyboard = false&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;123&#39;</span>);\n    <span class="hljs-keyword">const</span> showKeyboard = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n\n    <span class="hljs-keyword">return</span> {\n      value,\n      showKeyboard,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-chang-du" tabindex="-1">自定义长度</h3><p>通过 <code>length</code> 属性来设置密码长度。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-password-input</span>\n  <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:length</span>=<span class="hljs-string">&quot;4&quot;</span>\n  <span class="hljs-attr">:focused</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n  @<span class="hljs-attr">focus</span>=<span class="hljs-string">&quot;showKeyboard = true&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="ge-zi-jian-ju" tabindex="-1">格子间距</h3><p>通过 <code>gutter</code> 属性来设置格子之间的间距。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-password-input</span>\n  <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:gutter</span>=<span class="hljs-string">&quot;10&quot;</span>\n  <span class="hljs-attr">:focused</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n  @<span class="hljs-attr">focus</span>=<span class="hljs-string">&quot;showKeyboard = true&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="ming-wen-zhan-shi" tabindex="-1">明文展示</h3><p>将 <code>mask</code> 设置为 <code>false</code> 可以明文展示输入的内容，适用于短信验证码等场景。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-password-input</span>\n  <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:mask</span>=<span class="hljs-string">&quot;false&quot;</span>\n  <span class="hljs-attr">:focused</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n  @<span class="hljs-attr">focus</span>=<span class="hljs-string">&quot;showKeyboard = true&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="ti-shi-xin-xi" tabindex="-1">提示信息</h3><p>通过 <code>info</code> 属性设置提示信息，通过 <code>error-info</code> 属性设置错误提示，例如当输入六位时提示密码错误。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-password-input</span>\n  <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">info</span>=<span class="hljs-string">&quot;密码为 6 位数字&quot;</span>\n  <span class="hljs-attr">:error-info</span>=<span class="hljs-string">&quot;errorInfo&quot;</span>\n  <span class="hljs-attr">:focused</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n  @<span class="hljs-attr">focus</span>=<span class="hljs-string">&quot;showKeyboard = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;showKeyboard = false&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref, watch } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;123&#39;</span>);\n    <span class="hljs-keyword">const</span> errorInfo = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> showKeyboard = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n\n    <span class="hljs-title function_">watch</span>(value, <span class="hljs-function">(<span class="hljs-params">newVal</span>) =&gt;</span> {\n      <span class="hljs-keyword">if</span> (newVal.<span class="hljs-property">length</span> === <span class="hljs-number">6</span> &amp;&amp; newVal !== <span class="hljs-string">&#39;123456&#39;</span>) {\n        errorInfo.<span class="hljs-property">value</span> = <span class="hljs-string">&#39;密码错误&#39;</span>;\n      } <span class="hljs-keyword">else</span> {\n        errorInfo.<span class="hljs-property">value</span> = <span class="hljs-string">&#39;&#39;</span>;\n      }\n    });\n\n    <span class="hljs-keyword">return</span> {\n      value,\n      errorInfo,\n      showKeyboard,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>value</td><td>密码值</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>info</td><td>输入框下方文字提示</td><td><em>string</em></td><td>-</td></tr><tr><td>error-info</td><td>输入框下方错误提示</td><td><em>string</em></td><td>-</td></tr><tr><td>length</td><td>密码最大长度</td><td><em>number | string</em></td><td><code>6</code></td></tr><tr><td>gutter</td><td>输入框格子之间的间距，如 <code>20px</code> <code>2em</code>，默认单位为<code>px</code></td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>mask</td><td>是否隐藏密码内容</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>focused</td><td>是否已聚焦，聚焦时会显示光标</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>focus</td><td>输入框聚焦时触发</td><td>-</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-password-input-height</td><td><em>50px</em></td><td>-</td></tr><tr><td>–van-password-input-margin</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-password-input-font-size</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-password-input-border-radius</td><td><em>6px</em></td><td>-</td></tr><tr><td>–van-password-input-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-password-input-info-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-password-input-info-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-password-input-error-info-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-password-input-dot-size</td><td><em>10px</em></td><td>-</td></tr><tr><td>–van-password-input-dot-color</td><td><em>var(–van-black)</em></td><td>-</td></tr><tr><td>–van-password-input-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-password-input-cursor-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-password-input-cursor-width</td><td><em>1px</em></td><td>-</td></tr><tr><td>–van-password-input-cursor-height</td><td><em>40%</em></td><td>-</td></tr><tr><td>–van-password-input-cursor-animation-duration</td><td><em>1s</em></td><td>-</td></tr></tbody></table></div>',14),_l=[zl],Cl={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",kl,_l)))},Sl={class:"van-doc-markdown-body"},Tl=t('<h1>Picker 选择器</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>提供多个选项集合供用户选择，支持单列选择和多列级联，通常与<a href="#/zh-CN/popup">弹出层</a>组件配合使用。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Picker</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Picker</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><h4 id="xuan-xiang-pei-zhi" tabindex="-1">选项配置</h4><p>Picker 组件通过 <code>columns</code> 属性配置选项数据，<code>columns</code> 是一个包含字符串或对象的数组。</p><h4 id="ding-bu-lan" tabindex="-1">顶部栏</h4><p>顶部栏包含标题、确认按钮和取消按钮，点击确认按钮触发 <code>confirm</code> 事件，点击取消按钮触发 <code>cancel</code> 事件。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span>\n  <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span>\n  @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span>\n  @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;onCancel&quot;</span>\n  @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> columns = [<span class="hljs-string">&#39;杭州&#39;</span>, <span class="hljs-string">&#39;宁波&#39;</span>, <span class="hljs-string">&#39;温州&#39;</span>, <span class="hljs-string">&#39;绍兴&#39;</span>, <span class="hljs-string">&#39;湖州&#39;</span>, <span class="hljs-string">&#39;嘉兴&#39;</span>, <span class="hljs-string">&#39;金华&#39;</span>];\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">value, index</span>) =&gt; {\n      <span class="hljs-title class_">Toast</span>(<span class="hljs-string">`当前值: <span class="hljs-subst">${value}</span>, 当前索引: <span class="hljs-subst">${index}</span>`</span>);\n    };\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">value, index</span>) =&gt; {\n      <span class="hljs-title class_">Toast</span>(<span class="hljs-string">`当前值: <span class="hljs-subst">${value}</span>, 当前索引: <span class="hljs-subst">${index}</span>`</span>);\n    };\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onCancel</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;取消&#39;</span>);\n\n    <span class="hljs-keyword">return</span> {\n      columns,\n      onChange,\n      onCancel,\n      onConfirm,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="mo-ren-xuan-zhong-xiang" tabindex="-1">默认选中项</h3><p>单列选择时，可以通过 <code>default-index</code> 属性设置初始选中项的索引。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> <span class="hljs-attr">:default-index</span>=<span class="hljs-string">&quot;2&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="duo-lie-xuan-ze" tabindex="-1">多列选择</h3><p><code>columns</code> 属性可以通过对象数组的形式配置多列选择，对象中可以配置选项数据、初始选中项等，详细格式见<a href="#/zh-CN/picker#column-shu-ju-jie-gou">下方表格</a>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> columns = [\n      <span class="hljs-comment">// 第一列</span>\n      {\n        <span class="hljs-attr">values</span>: [<span class="hljs-string">&#39;周一&#39;</span>, <span class="hljs-string">&#39;周二&#39;</span>, <span class="hljs-string">&#39;周三&#39;</span>, <span class="hljs-string">&#39;周四&#39;</span>, <span class="hljs-string">&#39;周五&#39;</span>],\n        <span class="hljs-attr">defaultIndex</span>: <span class="hljs-number">2</span>,\n      },\n      <span class="hljs-comment">// 第二列</span>\n      {\n        <span class="hljs-attr">values</span>: [<span class="hljs-string">&#39;上午&#39;</span>, <span class="hljs-string">&#39;下午&#39;</span>, <span class="hljs-string">&#39;晚上&#39;</span>],\n        <span class="hljs-attr">defaultIndex</span>: <span class="hljs-number">1</span>,\n      },\n    ];\n\n    <span class="hljs-keyword">return</span> { columns };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="ji-lian-xuan-ze" tabindex="-1">级联选择</h3><p>使用 <code>columns</code> 的 <code>children</code> 字段可以实现选项级联的效果。如果级联层级较多，推荐使用 <a href="#/zh-CN/cascader">Cascader 级联选项组件</a>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> columns = [\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;浙江&#39;</span>,\n        <span class="hljs-attr">children</span>: [\n          {\n            <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;杭州&#39;</span>,\n            <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;西湖区&#39;</span> }, { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;余杭区&#39;</span> }],\n          },\n          {\n            <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;温州&#39;</span>,\n            <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;鹿城区&#39;</span> }, { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;瓯海区&#39;</span> }],\n          },\n        ],\n      },\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;福建&#39;</span>,\n        <span class="hljs-attr">children</span>: [\n          {\n            <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;福州&#39;</span>,\n            <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;鼓楼区&#39;</span> }, { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;台江区&#39;</span> }],\n          },\n          {\n            <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;厦门&#39;</span>,\n            <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;思明区&#39;</span> }, { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;海沧区&#39;</span> }],\n          },\n        ],\n      },\n    ];\n\n    <span class="hljs-keyword">return</span> { columns };\n  },\n};\n</code></pre><blockquote><p>级联选择的数据嵌套深度需要保持一致，如果部分选项没有子选项，可以使用空字符串进行占位。</p></blockquote></div><div class="van-doc-card"><h3 id="jin-yong-xuan-xiang" tabindex="-1">禁用选项</h3><p>选项可以为对象结构，通过设置 <code>disabled</code> 来禁用该选项。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> columns = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;杭州&#39;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;宁波&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;温州&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> { columns };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="dong-tai-she-zhi-xuan-xiang" tabindex="-1">动态设置选项</h3><p>通过 Picker 上的实例方法可以更灵活地控制选择器，比如使用 <code>setColumnValues</code> 方法实现多列联动。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;picker&quot;</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> picker = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>);\n\n    <span class="hljs-keyword">const</span> cities = {\n      浙江: [<span class="hljs-string">&#39;杭州&#39;</span>, <span class="hljs-string">&#39;宁波&#39;</span>, <span class="hljs-string">&#39;温州&#39;</span>, <span class="hljs-string">&#39;嘉兴&#39;</span>, <span class="hljs-string">&#39;湖州&#39;</span>],\n      福建: [<span class="hljs-string">&#39;福州&#39;</span>, <span class="hljs-string">&#39;厦门&#39;</span>, <span class="hljs-string">&#39;莆田&#39;</span>, <span class="hljs-string">&#39;三明&#39;</span>, <span class="hljs-string">&#39;泉州&#39;</span>],\n    };\n    <span class="hljs-keyword">const</span> columns = [\n      { <span class="hljs-attr">values</span>: <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(cities) },\n      { <span class="hljs-attr">values</span>: cities[<span class="hljs-string">&#39;浙江&#39;</span>] },\n    ];\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">values</span>) =&gt; {\n      picker.<span class="hljs-property">value</span>.<span class="hljs-title function_">setColumnValues</span>(<span class="hljs-number">1</span>, cities[values[<span class="hljs-number">0</span>]]);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      picker,\n      columns,\n      onChange,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="jia-zai-zhuang-tai" tabindex="-1">加载状态</h3><p>若选择器数据是异步获取的，可以通过 <code>loading</code> 属性显示加载提示。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> <span class="hljs-attr">:loading</span>=<span class="hljs-string">&quot;loading&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> columns = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n\n    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n      columns.<span class="hljs-property">value</span> = [<span class="hljs-string">&#39;选项&#39;</span>];\n      loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    }, <span class="hljs-number">1000</span>);\n\n    <span class="hljs-keyword">return</span> { columns, loading };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="da-pei-dan-chu-ceng-shi-yong" tabindex="-1">搭配弹出层使用</h3><p>在实际场景中，Picker 通常作为用于辅助表单填写，可以搭配 Popup 和 Field 实现该效果。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;城市&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;选择城市&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showPicker = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPicker&quot;</span> <span class="hljs-attr">round</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span>\n    <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span>\n    @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;showPicker = false&quot;</span>\n    @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> columns = [<span class="hljs-string">&#39;杭州&#39;</span>, <span class="hljs-string">&#39;宁波&#39;</span>, <span class="hljs-string">&#39;温州&#39;</span>, <span class="hljs-string">&#39;绍兴&#39;</span>, <span class="hljs-string">&#39;湖州&#39;</span>, <span class="hljs-string">&#39;嘉兴&#39;</span>, <span class="hljs-string">&#39;金华&#39;</span>];\n    <span class="hljs-keyword">const</span> result = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> showPicker = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">value</span>) =&gt; {\n      result.<span class="hljs-property">value</span> = value;\n      showPicker.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      result,\n      columns,\n      onConfirm,\n      showPicker,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-columns-de-jie-gou" tabindex="-1">自定义 Columns 的结构</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span>\n  <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;标题&quot;</span>\n  <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span>\n  <span class="hljs-attr">:columns-field-names</span>=<span class="hljs-string">&quot;customFieldName&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> columns = [\n      {\n        <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;浙江&#39;</span>,\n        <span class="hljs-attr">cities</span>: [\n          {\n            <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;杭州&#39;</span>,\n            <span class="hljs-attr">cities</span>: [{ <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;西湖区&#39;</span> }, { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;余杭区&#39;</span> }],\n          },\n          {\n            <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;温州&#39;</span>,\n            <span class="hljs-attr">cities</span>: [{ <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;鹿城区&#39;</span> }, { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;瓯海区&#39;</span> }],\n          },\n        ],\n      },\n      {\n        <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;福建&#39;</span>,\n        <span class="hljs-attr">cities</span>: [\n          {\n            <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;福州&#39;</span>,\n            <span class="hljs-attr">cities</span>: [{ <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;鼓楼区&#39;</span> }, { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;台江区&#39;</span> }],\n          },\n          {\n            <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;厦门&#39;</span>,\n            <span class="hljs-attr">cities</span>: [{ <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;思明区&#39;</span> }, { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;海沧区&#39;</span> }],\n          },\n        ],\n      },\n    ];\n\n    <span class="hljs-keyword">const</span> customFieldName = {\n      <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;cityName&#39;</span>,\n      <span class="hljs-attr">children</span>: <span class="hljs-string">&#39;cities&#39;</span>,\n    };\n\n    <span class="hljs-keyword">return</span> {\n      columns,\n      customFieldName,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>columns</td><td>对象数组，配置每一列显示的数据</td><td><em>Column[]</em></td><td><code>[]</code></td></tr><tr><td>columns-field-names</td><td>自定义 <code>columns</code> 结构中的字段</td><td><em>object</em></td><td><code>{ text: &#39;text&#39;, values: &#39;values&#39;, children: &#39;children&#39; }</code></td></tr><tr><td>title</td><td>顶部栏标题</td><td><em>string</em></td><td>-</td></tr><tr><td>confirm-button-text</td><td>确认按钮文字</td><td><em>string</em></td><td><code>确认</code></td></tr><tr><td>cancel-button-text</td><td>取消按钮文字</td><td><em>string</em></td><td><code>取消</code></td></tr><tr><td>toolbar-position</td><td>顶部栏位置，可选值为 <code>bottom</code></td><td><em>string</em></td><td><code>top</code></td></tr><tr><td>loading</td><td>是否显示加载状态</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-toolbar</td><td>是否显示顶部栏</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>allow-html</td><td>是否允许选项内容中渲染 HTML</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>default-index</td><td>单列选择时，默认选中项的索引</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>item-height</td><td>选项高度，支持 <code>px</code> <code>vw</code> <code>vh</code> <code>rem</code> 单位，默认 <code>px</code></td><td><em>number | string</em></td><td><code>44</code></td></tr><tr><td>visible-item-count</td><td>可见的选项个数</td><td><em>number | string</em></td><td><code>6</code></td></tr><tr><td>swipe-duration</td><td>快速滑动时惯性滚动的时长，单位 <code>ms</code></td><td><em>number | string</em></td><td><code>1000</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><p>当选择器有多列时，事件回调参数会返回数组。</p><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>confirm</td><td>点击完成按钮时触发</td><td>单列：选中值，选中值对应的索引<br>多列：所有列选中值，所有列选中值对应的索引</td></tr><tr><td>cancel</td><td>点击取消按钮时触发</td><td>单列：选中值，选中值对应的索引<br>多列：所有列选中值，所有列选中值对应的索引</td></tr><tr><td>change</td><td>选项改变时触发</td><td>单列：选中值，选中值对应的索引<br>多列：所有列选中值，当前列对应的索引</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>toolbar <code>v3.1.2</code></td><td>自定义整个顶部栏的内容</td><td>-</td></tr><tr><td>title</td><td>自定义标题内容</td><td>-</td></tr><tr><td>confirm</td><td>自定义确认按钮内容</td><td>-</td></tr><tr><td>cancel</td><td>自定义取消按钮内容</td><td>-</td></tr><tr><td>option</td><td>自定义选项内容</td><td><em>option: string | object</em></td></tr><tr><td>columns-top</td><td>自定义选项上方内容</td><td>-</td></tr><tr><td>columns-bottom</td><td>自定义选项下方内容</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="column-shu-ju-jie-gou" tabindex="-1">Column 数据结构</h3><p>当传入多列数据时，<code>columns</code> 为一个对象数组，数组中的每一个对象配置每一列，每一列有以下 <code>key</code>:</p><table><thead><tr><th>键名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>values</td><td>列中对应的备选值</td><td><em>Array&lt;string | number&gt;</em></td></tr><tr><td>defaultIndex</td><td>初始选中项的索引，默认为 0</td><td><em>number</em></td></tr><tr><td>className</td><td>为对应列添加额外的类名</td><td><em>string | Array | object</em></td></tr><tr><td>children</td><td>级联选项</td><td><em>Column</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><p>通过 ref 可以获取到 Picker 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>getValues</td><td>获取所有列选中的值</td><td>-</td><td>values</td></tr><tr><td>setValues</td><td>设置所有列选中的值</td><td>values</td><td>-</td></tr><tr><td>getIndexes</td><td>获取所有列选中值对应的索引</td><td>-</td><td>indexes</td></tr><tr><td>setIndexes</td><td>设置所有列选中值对应的索引</td><td>indexes</td><td>-</td></tr><tr><td>getColumnValue</td><td>获取对应列选中的值</td><td>columnIndex</td><td>value</td></tr><tr><td>setColumnValue</td><td>设置对应列选中的值</td><td>columnIndex, value</td><td>-</td></tr><tr><td>getColumnIndex</td><td>获取对应列选中项的索引</td><td>columnIndex</td><td>optionIndex</td></tr><tr><td>setColumnIndex</td><td>设置对应列选中项的索引</td><td>columnIndex, optionIndex</td><td>-</td></tr><tr><td>getColumnValues</td><td>获取对应列中所有选项</td><td>columnIndex</td><td>values</td></tr><tr><td>setColumnValues</td><td>设置对应列中所有选项</td><td>columnIndex, values</td><td>-</td></tr><tr><td>confirm</td><td>停止惯性滚动并触发 confirm 事件</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">PickerColumn</span>,\n  <span class="hljs-title class_">PickerOption</span>,\n  <span class="hljs-title class_">PickerInstance</span>,\n  <span class="hljs-title class_">PickerFieldNames</span>,\n  <span class="hljs-title class_">PickerObjectColumn</span>,\n  <span class="hljs-title class_">PickerObjectOption</span>,\n  <span class="hljs-title class_">PickerToolbarPosition</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>PickerInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">PickerInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> pickerRef = ref&lt;<span class="hljs-title class_">PickerInstance</span>&gt;();\n\npickerRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">confirm</span>();\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-picker-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-picker-toolbar-height</td><td><em>44px</em></td><td>-</td></tr><tr><td>–van-picker-title-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-picker-title-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-picker-action-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-picker-action-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-picker-confirm-action-color</td><td><em>var(–van-text-link-color)</em></td><td>-</td></tr><tr><td>–van-picker-cancel-action-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-picker-option-padding</td><td><em>0 var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-picker-option-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-picker-option-text-color</td><td><em>var(–van-black)</em></td><td>-</td></tr><tr><td>–van-picker-option-disabled-opacity</td><td><em>0.3</em></td><td>-</td></tr><tr><td>–van-picker-loading-icon-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-picker-loading-mask-color</td><td><em>rgba(255, 255, 255, 0.9)</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="zai-zhuo-mian-duan-wu-fa-cao-zuo-zu-jian" tabindex="-1">在桌面端无法操作组件？</h3><p>参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei">桌面端适配</a>。</p></div>',24),Il=[Tl],Pl={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Sl,Il)))},Dl={class:"van-doc-markdown-body"},Al=t('<h1>Popover 气泡弹出框</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>弹出式的气泡菜单。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Popover</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Popover</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>当 Popover 弹出时，会基于 <code>reference</code> 插槽的内容进行定位。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popover</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPopover&quot;</span> <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span> @<span class="hljs-attr">select</span>=<span class="hljs-string">&quot;onSelect&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">reference</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>浅色风格<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popover</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showPopover = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-comment">// 通过 actions 属性来定义菜单选项</span>\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;选项一&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;选项二&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;选项三&#39;</span> },\n    ];\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSelect</span> = (<span class="hljs-params">action</span>) =&gt; <span class="hljs-title class_">Toast</span>(action.<span class="hljs-property">text</span>);\n\n    <span class="hljs-keyword">return</span> {\n      actions,\n      onSelect,\n      showPopover,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="shen-se-feng-ge" tabindex="-1">深色风格</h3><p>Popover 支持浅色和深色两种风格，默认为浅色风格，将 <code>theme</code> 属性设置为 <code>dark</code> 可切换为深色风格。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popover</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPopover&quot;</span> <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;dark&quot;</span> <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">reference</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>深色风格<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popover</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showPopover = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;选项一&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;选项二&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;选项三&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      actions,\n      showPopover,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="dan-chu-wei-zhi" tabindex="-1">弹出位置</h3><p>通过 <code>placement</code> 属性来控制气泡的弹出位置。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popover</span> <span class="hljs-attr">placement</span>=<span class="hljs-string">&quot;top&quot;</span> /&gt;</span>\n</code></pre><p><code>placement</code> 支持以下值：</p><pre><code class="language-bash">top           <span class="hljs-comment"># 顶部中间位置</span>\ntop-start     <span class="hljs-comment"># 顶部左侧位置</span>\ntop-end       <span class="hljs-comment"># 顶部右侧位置</span>\nleft          <span class="hljs-comment"># 左侧中间位置</span>\nleft-start    <span class="hljs-comment"># 左侧上方位置</span>\nleft-end      <span class="hljs-comment"># 左侧下方位置</span>\nright         <span class="hljs-comment"># 右侧中间位置</span>\nright-start   <span class="hljs-comment"># 右侧上方位置</span>\nright-end     <span class="hljs-comment"># 右侧下方位置</span>\nbottom        <span class="hljs-comment"># 底部中间位置</span>\nbottom-start  <span class="hljs-comment"># 底部左侧位置</span>\nbottom-end    <span class="hljs-comment"># 底部右侧位置</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zhan-shi-tu-biao" tabindex="-1">展示图标</h3><p>在 <code>actions</code> 数组中，可以通过 <code>icon</code> 字段来定义选项的图标，支持传入<a href="#/zh-CN/icon">图标名称</a>或图片链接。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popover</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPopover&quot;</span> <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">reference</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>展示图标<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popover</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showPopover = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;选项一&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;add-o&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;选项二&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;music-o&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;选项三&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;more-o&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      actions,\n      showPopover,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-xuan-xiang" tabindex="-1">禁用选项</h3><p>在 <code>actions</code> 数组中，可以通过 <code>disabled</code> 字段来禁用某个选项。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popover</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPopover&quot;</span> <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">reference</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>禁用选项<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popover</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showPopover = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;选项一&#39;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;选项二&#39;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;选项三&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      actions,\n      showPopover,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-nei-rong" tabindex="-1">自定义内容</h3><p>通过默认插槽，可以在 Popover 内部放置任意内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popover</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPopover&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span>\n    <span class="hljs-attr">square</span>\n    <span class="hljs-attr">clickable</span>\n    <span class="hljs-attr">:border</span>=<span class="hljs-string">&quot;false&quot;</span>\n    <span class="hljs-attr">column-num</span>=<span class="hljs-string">&quot;3&quot;</span>\n    <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 240px;&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span>\n      <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;i in 6&quot;</span>\n      <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;i&quot;</span>\n      <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;选项&quot;</span>\n      <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span>\n      @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showPopover = false&quot;</span>\n    /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">reference</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>自定义内容<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popover</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showPopover = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">return</span> { showPopover };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model:show</td><td>是否展示气泡弹出层</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>actions</td><td>选项列表</td><td><em>PopoverAction[]</em></td><td><code>[]</code></td></tr><tr><td>placement</td><td>弹出位置</td><td><em>PopoverPlacement</em></td><td><code>bottom</code></td></tr><tr><td>theme</td><td>主题风格，可选值为 <code>dark</code></td><td><em>PopoverTheme</em></td><td><code>light</code></td></tr><tr><td>trigger</td><td>触发方式，可选值为 <code>manual</code></td><td><em>PopoverTrigger</em></td><td><code>click</code></td></tr><tr><td>duration</td><td>动画时长，单位秒，设置为 0 可以禁用动画</td><td><em>number | string</em></td><td><code>0.3</code></td></tr><tr><td>offset</td><td>出现位置的偏移量</td><td><em>[number, number]</em></td><td><code>[0, 8]</code></td></tr><tr><td>overlay</td><td>是否显示遮罩层</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>overlay-class <code>v3.0.10</code></td><td>自定义遮罩层类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>overlay-style <code>v3.0.10</code></td><td>自定义遮罩层样式</td><td><em>object</em></td><td>-</td></tr><tr><td>show-arrow <code>v3.2.2</code></td><td>是否展示小箭头</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-action</td><td>是否在点击选项后关闭</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-outside</td><td>是否在点击外部元素后关闭菜单</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-overlay <code>v3.0.10</code></td><td>是否在点击遮罩层后关闭菜单</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>teleport</td><td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#teleport">to 属性</a></td><td><em>string | Element</em></td><td><code>body</code></td></tr><tr><td>icon-prefix <code>v3.0.17</code></td><td>图标类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props">class-prefix 属性</a></td><td><em>string</em></td><td><code>van-icon</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="popoveraction-shu-ju-jie-gou" tabindex="-1">PopoverAction 数据结构</h3><p><code>actions</code> 属性是一个由对象构成的数组，数组中的每个对象配置一列，对象可以包含以下值：</p><table><thead><tr><th>键名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>text</td><td>选项文字</td><td><em>string</em></td></tr><tr><td>icon</td><td>文字左侧的图标，支持传入<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td></tr><tr><td>color</td><td>选项文字颜色</td><td><em>string</em></td></tr><tr><td>disabled</td><td>是否为禁用状态</td><td><em>boolean</em></td></tr><tr><td>className</td><td>为对应选项添加额外的类名</td><td><em>string | Array | object</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>select</td><td>点击选项时触发</td><td><em>action: Action, index: number</em></td></tr><tr><td>open</td><td>打开菜单时触发</td><td>-</td></tr><tr><td>close</td><td>关闭菜单时触发</td><td>-</td></tr><tr><td>opened</td><td>打开菜单且动画结束后触发</td><td>-</td></tr><tr><td>closed</td><td>关闭菜单且动画结束后触发</td><td>-</td></tr><tr><td>click-overlay</td><td>点击遮罩层时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>自定义菜单内容</td></tr><tr><td>reference</td><td>触发 Popover 显示的元素内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">PopoverTheme</span>,\n  <span class="hljs-title class_">PopoverAction</span>,\n  <span class="hljs-title class_">PopoverTrigger</span>,\n  <span class="hljs-title class_">PopoverPlacement</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-popover-arrow-size</td><td><em>6px</em></td><td>-</td></tr><tr><td>–van-popover-border-radius</td><td><em>var(–van-border-radius-lg)</em></td><td>-</td></tr><tr><td>–van-popover-action-width</td><td><em>128px</em></td><td>-</td></tr><tr><td>–van-popover-action-height</td><td><em>44px</em></td><td>-</td></tr><tr><td>–van-popover-action-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-popover-action-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-popover-action-icon-size</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-popover-light-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-popover-light-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-popover-light-action-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-popover-dark-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-popover-dark-background-color</td><td><em>#4a4a4a</em></td><td>-</td></tr><tr><td>–van-popover-dark-action-disabled-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="popover-de-dian-ji-shi-jian-wu-fa-zheng-que-chu-fa" tabindex="-1">Popover 的点击事件无法正确触发？</h3><p>这种情况通常是由于项目中引入了 <code>fastclick</code> 库导致的。建议移除 <code>fastclick</code>，或者配置 <code>fastclick</code> 的 <a href="https://github.com/ftlabs/fastclick#advanced">ignore 规则</a>。</p></div>',20),Nl=[Al],El={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Dl,Nl)))},Rl={class:"van-doc-markdown-body"},Ul=t('<h1>Popup 弹出层</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>弹出层容器，用于展示弹窗、信息提示等内容，支持多个弹出层叠加展示。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Popup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Popup</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>v-model:show</code> 控制弹出层是否展示。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">is-link</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showPopup&quot;</span>&gt;</span>展示弹出层<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">showPopup</span> = (<span class="hljs-params"></span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;\n    };\n    <span class="hljs-keyword">return</span> {\n      show,\n      showPopup,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="dan-chu-wei-zhi" tabindex="-1">弹出位置</h3><p>通过 <code>position</code> 属性设置弹出位置，默认居中弹出，可以设置为 <code>top</code>、<code>bottom</code>、<code>left</code>、<code>right</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;top&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;30%&#39; }&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="guan-bi-tu-biao" tabindex="-1">关闭图标</h3><p>设置 <code>closeable</code> 属性后，会在弹出层的右上角显示关闭图标，并且可以通过 <code>close-icon</code> 属性自定义图标，使用 <code>close-icon-position</code> 属性可以自定义图标位置。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">closeable</span>\n  <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>\n  <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;30%&#39; }&quot;</span>\n/&gt;</span>\n<span class="hljs-comment">&lt;!-- 自定义图标 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">closeable</span>\n  <span class="hljs-attr">close-icon</span>=<span class="hljs-string">&quot;close&quot;</span>\n  <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>\n  <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;30%&#39; }&quot;</span>\n/&gt;</span>\n<span class="hljs-comment">&lt;!-- 图标位置 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">closeable</span>\n  <span class="hljs-attr">close-icon-position</span>=<span class="hljs-string">&quot;top-left&quot;</span>\n  <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>\n  <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;30%&#39; }&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="yuan-jiao-dan-chuang" tabindex="-1">圆角弹窗</h3><p>设置 <code>round</code> 属性后，弹窗会根据弹出位置添加不同的圆角样式。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">round</span>\n  <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>\n  <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;30%&#39; }&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zhi-ding-gua-zai-wei-zhi" tabindex="-1">指定挂载位置</h3><p>弹出层默认挂载到组件标签所在位置，可以通过 <code>teleport</code> 属性指定挂载位置。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 挂载到 body 节点下 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">teleport</span>=<span class="hljs-string">&quot;body&quot;</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 挂载到 #app 节点下 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">teleport</span>=<span class="hljs-string">&quot;#app&quot;</span> /&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model:show</td><td>是否显示弹出层</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>overlay</td><td>是否显示遮罩层</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>position</td><td>弹出位置，可选值为 <code>top</code> <code>bottom</code> <code>right</code> <code>left</code></td><td><em>string</em></td><td><code>center</code></td></tr><tr><td>overlay-class</td><td>自定义遮罩层类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>overlay-style</td><td>自定义遮罩层样式</td><td><em>object</em></td><td>-</td></tr><tr><td>duration</td><td>动画时长，单位秒，设置为 0 可以禁用动画</td><td><em>number | string</em></td><td><code>0.3</code></td></tr><tr><td>round</td><td>是否显示圆角</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>lock-scroll</td><td>是否锁定背景滚动</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>lazy-render</td><td>是否在显示弹层时才渲染节点</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-popstate</td><td>是否在页面回退时自动关闭</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>close-on-click-overlay</td><td>是否在点击遮罩层后关闭</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>closeable</td><td>是否显示关闭图标</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>close-icon</td><td>关闭<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td><code>cross</code></td></tr><tr><td>close-icon-position</td><td>关闭图标位置，可选值为 <code>top-left</code><br><code>bottom-left</code> <code>bottom-right</code></td><td><em>string</em></td><td><code>top-right</code></td></tr><tr><td>before-close <code>v3.1.4</code></td><td>关闭前的回调函数，返回 <code>false</code> 可阻止关闭，支持返回 Promise</td><td><em>(action: string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr><tr><td>icon-prefix <code>v3.0.18</code></td><td>图标类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props">class-prefix 属性</a></td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>transition</td><td>动画类名，等价于 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#transition">transition</a> 的 <code>name</code> 属性</td><td><em>string</em></td><td>-</td></tr><tr><td>transition-appear</td><td>是否在初始渲染时启用过渡动画</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>teleport</td><td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#teleport">to 属性</a></td><td><em>string | Element</em></td><td>-</td></tr><tr><td>safe-area-inset-bottom</td><td>是否开启<a href="#/zh-CN/advanced-usage#di-bu-an-quan-qu-gua-pei">底部安全区适配</a></td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击弹出层时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-overlay</td><td>点击遮罩层时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-close-icon</td><td>点击关闭图标时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>open</td><td>打开弹出层时触发</td><td>-</td></tr><tr><td>close</td><td>关闭弹出层时触发</td><td>-</td></tr><tr><td>opened</td><td>打开弹出层且动画结束后触发</td><td>-</td></tr><tr><td>closed</td><td>关闭弹出层且动画结束后触发</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>弹窗内容</td></tr><tr><td>overlay-content <code>v3.0.18</code></td><td>遮罩层的内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">PopupPosition</span>, <span class="hljs-title class_">PopupCloseIconPosition</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-popup-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-popup-transition</td><td><em>transform var(–van-animation-duration-base)</em></td><td>-</td></tr><tr><td>–van-popup-round-border-radius</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-popup-close-icon-size</td><td><em>22px</em></td><td>-</td></tr><tr><td>–van-popup-close-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-popup-close-icon-active-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-popup-close-icon-margin</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-popup-close-icon-z-index</td><td><em>1</em></td><td>-</td></tr></tbody></table></div>',16),Bl=[Ul],Vl={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Rl,Bl)))},Ll={class:"van-doc-markdown-body"},Fl=t('<h1>Progress 进度条</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于展示操作的当前进度。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Progress</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Progress</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>进度条默认为蓝色，使用 <code>percentage</code> 属性来设置当前进度。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-progress</span> <span class="hljs-attr">:percentage</span>=<span class="hljs-string">&quot;50&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="xian-tiao-cu-xi" tabindex="-1">线条粗细</h3><p>通过 <code>stroke-width</code> 可以设置进度条的粗细。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-progress</span> <span class="hljs-attr">:percentage</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">&quot;8&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zhi-hui" tabindex="-1">置灰</h3><p>设置 <code>inactive</code> 属性后进度条将置灰。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-progress</span> <span class="hljs-attr">inactive</span> <span class="hljs-attr">:percentage</span>=<span class="hljs-string">&quot;50&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="yang-shi-ding-zhi" tabindex="-1">样式定制</h3><p>可以使用 <code>pivot-text</code> 属性自定义文字，<code>color</code> 属性自定义进度条颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-progress</span> <span class="hljs-attr">pivot-text</span>=<span class="hljs-string">&quot;橙色&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#f2826a&quot;</span> <span class="hljs-attr">:percentage</span>=<span class="hljs-string">&quot;25&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-progress</span> <span class="hljs-attr">pivot-text</span>=<span class="hljs-string">&quot;红色&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> <span class="hljs-attr">:percentage</span>=<span class="hljs-string">&quot;50&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-progress</span>\n  <span class="hljs-attr">:percentage</span>=<span class="hljs-string">&quot;75&quot;</span>\n  <span class="hljs-attr">pivot-text</span>=<span class="hljs-string">&quot;紫色&quot;</span>\n  <span class="hljs-attr">pivot-color</span>=<span class="hljs-string">&quot;#7232dd&quot;</span>\n  <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;linear-gradient(to right, #be99ff, #7232dd)&quot;</span>\n/&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>percentage</td><td>进度百分比</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>stroke-width</td><td>进度条粗细，默认单位为<code>px</code></td><td><em>number | string</em></td><td><code>4px</code></td></tr><tr><td>color</td><td>进度条颜色</td><td><em>string</em></td><td><code>#1989fa</code></td></tr><tr><td>track-color</td><td>轨道颜色</td><td><em>string</em></td><td><code>#e5e5e5</code></td></tr><tr><td>pivot-text</td><td>进度文字内容</td><td><em>string</em></td><td>百分比</td></tr><tr><td>pivot-color</td><td>进度文字背景色</td><td><em>string</em></td><td>同进度条颜色</td></tr><tr><td>text-color</td><td>进度文字颜色</td><td><em>string</em></td><td><code>white</code></td></tr><tr><td>inactive</td><td>是否置灰</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-pivot</td><td>是否显示进度文字</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ProgressInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>ProgressInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ProgressInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> progressRef = ref&lt;<span class="hljs-title class_">ProgressInstance</span>&gt;();\n\nprogressRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">resize</span>();\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-progress-height</td><td><em>4px</em></td><td>-</td></tr><tr><td>–van-progress-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-progress-background-color</td><td><em>var(–van-gray-3)</em></td><td>-</td></tr><tr><td>–van-progress-pivot-padding</td><td><em>0 5px</em></td><td>-</td></tr><tr><td>–van-progress-pivot-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-progress-pivot-font-size</td><td><em>var(–van-font-size-xs)</em></td><td>-</td></tr><tr><td>–van-progress-pivot-line-height</td><td><em>1.6</em></td><td>-</td></tr><tr><td>–van-progress-pivot-background-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr></tbody></table></div>',13),Wl=[Fl],Ml={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ll,Wl)))},Ol={class:"van-doc-markdown-body"},Gl=t('<h1>PullRefresh 下拉刷新</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于提供下拉刷新的交互操作。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">PullRefresh</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">PullRefresh</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>下拉刷新时会触发 <code>refresh</code> 事件，在事件的回调函数中可以进行同步或异步操作，操作完成后将 <code>v-model</code> 设置为 <code>false</code>，表示加载完成。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pull-refresh</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;loading&quot;</span> @<span class="hljs-attr">refresh</span>=<span class="hljs-string">&quot;onRefresh&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>刷新次数: {{ count }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-pull-refresh</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> count = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onRefresh</span> = (<span class="hljs-params"></span>) =&gt; {\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;刷新成功&#39;</span>);\n        loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n        count.<span class="hljs-property">value</span>++;\n      }, <span class="hljs-number">1000</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      count,\n      loading,\n      onRefresh,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="cheng-gong-ti-shi" tabindex="-1">成功提示</h3><p>通过 <code>success-text</code> 可以设置刷新成功后的顶部提示文案。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pull-refresh</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;isLoading&quot;</span>\n  <span class="hljs-attr">success-text</span>=<span class="hljs-string">&quot;刷新成功&quot;</span>\n  @<span class="hljs-attr">refresh</span>=<span class="hljs-string">&quot;onRefresh&quot;</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>刷新次数: {{ count }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-pull-refresh</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-ti-shi" tabindex="-1">自定义提示</h3><p>通过插槽可以自定义下拉刷新过程中的提示内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pull-refresh</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;isLoading&quot;</span> <span class="hljs-attr">:head-height</span>=<span class="hljs-string">&quot;80&quot;</span> @<span class="hljs-attr">refresh</span>=<span class="hljs-string">&quot;onRefresh&quot;</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- 下拉提示，通过 scale 实现一个缩放效果 --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">pulling</span>=<span class="hljs-string">&quot;props&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span>\n      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;doge&quot;</span>\n      <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/doge.png&quot;</span>\n      <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ transform: `scale(${props.distance / 80})` }&quot;</span>\n    /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n  <span class="hljs-comment">&lt;!-- 释放提示 --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">loosing</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;doge&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/doge.png&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n  <span class="hljs-comment">&lt;!-- 加载提示 --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">loading</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;doge&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/doge-fire.jpg&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>刷新次数: {{ count }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-pull-refresh</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.doge</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">140px</span>;\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">72px</span>;\n    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">8px</span>;\n    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>是否处于加载中状态</td><td><em>boolean</em></td><td>-</td></tr><tr><td>pulling-text</td><td>下拉过程提示文案</td><td><em>string</em></td><td><code>下拉即可刷新...</code></td></tr><tr><td>loosing-text</td><td>释放过程提示文案</td><td><em>string</em></td><td><code>释放即可刷新...</code></td></tr><tr><td>loading-text</td><td>加载过程提示文案</td><td><em>string</em></td><td><code>加载中...</code></td></tr><tr><td>success-text</td><td>刷新成功提示文案</td><td><em>string</em></td><td>-</td></tr><tr><td>success-duration</td><td>刷新成功提示展示时长(ms)</td><td><em>number | string</em></td><td><code>500</code></td></tr><tr><td>animation-duration</td><td>动画时长</td><td><em>number | string</em></td><td><code>300</code></td></tr><tr><td>head-height</td><td>顶部内容高度</td><td><em>number | string</em></td><td><code>50</code></td></tr><tr><td>pull-distance <code>v3.0.8</code></td><td>触发下拉刷新的距离</td><td><em>number | string</em></td><td>与 <code>head-height</code> 一致</td></tr><tr><td>disabled</td><td>是否禁用下拉刷新</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>refresh</td><td>下拉刷新时触发</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>default</td><td>自定义内容</td><td>-</td></tr><tr><td>normal</td><td>非下拉状态时顶部内容</td><td>-</td></tr><tr><td>pulling</td><td>下拉过程中顶部内容</td><td>{ distance: 当前下拉距离 }</td></tr><tr><td>loosing</td><td>释放过程中顶部内容</td><td>{ distance: 当前下拉距离 }</td></tr><tr><td>loading</td><td>加载过程中顶部内容</td><td>{ distance: 当前下拉距离 }</td></tr><tr><td>success</td><td>刷新成功提示内容</td><td>-</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-pull-refresh-head-height</td><td><em>50px</em></td><td>-</td></tr><tr><td>–van-pull-refresh-head-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-pull-refresh-head-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-pull-refresh-loading-icon-size</td><td><em>16px</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="pullrefresh-de-nei-rong-wei-tian-man-ping-mu-shi-zhi-you-yi-bu-fen-qu-yu-ke-yi-xia-la" tabindex="-1">PullRefresh 的内容未填满屏幕时，只有一部分区域可以下拉？</h3><p>默认情况下，下拉区域的高度是和内容高度保持一致的，如果需要让下拉区域始终为全屏，可以给 PullRefresh 设置一个与屏幕大小相等的最小高度：</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pull-refresh</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;min-height: 100vh;&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="pullrefresh-de-chu-fa-tiao-jian-shi" tabindex="-1">PullRefresh 的触发条件是？</h3><p>PullRefresh 的触发条件是「父级滚动元素的滚动条在顶部位置」。</p><ul><li>如果最近一个可滚动的父级元素是 <code>window</code>，则要求 <code>window.pageYOffset === 0</code>。</li><li>如果最近一个可滚动的父级元素是 <code>Element</code>，则要求 <code>Element.scrollTop === 0</code>。</li></ul></div><div class="van-doc-card"><h3 id="zai-zhuo-mian-duan-wu-fa-cao-zuo-zu-jian" tabindex="-1">在桌面端无法操作组件？</h3><p>参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei">桌面端适配</a>。</p></div>',17),Hl=[Gl],Kl={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ol,Hl)))},$l={class:"van-doc-markdown-body"},Jl=t('<h1>Radio 单选框</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>在一组备选项中进行单选。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RadioGroup</span>, <span class="hljs-title class_">Radio</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Radio</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">RadioGroup</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>v-model</code> 绑定值当前选中项的 name。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>单选框 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>单选框 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;1&#39;</span>);\n    <span class="hljs-keyword">return</span> { checked };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="shui-ping-pai-lie" tabindex="-1">水平排列</h3><p>将 <code>direction</code> 属性设置为 <code>horizontal</code> 后，单选框组会变成水平排列。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;horizontal&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>单选框 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>单选框 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-zhuang-tai" tabindex="-1">禁用状态</h3><p>通过 <code>disabled</code> 属性禁止选项切换，在 <code>Radio</code> 上设置 <code>disabled</code> 可以禁用单个选项。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>单选框 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>单选框 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-xing-zhuang" tabindex="-1">自定义形状</h3><p>将 <code>shape</code> 属性设置为 <code>square</code>，单选框的形状会变成方形。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span>&gt;</span>单选框 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span>&gt;</span>单选框 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yan-se" tabindex="-1">自定义颜色</h3><p>通过 <code>checked-color</code> 属性设置选中状态的图标颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">checked-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span>&gt;</span>单选框 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">checked-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span>&gt;</span>单选框 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-da-xiao" tabindex="-1">自定义大小</h3><p>通过 <code>icon-size</code> 属性可以自定义图标的大小。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">icon-size</span>=<span class="hljs-string">&quot;24px&quot;</span>&gt;</span>单选框 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">icon-size</span>=<span class="hljs-string">&quot;24px&quot;</span>&gt;</span>单选框 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-tu-biao" tabindex="-1">自定义图标</h3><p>通过 <code>icon</code> 插槽自定义图标，并通过 <code>slotProps</code> 判断是否为选中状态。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>\n    单选框 1\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;props&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;img-icon&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;props.checked ? activeIcon : inactiveIcon&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>\n    单选框 2\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;props&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;img-icon&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;props.checked ? activeIcon : inactiveIcon&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.img-icon</span> {\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;1&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      checked,\n      <span class="hljs-attr">activeIcon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/user-active.png&#39;</span>,\n      <span class="hljs-attr">inactiveIcon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/user-inactive.png&#39;</span>,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-wen-ben-dian-ji" tabindex="-1">禁用文本点击</h3><p>设置 <code>label-disabled</code> 属性后，点击图标以外的内容不会触发单选框切换。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">label-disabled</span>&gt;</span>单选框 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">label-disabled</span>&gt;</span>单选框 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="da-pei-dan-yuan-ge-zu-jian-shi-yong" tabindex="-1">搭配单元格组件使用</h3><p>搭配单元格组件使用时，需要再引入 <code>Cell</code> 和 <code>CellGroup</code> 组件。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单选框 1&quot;</span> <span class="hljs-attr">clickable</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;checked = &#39;1&#39;&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right-icon</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单选框 2&quot;</span> <span class="hljs-attr">clickable</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;checked = &#39;2&#39;&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right-icon</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="radio-props" tabindex="-1">Radio Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>name</td><td>标识符</td><td><em>any</em></td><td>-</td></tr><tr><td>shape</td><td>形状，可选值为 <code>square</code></td><td><em>string</em></td><td><code>round</code></td></tr><tr><td>disabled</td><td>是否为禁用状态</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>label-disabled</td><td>是否禁用文本内容点击</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>label-position</td><td>文本位置，可选值为 <code>left</code></td><td><em>string</em></td><td><code>right</code></td></tr><tr><td>icon-size</td><td>图标大小，默认单位为<code>px</code></td><td><em>number | string</em></td><td><code>20px</code></td></tr><tr><td>checked-color</td><td>选中状态颜色</td><td><em>string</em></td><td><code>#1989fa</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="radiogroup-props" tabindex="-1">RadioGroup Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>当前选中项的标识符</td><td><em>any</em></td><td>-</td></tr><tr><td>disabled</td><td>是否禁用所有单选框</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>direction</td><td>排列方向，可选值为<code>horizontal</code></td><td><em>string</em></td><td><code>vertical</code></td></tr><tr><td>icon-size</td><td>所有单选框的图标大小，默认单位为<code>px</code></td><td><em>number | string</em></td><td><code>20px</code></td></tr><tr><td>checked-color</td><td>所有单选框的选中状态颜色</td><td><em>string</em></td><td><code>#1989fa</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="radio-events" tabindex="-1">Radio Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击单选框时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="radiogroup-events" tabindex="-1">RadioGroup Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>当绑定值变化时触发的事件</td><td><em>name: string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="radio-slots" tabindex="-1">Radio Slots</h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>default</td><td>自定义文本</td><td>-</td></tr><tr><td>icon</td><td>自定义图标</td><td><em>{ checked: boolean, disabled: boolean }</em></td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-radio-size</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-radio-border-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-radio-transition-duration</td><td><em>var(–van-animation-duration-fast)</em></td><td>-</td></tr><tr><td>–van-radio-label-margin</td><td><em>var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-radio-label-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-radio-checked-icon-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-radio-disabled-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-radio-disabled-label-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-radio-disabled-background-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr></tbody></table></div>',21),Xl=[Jl],Yl={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",$l,Xl)))},Zl={class:"van-doc-markdown-body"},Ql=t('<h1>Rate 评分</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于对事物进行评级操作。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Rate</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Rate</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>v-model</code> 来绑定当前评分值。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">3</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-tu-biao" tabindex="-1">自定义图标</h3><p>通过 <code>icon</code> 属性设置选中时的图标，<code>void-icon</code> 属性设置未选中时的图标。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;like&quot;</span> <span class="hljs-attr">void-icon</span>=<span class="hljs-string">&quot;like-o&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yang-shi" tabindex="-1">自定义样式</h3><p>通过 <code>size</code> 属性设置图标大小，<code>color</code> 属性设置选中时的颜色，<code>void-color</code> 设置未选中时的颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:size</span>=<span class="hljs-string">&quot;25&quot;</span>\n  <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#ffd21e&quot;</span>\n  <span class="hljs-attr">void-icon</span>=<span class="hljs-string">&quot;star&quot;</span>\n  <span class="hljs-attr">void-color</span>=<span class="hljs-string">&quot;#eee&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="ban-xing" tabindex="-1">半星</h3><p>设置 <code>allow-half</code> 属性后可以选中半星。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">allow-half</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">2.5</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-shu-liang" tabindex="-1">自定义数量</h3><p>通过 <code>count</code> 属性设置评分总数。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">:count</span>=<span class="hljs-string">&quot;6&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-zhuang-tai" tabindex="-1">禁用状态</h3><p>通过 <code>disabled</code> 属性来禁用评分。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zhi-du-zhuang-tai" tabindex="-1">只读状态</h3><p>通过 <code>readonly</code> 属性将评分设置为只读状态。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">readonly</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zhi-du-zhuang-tai-xian-shi-xiao-shu" tabindex="-1">只读状态显示小数</h3><p>设置 <code>readonly</code> 和 <code>allow-half</code> 属性后，Rate 组件可以展示任意小数结果。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">readonly</span> <span class="hljs-attr">allow-half</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">3.3</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="jian-ting-change-shi-jian" tabindex="-1">监听 change 事件</h3><p>评分变化时，会触发 <code>change</code> 事件。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-javascript"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">3</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">value</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;当前值：&#39;</span> + value);\n    <span class="hljs-keyword">return</span> {\n      value,\n      onChange,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>当前分值</td><td><em>number</em></td><td>-</td></tr><tr><td>count</td><td>图标总数</td><td><em>number | string</em></td><td><code>5</code></td></tr><tr><td>size</td><td>图标大小，默认单位为<code>px</code></td><td><em>number | string</em></td><td><code>20px</code></td></tr><tr><td>gutter</td><td>图标间距，默认单位为<code>px</code></td><td><em>number | string</em></td><td><code>4px</code></td></tr><tr><td>color</td><td>选中时的颜色</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>void-color</td><td>未选中时的颜色</td><td><em>string</em></td><td><code>#c8c9cc</code></td></tr><tr><td>disabled-color</td><td>禁用时的颜色</td><td><em>string</em></td><td><code>#c8c9cc</code></td></tr><tr><td>icon</td><td>选中时的<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td><code>star</code></td></tr><tr><td>void-icon</td><td>未选中时的<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td><code>star-o</code></td></tr><tr><td>icon-prefix</td><td>图标类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props">class-prefix 属性</a></td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>allow-half</td><td>是否允许半选</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly</td><td>是否为只读状态，只读状态下无法修改评分</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disabled</td><td>是否禁用评分</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>touchable</td><td>是否可以通过滑动手势选择评分</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>当前分值变化时触发的事件</td><td>当前分值</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-rate-icon-size</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-rate-icon-gutter</td><td><em>var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-rate-icon-void-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-rate-icon-full-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-rate-icon-disabled-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr></tbody></table></div>',18),se=[Ql],ae={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Zl,se)))},te={class:"van-doc-markdown-body"},ne=t('<h1>Search 搜索</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于搜索场景的输入框组件。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Search</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Search</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p><code>v-model</code> 用于控制搜索框中的文字，<code>background</code> 可以自定义搜索框外部背景色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-search</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入搜索关键词&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="shi-jian-jian-ting" tabindex="-1">事件监听</h3><p>Search 组件提供了 <code>search</code> 和 <code>cancel</code> 事件，<code>search</code> 事件在点击键盘上的搜索/回车按钮后触发，<code>cancel</code> 事件在点击搜索框右侧取消按钮时触发。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-search</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n    <span class="hljs-attr">show-action</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入搜索关键词&quot;</span>\n    @<span class="hljs-attr">search</span>=<span class="hljs-string">&quot;onSearch&quot;</span>\n    @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;onCancel&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSearch</span> = (<span class="hljs-params">val</span>) =&gt; <span class="hljs-title class_">Toast</span>(val);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onCancel</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;取消&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      value,\n      onSearch,\n      onCancel,\n    };\n  },\n};\n</code></pre><blockquote><p>Tips: 在 van-search 外层增加 form 标签，且 action 不为空，即可在 iOS 输入法中显示搜索按钮。</p></blockquote></div><div class="van-doc-card"><h3 id="sou-suo-kuang-nei-rong-dui-qi" tabindex="-1">搜索框内容对齐</h3><p>通过 <code>input-align</code> 属性设置搜索框内容的对齐方式，可选值为 <code>center</code>、<code>right</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-search</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入搜索关键词&quot;</span>\n  <span class="hljs-attr">input-align</span>=<span class="hljs-string">&quot;center&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-sou-suo-kuang" tabindex="-1">禁用搜索框</h3><p>通过 <code>disabled</code> 属性禁用搜索框。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-search</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入搜索关键词&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-bei-jing-se" tabindex="-1">自定义背景色</h3><p>通过 <code>background</code> 属性可以设置搜索框外部的背景色，通过 <code>shape</code> 属性设置搜索框的形状，可选值为 <code>round</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-search</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;round&quot;</span>\n  <span class="hljs-attr">background</span>=<span class="hljs-string">&quot;#4fc08d&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入搜索关键词&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-an-niu" tabindex="-1">自定义按钮</h3><p>使用 <code>action</code> 插槽可以自定义右侧按钮的内容。使用插槽后，<code>cancel</code> 事件将不再触发。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-search</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">show-action</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;地址&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入搜索关键词&quot;</span>\n  @<span class="hljs-attr">search</span>=<span class="hljs-string">&quot;onSearch&quot;</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">action</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onSearch&quot;</span>&gt;</span>搜索<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-search</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>label</td><td>搜索框左侧文本</td><td><em>string</em></td><td>-</td></tr><tr><td>shape</td><td>搜索框形状，可选值为 <code>round</code></td><td><em>string</em></td><td><code>square</code></td></tr><tr><td>id <code>v3.2.2</code></td><td>搜索框 id，同时会设置 label 的 for 属性</td><td><em>string</em></td><td>-</td></tr><tr><td>background</td><td>搜索框外部背景色</td><td><em>string</em></td><td><code>#f2f2f2</code></td></tr><tr><td>maxlength</td><td>输入的最大字符数</td><td><em>number | string</em></td><td>-</td></tr><tr><td>placeholder</td><td>占位提示文字</td><td><em>string</em></td><td>-</td></tr><tr><td>clearable</td><td>是否启用清除图标，点击清除图标后会清空输入框</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>clear-icon <code>v3.0.12</code></td><td>清除<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td><code>clear</code></td></tr><tr><td>clear-trigger</td><td>显示清除图标的时机，<code>always</code> 表示输入框不为空时展示，<br><code>focus</code> 表示输入框聚焦且不为空时展示</td><td><em>string</em></td><td><code>focus</code></td></tr><tr><td>autofocus</td><td>是否自动聚焦，iOS 系统不支持该属性</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-action</td><td>是否在搜索框右侧显示取消按钮</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>action-text</td><td>取消按钮文字</td><td><em>boolean</em></td><td><code>取消</code></td></tr><tr><td>disabled</td><td>是否禁用输入框</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly</td><td>是否将输入框设为只读状态，只读状态下无法输入内容</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>error</td><td>是否将输入内容标红</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>error-message</td><td>底部错误提示文案，为空时不展示</td><td><em>string</em></td><td>-</td></tr><tr><td>formatter <code>v3.0.12</code></td><td>输入内容格式化函数</td><td><em>(val: string) =&gt; string</em></td><td>-</td></tr><tr><td>format-trigger <code>v3.0.12</code></td><td>格式化函数触发的时机，可选值为 <code>onBlur</code></td><td><em>string</em></td><td><code>onChange</code></td></tr><tr><td>input-align</td><td>输入框内容对齐方式，可选值为 <code>center</code> <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>left-icon</td><td>输入框左侧<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td><code>search</code></td></tr><tr><td>right-icon</td><td>输入框右侧<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>search</td><td>确定搜索时触发</td><td><em>value: string (当前输入的值)</em></td></tr><tr><td>update:model-value</td><td>输入框内容变化时触发</td><td><em>value: string (当前输入的值)</em></td></tr><tr><td>focus</td><td>输入框获得焦点时触发</td><td><em>event: Event</em></td></tr><tr><td>blur</td><td>输入框失去焦点时触发</td><td><em>event: Event</em></td></tr><tr><td>click-input</td><td>点击输入区域时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>clear</td><td>点击清除按钮后触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>cancel</td><td>点击取消按钮时触发</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><p>通过 ref 可以获取到 Search 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>focus</td><td>获取输入框焦点</td><td>-</td><td>-</td></tr><tr><td>blur</td><td>取消输入框焦点</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">SearchShape</span>, <span class="hljs-title class_">SearchInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>SearchInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">SearchInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> searchRef = ref&lt;<span class="hljs-title class_">SearchInstance</span>&gt;();\n\nsearchRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">focus</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>left</td><td>自定义左侧内容（搜索框外）</td></tr><tr><td>action</td><td>自定义右侧内容（搜索框外），设置 <code>show-action</code> 属性后展示</td></tr><tr><td>label</td><td>自定义左侧文本（搜索框内）</td></tr><tr><td>left-icon</td><td>自定义左侧图标（搜索框内）</td></tr><tr><td>right-icon</td><td>自定义右侧图标（搜索框内）</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-search-padding</td><td><em>10px var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-search-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-search-content-background-color</td><td><em>var(–van-gray-1)</em></td><td>-</td></tr><tr><td>–van-search-input-height</td><td><em>34px</em></td><td>-</td></tr><tr><td>–van-search-label-padding</td><td><em>0 5px</em></td><td>-</td></tr><tr><td>–van-search-label-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-search-label-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-search-left-icon-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-search-action-padding</td><td><em>0 var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-search-action-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-search-action-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="zai-zhuo-mian-duan-dian-ji-qing-chu-an-niu-wu-xiao" tabindex="-1">在桌面端点击清除按钮无效？</h3><p>清除按钮监听是的移动端 Touch 事件，参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei">桌面端适配</a>。</p></div>',20),le=[ne],ee={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",te,le)))},de={class:"van-doc-markdown-body"},pe=t('<h1>ShareSheet 分享面板</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>底部弹起的分享面板，用于展示各分享渠道对应的操作按钮，不含具体的分享逻辑。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ShareSheet</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ShareSheet</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>分享面板通过 <code>options</code> 属性来定义分享选项，数组的每一项是一个对象，对象格式见文档下方表格。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;显示分享面板&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showShare = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-share-sheet</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showShare&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;立即分享给好友&quot;</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n  @<span class="hljs-attr">select</span>=<span class="hljs-string">&quot;onSelect&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showShare = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> options = [\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;微信&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;wechat&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;微博&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;weibo&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;复制链接&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;link&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;分享海报&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;poster&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;二维码&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;qrcode&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSelect</span> = (<span class="hljs-params">option</span>) =&gt; {\n      <span class="hljs-title class_">Toast</span>(option.<span class="hljs-property">name</span>);\n      showShare.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      options,\n      onSelect,\n      showShare,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zhan-shi-duo-xing-xuan-xiang" tabindex="-1">展示多行选项</h3><p>当分享选项的数量较多时，可以将 <code>options</code> 定义为数组嵌套的格式，每个子数组会作为一行选项展示。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-share-sheet</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showShare&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;立即分享给好友&quot;</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showShare = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> options = [\n      [\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;微信&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;wechat&#39;</span> },\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;朋友圈&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;wechat-moments&#39;</span> },\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;微博&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;weibo&#39;</span> },\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;QQ&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;qq&#39;</span> },\n      ],\n      [\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;复制链接&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;link&#39;</span> },\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;分享海报&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;poster&#39;</span> },\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;二维码&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;qrcode&#39;</span> },\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;小程序码&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;weapp-qrcode&#39;</span> },\n      ],\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      options,\n      showShare,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-tu-biao" tabindex="-1">自定义图标</h3><p>除了使用内置的几种图标外，可以直接在 <code>icon</code> 中传入图片 URL 来使用自定义的图标。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-share-sheet</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showShare&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showShare = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> options = [\n      {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;名称&#39;</span>,\n        <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/custom-icon-fire.png&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;名称&#39;</span>,\n        <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/custom-icon-light.png&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;名称&#39;</span>,\n        <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/custom-icon-water.png&#39;</span>,\n      },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      options,\n      showShare,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zhan-shi-miao-shu-xin-xi" tabindex="-1">展示描述信息</h3><p>通过 <code>description</code> 属性可以设置标题下方的描述文字, 在 <code>options</code> 内设置 <code>description</code> 属性可以添加分享选项描述。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-share-sheet</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showShare&quot;</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;立即分享给好友&quot;</span>\n  <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;描述信息&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showShare = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> options = [\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;微信&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;wechat&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;微博&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;weibo&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;复制链接&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;link&#39;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#39;描述信息&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;分享海报&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;poster&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;二维码&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;qrcode&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      options,\n      showShare,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model:show</td><td>是否显示分享面板</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>options</td><td>分享选项</td><td><em>Option[]</em></td><td><code>[]</code></td></tr><tr><td>title</td><td>顶部标题</td><td><em>string</em></td><td>-</td></tr><tr><td>cancel-text</td><td>取消按钮文字，传入空字符串可以隐藏按钮</td><td><em>string</em></td><td><code>&#39;取消&#39;</code></td></tr><tr><td>description</td><td>标题下方的辅助描述文字</td><td><em>string</em></td><td>-</td></tr><tr><td>duration</td><td>动画时长，单位秒，设置为 0 可以禁用动画</td><td><em>number | string</em></td><td><code>0.3</code></td></tr><tr><td>overlay</td><td>是否显示遮罩层</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>overlay-class</td><td>自定义遮罩层类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>overlay-style</td><td>自定义遮罩层样式</td><td><em>object</em></td><td>-</td></tr><tr><td>lock-scroll</td><td>是否锁定背景滚动</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>lazy-render</td><td>是否在显示弹层时才渲染内容</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-popstate</td><td>是否在页面回退时自动关闭</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-overlay</td><td>是否在点击遮罩层后关闭</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>safe-area-inset-bottom</td><td>是否开启<a href="#/zh-CN/advanced-usage#di-bu-an-quan-qu-gua-pei">底部安全区适配</a></td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>teleport</td><td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#teleport">to 属性</a></td><td><em>string | Element</em></td><td>-</td></tr><tr><td>before-close <code>v3.1.4</code></td><td>关闭前的回调函数，返回 <code>false</code> 可阻止关闭，支持返回 Promise</td><td><em>(action: string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="option-shu-ju-jie-gou" tabindex="-1">Option 数据结构</h3><p><code>options</code> 属性为一个对象数组，数组中的每个对象配置一列，对象可以包含以下值：</p><table><thead><tr><th>键名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>name</td><td>分享渠道名称</td><td><em>string</em></td></tr><tr><td>description</td><td>分享选项描述</td><td><em>string</em></td></tr><tr><td>icon</td><td>图标，可选值为 <code>wechat</code> <code>weibo</code> <code>qq</code> <code>link</code> <code>qrcode</code> <code>poster</code> <code>weapp-qrcode</code> <code>wechat-moments</code>，支持传入图片 URL</td><td><em>string</em></td></tr><tr><td>className</td><td>分享选项类名</td><td><em>string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>select</td><td>点击分享选项时触发</td><td><em>option: Option, index: number</em></td></tr><tr><td>cancel</td><td>点击取消按钮时触发</td><td>-</td></tr><tr><td>open</td><td>打开面板时触发</td><td>-</td></tr><tr><td>close</td><td>关闭面板时触发</td><td>-</td></tr><tr><td>opened</td><td>打开面板且动画结束后触发</td><td>-</td></tr><tr><td>closed</td><td>关闭面板且动画结束后触发</td><td>-</td></tr><tr><td>click-overlay</td><td>点击遮罩层时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>title</td><td>自定义顶部标题</td></tr><tr><td>description</td><td>自定义描述文字</td></tr><tr><td>cancel <code>v3.0.10</code></td><td>自定义取消按钮内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ShareSheetOption</span>, <span class="hljs-title class_">ShareSheetOptions</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-share-sheet-header-padding</td><td><em>var(–van-padding-sm) var(–van-padding-md) var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-share-sheet-title-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-share-sheet-title-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-share-sheet-title-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-share-sheet-description-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-share-sheet-description-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-share-sheet-description-line-height</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-share-sheet-icon-size</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-share-sheet-option-name-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-share-sheet-option-name-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-share-sheet-option-description-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-share-sheet-option-description-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-share-sheet-cancel-button-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-share-sheet-cancel-button-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-share-sheet-cancel-button-background</td><td><em>var(–van-white)</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="ru-he-shi-xian-fen-xiang-luo-ji" tabindex="-1">如何实现分享逻辑？</h3><p>在不同的 App 或浏览器中，存在各式各样的分享接口或分享方式，因此 ShareSheet 组件不提供具体的分享逻辑，需要开发者根据业务场景自行实现。</p><h4 id="wei-xin-nei-fen-xiang" tabindex="-1">微信内分享</h4><p>由于微信未提供分享相关的 API，需要引导用户点击右上角进行分享。</p><h4 id="app-nei-fen-xiang" tabindex="-1">App 内分享</h4><p>可以通过 JSBridge 调用原生应用的 SDK 进行分享。</p><h4 id="fen-xiang-hai-bao-huo-er-wei-ma" tabindex="-1">分享海报或二维码</h4><p>可以通过 <a href="#/zh-CN/popup">Popup</a> 组件以弹层的形式展示图片，然后引导用户保存图片进行分享。</p></div>',18),ce=[pe],oe={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",de,ce)))},re={class:"van-doc-markdown-body"},ie=t('<h1>Sidebar 侧边导航</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>垂直展示的导航栏，用于在不同的内容区域之间进行切换。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Sidebar</span>, <span class="hljs-title class_">SidebarItem</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Sidebar</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SidebarItem</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>v-model</code> 绑定当前选中项的索引。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签名称&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签名称&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签名称&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-sidebar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">return</span> { active };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="hui-biao-ti-shi" tabindex="-1">徽标提示</h3><p>设置 <code>dot</code> 属性后，会在右上角展示一个小红点；设置 <code>badge</code> 属性后，会在右上角展示相应的徽标。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签名称&quot;</span> <span class="hljs-attr">dot</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签名称&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;5&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签名称&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;20&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-sidebar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-xuan-xiang" tabindex="-1">禁用选项</h3><p>通过 <code>disabled</code> 属性禁用选项。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签名称&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签名称&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签名称&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-sidebar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jian-ting-qie-huan-shi-jian" tabindex="-1">监听切换事件</h3><p>设置 <code>change</code> 方法来监听切换导航项时的事件。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签名 1&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签名 2&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签名 3&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-sidebar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">index</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">`标签名 <span class="hljs-subst">${index + <span class="hljs-number">1</span>}</span>`</span>);\n    <span class="hljs-keyword">return</span> {\n      active,\n      onChange,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="sidebar-props" tabindex="-1">Sidebar Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>当前导航项的索引</td><td><em>number | string</em></td><td><code>0</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="sidebar-events" tabindex="-1">Sidebar Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>切换导航项时触发</td><td><em>index: number</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="sidebaritem-props" tabindex="-1">SidebarItem Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>内容</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>dot</td><td>是否显示右上角小红点</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>badge</td><td>图标右上角徽标的内容</td><td><em>number | string</em></td><td>-</td></tr><tr><td>disabled</td><td>是否禁用该项</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>url</td><td>点击后跳转的链接地址</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>点击后跳转的目标路由对象，等同于 vue-router 的 <a href="https://router.vuejs.org/zh/api/#to">to 属性</a></td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>是否在跳转时替换当前页面历史</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="sidebaritem-events" tabindex="-1">SidebarItem Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击时触发</td><td><em>index: number</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="sidebaritem-slots" tabindex="-1">SidebarItem Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>title</td><td>自定义标题</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-sidebar-width</td><td><em>80px</em></td><td>-</td></tr><tr><td>–van-sidebar-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-sidebar-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-sidebar-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-sidebar-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-sidebar-padding</td><td><em>20px var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-sidebar-active-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-sidebar-background-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-sidebar-selected-font-weight</td><td><em>var(–van-font-weight-bold)</em></td><td>-</td></tr><tr><td>–van-sidebar-selected-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-sidebar-selected-border-width</td><td><em>4px</em></td><td>-</td></tr><tr><td>–van-sidebar-selected-border-height</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-sidebar-selected-border-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-sidebar-selected-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr></tbody></table></div>',16),he=[ie],je={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",re,he)))},ue={class:"van-doc-markdown-body"},ge=t('<h1>Skeleton 骨架屏</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于在内容加载过程中展示一组占位图形。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Skeleton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Skeleton</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>title</code> 属性显示标题占位图，通过 <code>row</code> 属性配置占位段落行数。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-skeleton</span> <span class="hljs-attr">title</span> <span class="hljs-attr">:row</span>=<span class="hljs-string">&quot;3&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="xian-shi-tou-xiang" tabindex="-1">显示头像</h3><p>通过 <code>avatar</code> 属性显示头像占位图。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-skeleton</span> <span class="hljs-attr">title</span> <span class="hljs-attr">avatar</span> <span class="hljs-attr">:row</span>=<span class="hljs-string">&quot;3&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zhan-shi-zi-zu-jian" tabindex="-1">展示子组件</h3><p>将 <code>loading</code> 属性设置成 <code>false</code> 表示内容加载完成，此时会隐藏占位图，并显示 <code>Skeleton</code> 的子组件。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-skeleton</span> <span class="hljs-attr">title</span> <span class="hljs-attr">avatar</span> <span class="hljs-attr">:row</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">:loading</span>=<span class="hljs-string">&quot;loading&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>实际内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-skeleton</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref, onMounted } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n\n    <span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> {\n      loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    });\n\n    <span class="hljs-keyword">return</span> {\n      loading,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>row</td><td>段落占位图行数</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>row-width</td><td>段落占位图宽度，可传数组来设置每一行的宽度</td><td><em>number | string |<br>(number | string)[]</em></td><td><code>100%</code></td></tr><tr><td>title</td><td>是否显示标题占位图</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>avatar</td><td>是否显示头像占位图</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loading</td><td>是否显示骨架屏，传 <code>false</code> 时会展示子组件内容</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>animate</td><td>是否开启动画</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>round</td><td>是否将标题和段落显示为圆角风格</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>title-width</td><td>标题占位图宽度</td><td><em>number | string</em></td><td><code>40%</code></td></tr><tr><td>avatar-size</td><td>头像占位图大小</td><td><em>number | string</em></td><td><code>32px</code></td></tr><tr><td>avatar-shape</td><td>头像占位图形状，可选值为 <code>square</code></td><td><em>string</em></td><td><code>round</code></td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-skeleton-row-height</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-skeleton-row-background-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-skeleton-row-margin-top</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-skeleton-title-width</td><td><em>40%</em></td><td>-</td></tr><tr><td>–van-skeleton-avatar-size</td><td><em>32px</em></td><td>-</td></tr><tr><td>–van-skeleton-avatar-background-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-skeleton-animation-duration</td><td><em>1.2s</em></td><td>-</td></tr></tbody></table></div>',11),me=[ge],ve={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",ue,me)))},be={class:"van-doc-markdown-body"},fe=t('<h1>Slider 滑块</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>滑动输入条，用于在给定的范围内选择一个值。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Slider</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Slider</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">50</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">value</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;当前值：&#39;</span> + value);\n    <span class="hljs-keyword">return</span> {\n      value,\n      onChange,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="shuang-hua-kuai" tabindex="-1">双滑块</h3><p>添加 <code>range</code> 属性就可以开启双滑块模式，确保 <code>value</code> 的值是一个数组。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">range</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-comment">// 双滑块模式时，值必须是数组</span>\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>([<span class="hljs-number">10</span>, <span class="hljs-number">50</span>]);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">value</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;当前值：&#39;</span> + value);\n    <span class="hljs-keyword">return</span> {\n      value,\n      onChange,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zhi-ding-xuan-ze-fan-wei" tabindex="-1">指定选择范围</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">:min</span>=<span class="hljs-string">&quot;-50&quot;</span> <span class="hljs-attr">:max</span>=<span class="hljs-string">&quot;50&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong" tabindex="-1">禁用</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zhi-ding-bu-chang" tabindex="-1">指定步长</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">:step</span>=<span class="hljs-string">&quot;10&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yang-shi" tabindex="-1">自定义样式</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">bar-height</span>=<span class="hljs-string">&quot;4px&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-an-niu" tabindex="-1">自定义按钮</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;custom-button&quot;</span>&gt;</span>{{ value }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-slider</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.custom-button</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">26px</span>;\n    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;\n    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;\n    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">18px</span>;\n    <span class="hljs-attribute">text-align</span>: center;\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ee0a24</span>;\n    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">100px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="chui-zhi-fang-xiang" tabindex="-1">垂直方向</h3><p>设置 <code>vertical</code> 属性后，滑块会垂直展示，且高度为 100% 父元素高度。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;150px&#39; }&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">vertical</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span>\n    <span class="hljs-attr">range</span>\n    <span class="hljs-attr">vertical</span>\n    <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-left: 100px;&quot;</span>\n    @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">50</span>);\n    <span class="hljs-keyword">const</span> value2 = <span class="hljs-title function_">ref</span>([<span class="hljs-number">10</span>, <span class="hljs-number">50</span>]);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">value</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;当前值：&#39;</span> + value);\n    <span class="hljs-keyword">return</span> {\n      value,\n      value2,\n      onChange,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>当前进度百分比，在双滑块模式下为数组格式</td><td><em>number | [number, number]</em></td><td><code>0</code></td></tr><tr><td>max</td><td>最大值</td><td><em>number | string</em></td><td><code>100</code></td></tr><tr><td>min</td><td>最小值</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>step</td><td>步长</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>bar-height</td><td>进度条高度，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>2px</code></td></tr><tr><td>button-size</td><td>滑块按钮大小，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>24px</code></td></tr><tr><td>active-color</td><td>进度条激活态颜色</td><td><em>string</em></td><td><code>#1989fa</code></td></tr><tr><td>inactive-color</td><td>进度条非激活态颜色</td><td><em>string</em></td><td><code>#e5e5e5</code></td></tr><tr><td>range</td><td>是否开启双滑块模式</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>reverse <code>v3.2.1</code></td><td>是否将进度条反转</td><td><code>false</code></td><td></td></tr><tr><td>disabled</td><td>是否禁用滑块</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly <code>v3.0.5</code></td><td>是否为只读状态，只读状态下无法修改滑块的值</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>vertical</td><td>是否垂直展示</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>update:model-value</td><td>进度变化时实时触发</td><td><em>value: number</em></td></tr><tr><td>change</td><td>进度变化且结束拖动后触发</td><td><em>value: number</em></td></tr><tr><td>drag-start</td><td>开始拖动时触发</td><td><em>event: TouchEvent</em></td></tr><tr><td>drag-end</td><td>结束拖动时触发</td><td><em>event: TouchEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>button</td><td>自定义滑块按钮</td><td><em>{ value: number }</em></td></tr><tr><td>left-button <code>v3.1.3</code></td><td>自定义左侧滑块按钮（双滑块模式下）</td><td><em>{ value: number }</em></td></tr><tr><td>right-button <code>v3.1.3</code></td><td>自定义右侧滑块按钮 （双滑块模式下）</td><td><em>{ value: number }</em></td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-slider-active-background-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-slider-inactive-background-color</td><td><em>var(–van-gray-3)</em></td><td>-</td></tr><tr><td>–van-slider-disabled-opacity</td><td><em>var(–van-disabled-opacity)</em></td><td>-</td></tr><tr><td>–van-slider-bar-height</td><td><em>2px</em></td><td>-</td></tr><tr><td>–van-slider-button-width</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-slider-button-height</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-slider-button-border-radius</td><td><em>50%</em></td><td>-</td></tr><tr><td>–van-slider-button-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-slider-button-box-shadow</td><td><em>0 1px 2px rgba(0, 0, 0, 0.5)</em></td><td>-</td></tr></tbody></table></div>',18),ye=[fe],we={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",be,ye)))},qe={class:"van-doc-markdown-body"},xe=t('<h1>Stepper 步进器</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>步进器由增加按钮、减少按钮和输入框组成，用于在一定范围内输入、调整数字。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Stepper</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Stepper</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>v-model</code> 绑定输入值，可以通过 <code>change</code> 事件监听到输入值的变化。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="bu-chang-she-zhi" tabindex="-1">步长设置</h3><p>通过 <code>step</code> 属性设置每次点击增加或减少按钮时变化的值，默认为 <code>1</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;2&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="xian-zhi-shu-ru-fan-wei" tabindex="-1">限制输入范围</h3><p>通过 <code>min</code> 和 <code>max</code> 属性限制输入值的范围。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;5&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;8&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="xian-zhi-shu-ru-zheng-shu" tabindex="-1">限制输入整数</h3><p>设置 <code>integer</code> 属性后，输入框将限制只能输入整数。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">integer</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-zhuang-tai" tabindex="-1">禁用状态</h3><p>通过设置 <code>disabled</code> 属性来禁用步进器，禁用状态下无法点击按钮或修改输入框。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-shu-ru-kuang" tabindex="-1">禁用输入框</h3><p>通过设置 <code>disable-input</code> 属性来禁用输入框，此时按钮仍然可以点击。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">disable-input</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="gu-ding-xiao-shu-wei-shu" tabindex="-1">固定小数位数</h3><p>通过设置 <code>decimal-length</code> 属性可以保留固定的小数位数。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;0.2&quot;</span> <span class="hljs-attr">:decimal-length</span>=<span class="hljs-string">&quot;1&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-da-xiao" tabindex="-1">自定义大小</h3><p>通过 <code>input-width</code> 属性设置输入框宽度，通过 <code>button-size</code> 属性设置按钮大小和输入框高度。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">input-width</span>=<span class="hljs-string">&quot;40px&quot;</span> <span class="hljs-attr">button-size</span>=<span class="hljs-string">&quot;32px&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="yi-bu-bian-geng" tabindex="-1">异步变更</h3><p>通过 <code>before-change</code> 属性可以在输入值变化前进行校验和拦截。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">:before-change</span>=<span class="hljs-string">&quot;beforeChange&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">beforeChange</span> = (<span class="hljs-params">value</span>) =&gt; {\n      <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">loading</span>({ <span class="hljs-attr">forbidClick</span>: <span class="hljs-literal">true</span> });\n\n      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">clear</span>();\n          <span class="hljs-comment">// 在 resolve 函数中返回 true 或 false</span>\n          <span class="hljs-title function_">resolve</span>(<span class="hljs-literal">true</span>);\n        }, <span class="hljs-number">500</span>);\n      });\n    };\n\n    <span class="hljs-keyword">return</span> {\n      value,\n      beforeChange,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="yuan-jiao-feng-ge" tabindex="-1">圆角风格</h3><p>将 <code>theme</code> 设置为 <code>round</code> 来展示圆角风格的步进器。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;round&quot;</span> <span class="hljs-attr">button-size</span>=<span class="hljs-string">&quot;22&quot;</span> <span class="hljs-attr">disable-input</span> /&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>当前输入的值</td><td><em>number | string</em></td><td>-</td></tr><tr><td>min</td><td>最小值</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>max</td><td>最大值</td><td><em>number | string</em></td><td>-</td></tr><tr><td>default-value</td><td>初始值，当 v-model 为空时生效</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>step</td><td>步长，每次点击时改变的值</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>name</td><td>标识符，可以在 <code>change</code> 事件回调参数中获取</td><td><em>number | string</em></td><td>-</td></tr><tr><td>input-width</td><td>输入框宽度，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>32px</code></td></tr><tr><td>button-size</td><td>按钮大小以及输入框高度，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>28px</code></td></tr><tr><td>decimal-length</td><td>固定显示的小数位数</td><td><em>number | string</em></td><td>-</td></tr><tr><td>theme</td><td>样式风格，可选值为 <code>round</code></td><td><em>string</em></td><td>-</td></tr><tr><td>placeholder</td><td>输入框占位提示文字</td><td><em>string</em></td><td>-</td></tr><tr><td>integer</td><td>是否只允许输入整数</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disabled</td><td>是否禁用步进器</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disable-plus</td><td>是否禁用增加按钮</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disable-minus</td><td>是否禁用减少按钮</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disable-input</td><td>是否禁用输入框</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>before-change</td><td>输入值变化前的回调函数，返回 <code>false</code> 可阻止输入，支持返回 Promise</td><td><em>(value: number | string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td><code>false</code></td></tr><tr><td>show-plus</td><td>是否显示增加按钮</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-minus</td><td>是否显示减少按钮</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-input</td><td>是否显示输入框</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>long-press</td><td>是否开启长按手势</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>allow-empty</td><td>是否允许输入的值为空</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>当绑定值变化时触发的事件</td><td><em>value: string, detail: { name: string }</em></td></tr><tr><td>overlimit</td><td>点击不可用的按钮时触发</td><td>-</td></tr><tr><td>plus</td><td>点击增加按钮时触发</td><td>-</td></tr><tr><td>minus</td><td>点击减少按钮时触发</td><td>-</td></tr><tr><td>focus</td><td>输入框聚焦时触发</td><td><em>event: Event</em></td></tr><tr><td>blur</td><td>输入框失焦时触发</td><td><em>event: Event</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">StepperTheme</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-stepper-active-color</td><td><em>#e8e8e8</em></td><td>-</td></tr><tr><td>–van-stepper-background-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-stepper-button-icon-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-stepper-button-disabled-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-stepper-button-disabled-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-stepper-button-round-theme-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-stepper-input-width</td><td><em>32px</em></td><td>-</td></tr><tr><td>–van-stepper-input-height</td><td><em>28px</em></td><td>-</td></tr><tr><td>–van-stepper-input-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-stepper-input-line-height</td><td><em>normal</em></td><td>-</td></tr><tr><td>–van-stepper-input-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-stepper-input-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-stepper-input-disabled-background-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-stepper-border-radius</td><td><em>var(–van-border-radius-md)</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="wei-shi-me-value-you-shi-hou-hui-bian-cheng-string-lei-xing" tabindex="-1">为什么 value 有时候会变成 string 类型？</h3><p>这是因为用户输入过程中可能出现小数点或空值，比如 <code>1.</code>，这种情况下组件会抛出字符串类型。</p><p>如果希望 value 保持 number 类型，可以在 v-model 上添加 <code>number</code> 修饰符：</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model.number</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n</code></pre></div>',22),ke=[xe],ze={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",qe,ke)))},_e={class:"van-doc-markdown-body"},Ce=t('<h1>Steps 步骤条</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于展示操作流程的各个环节，让用户了解当前的操作在整体流程中的位置。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Step</span>, <span class="hljs-title class_">Steps</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Step</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Steps</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p><code>active</code> 属性表示当前步骤的索引，从 0 起计。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-steps</span> <span class="hljs-attr">:active</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>买家下单<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>商家接单<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>买家提货<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>交易完成<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-steps</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>);\n    <span class="hljs-keyword">return</span> { active };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yang-shi" tabindex="-1">自定义样式</h3><p>可以通过 <code>active-icon</code> 和 <code>active-color</code> 属性设置激活状态下的图标和颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-steps</span> <span class="hljs-attr">:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">active-icon</span>=<span class="hljs-string">&quot;success&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#38f&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>买家下单<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>商家接单<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>买家提货<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>交易完成<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-steps</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="shu-xiang-bu-zou-tiao" tabindex="-1">竖向步骤条</h3><p>可以通过设置 <code>direction</code> 属性来改变步骤条的显示方向。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-steps</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;vertical&quot;</span> <span class="hljs-attr">:active</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>【城市】物流状态1<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>2016-07-12 12:40<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>【城市】物流状态2<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>2016-07-11 10:00<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>快件已发货<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>2016-07-10 09:30<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-steps</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="steps-props" tabindex="-1">Steps Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>active</td><td>当前步骤对应的索引值</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>direction</td><td>步骤条方向，可选值为 <code>vertical</code></td><td><em>string</em></td><td><code>horizontal</code></td></tr><tr><td>active-icon</td><td>当前步骤对应的底部图标，可选值见 <a href="#/zh-CN/icon">Icon 组件</a></td><td><em>string</em></td><td><code>checked</code></td></tr><tr><td>inactive-icon</td><td>非当前步骤对应的底部图标，可选值见 <a href="#/zh-CN/icon">Icon 组件</a></td><td><em>string</em></td><td>-</td></tr><tr><td>finish-icon <code>v3.0.7</code></td><td>已完成步骤对应的底部图标，优先级高于 <code>inactive-icon</code>，可选值见 <a href="#/zh-CN/icon">Icon 组件</a></td><td><em>string</em></td><td>-</td></tr><tr><td>active-color</td><td>当前步骤和已完成步骤的颜色</td><td><em>string</em></td><td><code>#07c160</code></td></tr><tr><td>inactive-color</td><td>未激活步骤的颜色</td><td><em>string</em></td><td><code>#969799</code></td></tr><tr><td>icon-prefix <code>v3.0.15</code></td><td>图标类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props">class-prefix 属性</a></td><td><em>string</em></td><td><code>van-icon</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="step-slots" tabindex="-1">Step Slots</h3><p>| 名称 | 说明 | | — | — | — | — | | active-icon | 自定义激活状态图标 | | inactive-icon | 自定义未激活状态图标 | | finish-icon <code>v3.0.7</code> | 自定义已完成步骤对应的底部图标，优先级高于 <code>inactive-icon</code> | <em>string</em> | - |</p></div><div class="van-doc-card"><h3 id="steps-events" tabindex="-1">Steps Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click-step</td><td>点击步骤的标题或图标时触发</td><td><em>index: number</em></td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-step-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-step-active-color</td><td><em>var(–van-success-color)</em></td><td>-</td></tr><tr><td>–van-step-process-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-step-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-step-line-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr><tr><td>–van-step-finish-line-color</td><td><em>var(–van-success-color)</em></td><td>-</td></tr><tr><td>–van-step-finish-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-step-icon-size</td><td><em>12px</em></td><td>-</td></tr><tr><td>–van-step-circle-size</td><td><em>5px</em></td><td>-</td></tr><tr><td>–van-step-circle-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-step-horizontal-title-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-steps-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr></tbody></table></div>',13),Se=[Ce],Te={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",_e,Se)))},Ie={class:"van-doc-markdown-body"},Pe=t('<h1>Sticky 粘性布局</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>Sticky 组件与 CSS 中 <code>position: sticky</code> 属性实现的效果一致，当组件在屏幕范围内时，会按照正常的布局排列，当组件滚出屏幕范围时，始终会固定在屏幕顶部。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Sticky</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Sticky</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>将内容包裹在 <code>Sticky</code> 组件内即可。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-sticky</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>基础用法<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-sticky</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="xi-ding-ju-chi" tabindex="-1">吸顶距离</h3><p>通过 <code>offset-top</code> 属性可以设置组件在吸顶时与顶部的距离。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-sticky</span> <span class="hljs-attr">:offset-top</span>=<span class="hljs-string">&quot;50&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>吸顶距离<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-sticky</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zhi-ding-rong-qi" tabindex="-1">指定容器</h3><p>通过 <code>container</code> 属性可以指定组件的容器，页面滚动时，组件会始终保持在容器范围内，当组件即将超出容器底部时，会固定在容器的底部。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;container&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 150px;&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sticky</span> <span class="hljs-attr">:container</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span>&gt;</span>指定容器<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-sticky</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> container = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>);\n    <span class="hljs-keyword">return</span> { container };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xi-di-ju-chi" tabindex="-1">吸底距离</h3><p>将 <code>position</code> 设置为 <code>bottom</code> 可以让组件吸附在底部。通过 <code>offset-bottom</code> 属性可以设置组件在吸底时与底部的距离。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-sticky</span> <span class="hljs-attr">:offset-bottom</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>吸底距离<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-sticky</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>position <code>v3.0.6</code></td><td>吸附位置，可选值为 <code>bottom</code></td><td><em>string</em></td><td><code>top</code></td></tr><tr><td>offset-top</td><td>吸顶时与顶部的距离，支持 <code>px</code> <code>vw</code> <code>vh</code> <code>rem</code> 单位，默认 <code>px</code></td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>offset-bottom <code>v3.0.6</code></td><td>吸底时与底部的距离，支持 <code>px</code> <code>vw</code> <code>vh</code> <code>rem</code> 单位，默认 <code>px</code></td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>z-index</td><td>吸顶时的 z-index</td><td><em>number | string</em></td><td><code>99</code></td></tr><tr><td>container</td><td>容器对应的 HTML 节点</td><td><em>Element</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change <code>v3.0.10</code></td><td>当吸顶状态改变时触发</td><td><em>isFixed: boolean</em></td></tr><tr><td>scroll</td><td>滚动时触发</td><td><em>{ scrollTop: number, isFixed: boolean }</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">StickyPosition</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-sticky-z-index</td><td><em>99</em></td><td>-</td></tr></tbody></table></div>',14),De=[Pe],Ae={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ie,De)))},Ne={class:"van-doc-markdown-body"},Ee=t('<h1>内置样式</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>Vant 中默认包含了一些常用样式，可以直接通过 className 的方式使用。</p></div><div class="van-doc-card"><h3 id="wen-zi-sheng-lue" tabindex="-1">文字省略</h3><p>当文本内容长度超过容器最大宽度时，自动省略多余的文本。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 最多显示一行 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-ellipsis&quot;</span>&gt;</span>这是一段最多显示一行的文字，多余的内容会被省略<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 最多显示两行 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-multi-ellipsis--l2&quot;</span>&gt;</span>\n  这是一段最多显示两行的文字，多余的内容会被省略\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 最多显示三行 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-multi-ellipsis--l3&quot;</span>&gt;</span>\n  这是一段最多显示三行的文字，多余的内容会被省略\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="1px-bian-kuang" tabindex="-1">1px 边框</h3><p>为元素添加 Retina 屏幕下的 1px 边框（即 hairline），基于伪类 transform 实现。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 上边框 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-hairline--top&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 下边框 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-hairline--bottom&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 左边框 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-hairline--left&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 右边框 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-hairline--right&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 上下边框 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-hairline--top-bottom&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 全边框 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-hairline--surround&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="di-bu-an-quan-qu" tabindex="-1">底部安全区</h3><p>为元素添加底部安全区适配。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-safe-area-bottom&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="dong-hua" tabindex="-1">动画</h3><p>可以通过 <code>transition</code> 组件使用内置的动画类。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 淡入 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;van-fade&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;visible&quot;</span>&gt;</span>Fade<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 上滑进入 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;van-slide-up&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;visible&quot;</span>&gt;</span>Slide Up<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 下滑进入 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;van-slide-down&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;visible&quot;</span>&gt;</span>Slide Down<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 左滑进入 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;van-slide-left&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;visible&quot;</span>&gt;</span>Slide Left<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- 右滑进入 --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;van-slide-right&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;visible&quot;</span>&gt;</span>Slide Right<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span>\n</code></pre></div>',6),Re=[Ee],Ue={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ne,Re)))},Be={class:"van-doc-markdown-body"},Ve=t('<h1>SubmitBar 提交订单栏</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于展示订单金额与提交订单。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">SubmitBar</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SubmitBar</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-submit-bar</span> <span class="hljs-attr">:price</span>=<span class="hljs-string">&quot;3050&quot;</span> <span class="hljs-attr">button-text</span>=<span class="hljs-string">&quot;提交订单&quot;</span> @<span class="hljs-attr">submit</span>=<span class="hljs-string">&quot;onSubmit&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSubmit</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;点击按钮&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      onSubmit,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-zhuang-tai" tabindex="-1">禁用状态</h3><p>禁用状态下不会触发 <code>submit</code> 事件。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-submit-bar</span>\n  <span class="hljs-attr">disabled</span>\n  <span class="hljs-attr">:price</span>=<span class="hljs-string">&quot;3050&quot;</span>\n  <span class="hljs-attr">button-text</span>=<span class="hljs-string">&quot;提交订单&quot;</span>\n  <span class="hljs-attr">tip</span>=<span class="hljs-string">&quot;你的收货地址不支持同城送, 我们已为你推荐快递&quot;</span>\n  <span class="hljs-attr">tip-icon</span>=<span class="hljs-string">&quot;info-o&quot;</span>\n  @<span class="hljs-attr">submit</span>=<span class="hljs-string">&quot;onSubmit&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jia-zai-zhuang-tai" tabindex="-1">加载状态</h3><p>加载状态下不会触发 <code>submit</code> 事件。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-submit-bar</span>\n  <span class="hljs-attr">loading</span>\n  <span class="hljs-attr">:price</span>=<span class="hljs-string">&quot;3050&quot;</span>\n  <span class="hljs-attr">button-text</span>=<span class="hljs-string">&quot;提交订单&quot;</span>\n  @<span class="hljs-attr">submit</span>=<span class="hljs-string">&quot;onSubmit&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="gao-ji-yong-fa" tabindex="-1">高级用法</h3><p>通过插槽插入自定义内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-submit-bar</span> <span class="hljs-attr">:price</span>=<span class="hljs-string">&quot;3050&quot;</span> <span class="hljs-attr">button-text</span>=<span class="hljs-string">&quot;提交订单&quot;</span> @<span class="hljs-attr">submit</span>=<span class="hljs-string">&quot;onSubmit&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>全选<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">tip</span>&gt;</span>\n    你的收货地址不支持同城送, <span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onClickLink&quot;</span>&gt;</span>修改地址<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-submit-bar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSubmit</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;点击按钮&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickLink</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;修改地址&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      onSubmit,\n      onClickLink,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>price</td><td>金额（单位分）</td><td><em>number</em></td><td>-</td></tr><tr><td>decimal-length</td><td>金额小数点位数</td><td><em>number | string</em></td><td><code>2</code></td></tr><tr><td>label</td><td>金额左侧文案</td><td><em>string</em></td><td><code>合计：</code></td></tr><tr><td>suffix-label</td><td>金额右侧文案</td><td><em>string</em></td><td>-</td></tr><tr><td>text-align</td><td>金额文案对齐方向，可选值为 <code>left</code></td><td><em>string</em></td><td><code>right</code></td></tr><tr><td>button-text</td><td>按钮文字</td><td><em>string</em></td><td>-</td></tr><tr><td>button-type</td><td>按钮类型</td><td><em>string</em></td><td><code>danger</code></td></tr><tr><td>button-color</td><td>自定义按钮颜色</td><td><em>string</em></td><td>-</td></tr><tr><td>tip</td><td>在订单栏上方的提示文案</td><td><em>string</em></td><td>-</td></tr><tr><td>tip-icon</td><td>提示文案左侧的<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td>-</td></tr><tr><td>currency</td><td>货币符号</td><td><em>string</em></td><td><code>¥</code></td></tr><tr><td>disabled</td><td>是否禁用按钮</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loading</td><td>是否显示将按钮显示为加载中状态</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>safe-area-inset-bottom</td><td>是否开启<a href="#/zh-CN/advanced-usage#di-bu-an-quan-qu-gua-pei">底部安全区适配</a></td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>submit</td><td>按钮点击事件回调</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>自定义订单栏左侧内容</td></tr><tr><td>button</td><td>自定义按钮</td></tr><tr><td>top</td><td>自定义订单栏上方内容</td></tr><tr><td>tip</td><td>提示文案中的额外内容</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-submit-bar-height</td><td><em>50px</em></td><td>-</td></tr><tr><td>–van-submit-bar-z-index</td><td><em>100</em></td><td>-</td></tr><tr><td>–van-submit-bar-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-submit-bar-button-width</td><td><em>110px</em></td><td>-</td></tr><tr><td>–van-submit-bar-price-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-submit-bar-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-submit-bar-text-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-submit-bar-tip-padding</td><td><em>var(–van-padding-xs) var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-submit-bar-tip-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-submit-bar-tip-line-height</td><td><em>1.5</em></td><td>-</td></tr><tr><td>–van-submit-bar-tip-color</td><td><em>#f56723</em></td><td>-</td></tr><tr><td>–van-submit-bar-tip-background-color</td><td><em>#fff7cc</em></td><td>-</td></tr><tr><td>–van-submit-bar-tip-icon-size</td><td><em>12px</em></td><td>-</td></tr><tr><td>–van-submit-bar-button-height</td><td><em>40px</em></td><td>-</td></tr><tr><td>–van-submit-bar-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-submit-bar-price-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-submit-bar-price-integer-font-size</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-submit-bar-price-font-family</td><td><em>var(–van-price-integer-font-family)</em></td><td>-</td></tr></tbody></table></div>',14),Le=[Ve],Fe={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Be,Le)))},We={class:"van-doc-markdown-body"},Me=t('<h1>Swipe 轮播</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于循环播放一组图片或内容。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Swipe</span>, <span class="hljs-title class_">SwipeItem</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Swipe</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SwipeItem</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>每个 SwipeItem 代表一张轮播卡片，可以通过 <code>autoplay</code> 属性设置自动轮播的间隔。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-swipe&quot;</span> <span class="hljs-attr">:autoplay</span>=<span class="hljs-string">&quot;3000&quot;</span> <span class="hljs-attr">indicator-color</span>=<span class="hljs-string">&quot;white&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.my-swipe</span> <span class="hljs-selector-class">.van-swipe-item</span> {\n    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;\n    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;\n    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">150px</span>;\n    <span class="hljs-attribute">text-align</span>: center;\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#39a9ed</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="lan-jia-zai" tabindex="-1">懒加载</h3><p>当 Swipe 中含有图片时，可以通过 <code>lazy-render</code> 属性来开启懒加载模式。在懒加载模式下，只会渲染当前页和下一页。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span> <span class="hljs-attr">:autoplay</span>=<span class="hljs-string">&quot;3000&quot;</span> <span class="hljs-attr">lazy-render</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;image in images&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;image&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;image&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> images = [\n      <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n      <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n    ];\n    <span class="hljs-keyword">return</span> { images };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="jian-ting-change-shi-jian" tabindex="-1">监听 change 事件</h3><p>在每一页轮播结束后，会触发 <code>change</code> 事件。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">index</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;当前 Swipe 索引：&#39;</span> + index);\n    <span class="hljs-keyword">return</span> { onChange };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zong-xiang-gun-dong" tabindex="-1">纵向滚动</h3><p>设置 <code>vertical</code> 属性后滑块会纵向排列，此时需要指定滑块容器的高度。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 200px;&quot;</span> <span class="hljs-attr">vertical</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-hua-kuai-da-xiao" tabindex="-1">自定义滑块大小</h3><p>滑块默认宽度为 <code>100%</code>，可以通过 <code>width</code> 属性设置单个滑块的宽度。纵向滚动模式下，可以通过 <code>height</code> 属性设置单个滑块的高度。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span> <span class="hljs-attr">:loop</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">:width</span>=<span class="hljs-string">&quot;300&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span>\n</code></pre><blockquote><p>目前不支持在循环滚动模式下自定义滑块大小，因此需要将 loop 设置为 false。</p></blockquote></div><div class="van-doc-card"><h3 id="zi-ding-yi-zhi-shi-qi" tabindex="-1">自定义指示器</h3><p>通过 <code>indicator</code> 插槽可以自定义指示器的样式。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">indicator</span>=<span class="hljs-string">&quot;{ active }&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;custom-indicator&quot;</span>&gt;</span>{{ active + 1 }}/4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.custom-indicator</span> {\n    <span class="hljs-attribute">position</span>: absolute;\n    <span class="hljs-attribute">right</span>: <span class="hljs-number">5px</span>;\n    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">5px</span>;\n    <span class="hljs-attribute">padding</span>: <span class="hljs-number">2px</span> <span class="hljs-number">5px</span>;\n    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>;\n    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.1</span>);\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="swipe-props" tabindex="-1">Swipe Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>autoplay</td><td>自动轮播间隔，单位为 ms</td><td><em>number | string</em></td><td>-</td></tr><tr><td>duration</td><td>动画时长，单位为 ms</td><td><em>number | string</em></td><td><code>500</code></td></tr><tr><td>initial-swipe</td><td>初始位置索引值</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>width</td><td>滑块宽度，单位为 <code>px</code></td><td><em>number | string</em></td><td><code>auto</code></td></tr><tr><td>height</td><td>滑块高度，单位为 <code>px</code></td><td><em>number | string</em></td><td><code>auto</code></td></tr><tr><td>loop</td><td>是否开启循环播放</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-indicators</td><td>是否显示指示器</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>vertical</td><td>是否为纵向滚动</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>touchable</td><td>是否可以通过手势滑动</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>stop-propagation</td><td>是否阻止滑动事件冒泡</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>lazy-render</td><td>是否延迟渲染未展示的轮播</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>indicator-color</td><td>指示器颜色</td><td><em>string</em></td><td><code>#1989fa</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="swipe-events" tabindex="-1">Swipe Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>每一页轮播结束后触发</td><td>index, 当前页的索引</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="swipeitem-events" tabindex="-1">SwipeItem Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="swipe-fang-fa" tabindex="-1">Swipe 方法</h3><p>通过 ref 可以获取到 Swipe 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>prev</td><td>切换到上一轮播</td><td>-</td><td>-</td></tr><tr><td>next</td><td>切换到下一轮播</td><td>-</td><td>-</td></tr><tr><td>swipeTo</td><td>切换到指定位置</td><td><em>index: number, options: SwipeToOptions</em></td><td>-</td></tr><tr><td>resize</td><td>外层元素大小或组件显示状态变化时，可以调用此方法来触发重绘</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">SwipeInstance</span>, <span class="hljs-title class_">SwipeToOptions</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>SwipeInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">SwipeInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> swipeRef = ref&lt;<span class="hljs-title class_">SwipeInstance</span>&gt;();\n\nswipeRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">next</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="swipetooptions-ge-shi" tabindex="-1">SwipeToOptions 格式</h3><table><thead><tr><th>名称</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>immediate</td><td>是否跳过动画</td><td><em>boolean</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="swipe-slots" tabindex="-1">Swipe Slots</h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>default</td><td>轮播内容</td><td>-</td></tr><tr><td>indicator <code>v3.0.16</code></td><td>自定义指示器</td><td><em>{ active: number }</em></td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-swipe-indicator-size</td><td><em>6px</em></td><td>-</td></tr><tr><td>–van-swipe-indicator-margin</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-swipe-indicator-active-opacity</td><td><em>1</em></td><td>-</td></tr><tr><td>–van-swipe-indicator-inactive-opacity</td><td><em>0.3</em></td><td>-</td></tr><tr><td>–van-swipe-indicator-active-background-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-swipe-indicator-inactive-background-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="hua-dong-lun-bo-shi-wei-shi-me-chu-fa-liao-click-shi-jian" tabindex="-1">滑动轮播时为什么触发了 click 事件？</h3><p>这种情况通常是由于项目中引入了 <code>fastclick</code> 库导致的。<code>fastclick</code> 的原理是通过 Touch 事件模拟出 click 事件，而 Swipe 内部默认会阻止 touchmove 事件冒泡，干扰了 fastclick 的判断，导致出现这个问题。</p><p>将 Swipe 组件的 stop-propagation 属性设置为 false 即可避免该问题。</p></div><div class="van-doc-card"><h3 id="zai-zhuo-mian-duan-wu-fa-cao-zuo-zu-jian" tabindex="-1">在桌面端无法操作组件？</h3><p>参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei">桌面端适配</a>。</p></div><div class="van-doc-card"><h3 id="swipe-zu-jian-gong-neng-tai-shao-wu-fa-shi-xian-fu-za-xiao-guo" tabindex="-1">Swipe 组件功能太少，无法实现复杂效果？</h3><p>Vant 中的 Swipe 组件是比较轻量的，因此功能也比较基础。如果需要更复杂的轮播效果，推荐使用社区里一些优质的轮播库，比如 <a href="https://github.com/surmon-china/vue-awesome-swiper">vue-awesome-swiper</a>。</p></div><div class="van-doc-card"><h3 id="zu-jian-cong-yin-cang-zhuang-tai-qie-huan-dao-xian-shi-zhuang-tai-shi-wu-fa-zheng-que-xuan-ran" tabindex="-1">组件从隐藏状态切换到显示状态时，无法正确渲染？</h3><p>Swipe 组件在挂载时，会获取自身的宽度，并计算出轮播图的位置。如果组件一开始处于隐藏状态，则获取到的宽度永远为 0，因此无法正确计算位置。</p><h4 id="jie-jue-fang-fa" tabindex="-1">解决方法</h4><p>方法一，如果是使用 <code>v-show</code> 来控制组件展示的，则替换为 <code>v-if</code> 即可解决此问题：</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- Before --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;show&quot;</span> /&gt;</span>\n<span class="hljs-comment">&lt;!-- After --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;show&quot;</span> /&gt;</span>\n</code></pre><p>方法二，调用组件的 resize 方法来主动触发重绘：</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;swipe&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>.<span class="hljs-property">swipe</span>.<span class="hljs-title function_">resize</span>();\n</code></pre></div>',25),Oe=[Me],Ge={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",We,Oe)))},He={class:"van-doc-markdown-body"},Ke=t('<h1>SwipeCell 滑动单元格</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>可以左右滑动来展示操作按钮的单元格组件。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">SwipeCell</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SwipeCell</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p><code>SwipeCell</code> 组件提供了 <code>left</code> 和 <code>right</code> 两个插槽，用于定义两侧滑动区域的内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">left</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;选择&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">:border</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;删除&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;收藏&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-cell</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-nei-rong" tabindex="-1">自定义内容</h3><p><code>SwipeCell</code> 可以嵌套任意内容，比如嵌套一个商品卡片。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-card</span>\n    <span class="hljs-attr">num</span>=<span class="hljs-string">&quot;2&quot;</span>\n    <span class="hljs-attr">price</span>=<span class="hljs-string">&quot;2.00&quot;</span>\n    <span class="hljs-attr">desc</span>=<span class="hljs-string">&quot;描述信息&quot;</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;商品标题&quot;</span>\n    <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;goods-card&quot;</span>\n    <span class="hljs-attr">thumb</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/cat.jpeg&quot;</span>\n  /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;删除&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;delete-button&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-cell</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.goods-card</span> {\n    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;\n    <span class="hljs-attribute">background-color</span>: @white;\n  }\n\n  <span class="hljs-selector-class">.delete-button</span> {\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="yi-bu-guan-bi" tabindex="-1">异步关闭</h3><p>通过传入 <code>before-close</code> 回调函数，可以自定义两侧滑动内容关闭时的行为。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-cell</span> <span class="hljs-attr">:before-close</span>=<span class="hljs-string">&quot;beforeClose&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">left</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;选择&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">:border</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;单元格&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;内容&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;删除&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-cell</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Dialog</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-comment">// position 为关闭时点击的位置</span>\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">beforeClose</span> = (<span class="hljs-params">{ position }</span>) =&gt; {\n      <span class="hljs-keyword">switch</span> (position) {\n        <span class="hljs-keyword">case</span> <span class="hljs-string">&#39;left&#39;</span>:\n        <span class="hljs-keyword">case</span> <span class="hljs-string">&#39;cell&#39;</span>:\n        <span class="hljs-keyword">case</span> <span class="hljs-string">&#39;outside&#39;</span>:\n          <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n        <span class="hljs-keyword">case</span> <span class="hljs-string">&#39;right&#39;</span>:\n          <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n            <span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">confirm</span>({\n              <span class="hljs-attr">title</span>: <span class="hljs-string">&#39;确定删除吗？&#39;</span>,\n            }).<span class="hljs-title function_">then</span>(resolve);\n          });\n      }\n    };\n\n    <span class="hljs-keyword">return</span> { beforeClose };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>name</td><td>标识符，可以在事件参数中获取到</td><td><em>number | string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>left-width</td><td>指定左侧滑动区域宽度，单位为 <code>px</code></td><td><em>number | string</em></td><td><code>auto</code></td></tr><tr><td>right-width</td><td>指定右侧滑动区域宽度，单位为 <code>px</code></td><td><em>number | string</em></td><td><code>auto</code></td></tr><tr><td>before-close</td><td>关闭前的回调函数，返回 <code>false</code> 可阻止关闭，支持返回 Promise</td><td><em>(args) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr><tr><td>disabled</td><td>是否禁用滑动</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>stop-propagation</td><td>是否阻止滑动事件冒泡</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>默认显示的内容</td></tr><tr><td>left</td><td>左侧滑动区域的内容</td></tr><tr><td>right</td><td>右侧滑动区域的内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击时触发</td><td><em>position: ‘left’ | ‘right’ | ‘cell’ | ‘outside’</em></td></tr><tr><td>open</td><td>打开时触发</td><td><em>{ name: string | number, position: ‘left’ | ‘right’ }</em></td></tr><tr><td>close</td><td>关闭时触发</td><td><em>{ name: string | number, position: ‘left’ | ‘right’ | ‘cell’ | ‘outside’ }</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="beforeclose-can-shu" tabindex="-1">beforeClose 参数</h3><p>beforeClose 的第一个参数为对象，对象中包含以下属性：</p><table><thead><tr><th>参数名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>name</td><td>标识符</td><td><em>string | number</em></td></tr><tr><td>position</td><td>关闭时的点击位置</td><td><em>‘left’ | ‘right’ | ‘cell’ | ‘outside’</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><p>通过 ref 可以获取到 SwipeCell 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>open</td><td>打开单元格侧边栏</td><td>position: <code>left | right</code></td><td>-</td></tr><tr><td>close</td><td>收起单元格侧边栏</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">SwipeCellSide</span>, <span class="hljs-title class_">SwipeCellPosition</span>, <span class="hljs-title class_">SwipeCellInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>SwipeCellInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">SwipeCellInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> swipeCellRef = ref&lt;<span class="hljs-title class_">SwipeCellInstance</span>&gt;();\n\nswipeCellRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">close</span>();\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-switch-cell-padding-top</td><td><em>var(–van-cell-vertical-padding) - 1px</em></td><td>-</td></tr><tr><td>–van-switch-cell-padding-bottom</td><td><em>var(–van-cell-vertical-padding) - 1px</em></td><td>-</td></tr><tr><td>–van-switch-cell-large-padding-top</td><td><em>var(–van-cell-large-vertical-padding) - 1px</em></td><td>-</td></tr><tr><td>–van-switch-cell-large-padding-bottom</td><td><em>var(–van-cell-large-vertical-padding) - 1px</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="zai-zhuo-mian-duan-wu-fa-cao-zuo-zu-jian" tabindex="-1">在桌面端无法操作组件？</h3><p>参见<a href="#/zh-CN/advanced-usage#zhuo-mian-duan-gua-pei">桌面端适配</a>。</p></div>',18),$e=[Ke],Je={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",He,$e)))},Xe={class:"van-doc-markdown-body"},Ye=t('<h1>Switch 开关</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于在打开和关闭状态之间进行切换。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Switch</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Switch</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>v-model</code> 绑定开关的选中状态，<code>true</code> 表示开，<code>false</code> 表示关。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-keyword">return</span> { checked };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-zhuang-tai" tabindex="-1">禁用状态</h3><p>通过 <code>disabled</code> 属性来禁用开关，禁用状态下开关不可点击。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jia-zai-zhuang-tai" tabindex="-1">加载状态</h3><p>通过 <code>loading</code> 属性设置开关为加载状态，加载状态下开关不可点击。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">loading</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-da-xiao" tabindex="-1">自定义大小</h3><p>通过 <code>size</code> 属性自定义开关的大小。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24px&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yan-se" tabindex="-1">自定义颜色</h3><p><code>active-color</code> 属性表示打开时的背景色，<code>inactive-color</code> 表示关闭时的背景色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> <span class="hljs-attr">inactive-color</span>=<span class="hljs-string">&quot;#dcdee0&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="yi-bu-kong-zhi" tabindex="-1">异步控制</h3><p>需要异步控制开关时，可以使用 <code>modelValue</code> 属性和 <code>update:model-value</code> 事件代替 <code>v-model</code>，并在事件回调函数中手动处理开关状态。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">:model-value</span>=<span class="hljs-string">&quot;checked&quot;</span> @<span class="hljs-attr">update:model-value</span>=<span class="hljs-string">&quot;onUpdateValue&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Dialog</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onUpdateValue</span> = (<span class="hljs-params">newValue</span>) =&gt; {\n      <span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">confirm</span>({\n        <span class="hljs-attr">title</span>: <span class="hljs-string">&#39;提醒&#39;</span>,\n        <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;是否切换开关？&#39;</span>,\n      }).<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n        checked.<span class="hljs-property">value</span> = newValue;\n      });\n    };\n\n    <span class="hljs-keyword">return</span> {\n      checked,\n      onUpdateValue,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="da-pei-dan-yuan-ge-shi-yong" tabindex="-1">搭配单元格使用</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">center</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标题&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>开关选中状态</td><td><em>any</em></td><td><code>false</code></td></tr><tr><td>loading</td><td>是否为加载状态</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disabled</td><td>是否为禁用状态</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>size</td><td>开关尺寸，默认单位为<code>px</code></td><td><em>number | string</em></td><td><code>30px</code></td></tr><tr><td>active-color</td><td>打开时的背景色</td><td><em>string</em></td><td><code>#1989fa</code></td></tr><tr><td>inactive-color</td><td>关闭时的背景色</td><td><em>string</em></td><td><code>white</code></td></tr><tr><td>active-value</td><td>打开时对应的值</td><td><em>any</em></td><td><code>true</code></td></tr><tr><td>inactive-value</td><td>关闭时对应的值</td><td><em>any</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>开关状态切换时触发</td><td><em>value: any</em></td></tr><tr><td>click</td><td>点击时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-switch-size</td><td><em>30px</em></td><td>-</td></tr><tr><td>–van-switch-width</td><td><em>2em</em></td><td>-</td></tr><tr><td>–van-switch-height</td><td><em>1em</em></td><td>-</td></tr><tr><td>–van-switch-node-size</td><td><em>1em</em></td><td>-</td></tr><tr><td>–van-switch-node-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-switch-node-box-shadow</td><td><em>0 3px 1px 0 rgba(0, 0, 0, 0.05)</em></td><td>-</td></tr><tr><td>–van-switch-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-switch-on-background-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-switch-transition-duration</td><td><em>var(–van-animation-duration-base)</em></td><td>-</td></tr><tr><td>–van-switch-disabled-opacity</td><td><em>var(–van-disabled-opacity)</em></td><td>-</td></tr><tr><td>–van-switch-border</td><td><em>var(–van-border-width-base) solid rgba(0, 0, 0, 0.1)</em></td><td>-</td></tr></tbody></table></div>',16),Ze=[Ye],Qe={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Xe,Ze)))},sd={class:"van-doc-markdown-body"},ad=t('<h1>Tab 标签页</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>选项卡组件，用于在不同的内容区域之间进行切换。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Tab</span>, <span class="hljs-title class_">Tabs</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tab</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tabs</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>v-model:active</code> 绑定当前激活标签对应的索引值，默认情况下启用第一个标签。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签 1&quot;</span>&gt;</span>内容 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签 2&quot;</span>&gt;</span>内容 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签 3&quot;</span>&gt;</span>内容 3<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签 4&quot;</span>&gt;</span>内容 4<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">2</span>);\n    <span class="hljs-keyword">return</span> { active };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="tong-guo-ming-cheng-pi-pei" tabindex="-1">通过名称匹配</h3><p>在标签指定 <code>name</code> 属性的情况下，<code>v-model:active</code> 的值为当前标签的 <code>name</code>（此时无法通过索引值来匹配标签）。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;activeName&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签 1&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;a&quot;</span>&gt;</span>内容 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签 2&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;b&quot;</span>&gt;</span>内容 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签 3&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;c&quot;</span>&gt;</span>内容 3<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeName = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;a&#39;</span>);\n    <span class="hljs-keyword">return</span> { activeName };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="biao-qian-lan-gun-dong" tabindex="-1">标签栏滚动</h3><p>标签数量超过 5 个时，标签栏可以在水平方向上滚动，切换时会自动将当前标签居中。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 8&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;标签 &#39; + index&quot;</span>&gt;</span>\n    内容 {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-biao-qian" tabindex="-1">禁用标签</h3><p>设置 <code>disabled</code> 属性即可禁用标签。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签 1&quot;</span>&gt;</span>内容 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签 2&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>内容 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签 3&quot;</span>&gt;</span>内容 3<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="yang-shi-feng-ge" tabindex="-1">样式风格</h3><p><code>Tab</code> 支持两种样式风格：<code>line</code> 和<code>card</code>，默认为 <code>line</code> 样式，可以通过 <code>type</code> 属性切换样式风格。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;card&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签 1&quot;</span>&gt;</span>内容 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签 2&quot;</span>&gt;</span>内容 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签 3&quot;</span>&gt;</span>内容 3<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="dian-ji-shi-jian" tabindex="-1">点击事件</h3><p>点击标签页时，会触发 <code>click-tab</code> 事件。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> @<span class="hljs-attr">click-tab</span>=<span class="hljs-string">&quot;onClickTab&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签 1&quot;</span>&gt;</span>内容 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;标签 2&quot;</span>&gt;</span>内容 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickTab</span> = (<span class="hljs-params">{ title }</span>) =&gt; <span class="hljs-title class_">Toast</span>(title);\n    <span class="hljs-keyword">return</span> {\n      active,\n      onClickTab,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="nian-xing-bu-ju" tabindex="-1">粘性布局</h3><p>通过 <code>sticky</code> 属性可以开启粘性布局，粘性布局下，标签页滚动到顶部时会自动吸顶。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">sticky</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 4&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;选项 &#39; + index&quot;</span>&gt;</span>\n    内容 {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-biao-qian" tabindex="-1">自定义标签</h3><p>通过 <code>title</code> 插槽可以自定义标签内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">title</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;more-o&quot;</span> /&gt;</span>选项 <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    内容 {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="qie-huan-dong-hua" tabindex="-1">切换动画</h3><p>通过 <code>animated</code> 属性可以开启切换标签内容时的转场动画。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">animated</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 4&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;选项 &#39; + index&quot;</span>&gt;</span>\n    内容 {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="hua-dong-qie-huan" tabindex="-1">滑动切换</h3><p>通过 <code>swipeable</code> 属性可以开启滑动切换标签页。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">swipeable</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 4&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;选项 &#39; + index&quot;</span>&gt;</span>\n    内容 {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="gun-dong-dao-hang" tabindex="-1">滚动导航</h3><p>通过 <code>scrollspy</code> 属性可以开启滚动导航模式，该模式下，内容将会平铺展示。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">scrollspy</span> <span class="hljs-attr">sticky</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 8&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;选项 &#39; + index&quot;</span>&gt;</span>\n    内容 {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="yi-bu-qie-huan" tabindex="-1">异步切换</h3><p>通过 <code>before-change</code> 属性可以在切换标签前执行特定的逻辑。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">:before-change</span>=<span class="hljs-string">&quot;beforeChange&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 4&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;选项 &#39; + index&quot;</span>&gt;</span>\n    内容 {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">beforeChange</span> = (<span class="hljs-params">index</span>) =&gt; {\n      <span class="hljs-comment">// 返回 false 表示阻止此次切换</span>\n      <span class="hljs-keyword">if</span> (index === <span class="hljs-number">1</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n      }\n\n      <span class="hljs-comment">// 返回 Promise 来执行异步逻辑</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n        <span class="hljs-comment">// 在 resolve 函数中返回 true 或 false</span>\n        <span class="hljs-title function_">resolve</span>(index !== <span class="hljs-number">3</span>);\n      });\n    };\n\n    <span class="hljs-keyword">return</span> {\n      beforeChange,\n    };\n  },\n};\n</code></pre><blockquote><p>Tips: 通过手势滑动不会触发 before-change 属性。</p></blockquote></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="tabs-props" tabindex="-1">Tabs Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model:active</td><td>绑定当前选中标签的标识符</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>type</td><td>样式风格类型，可选值为 <code>card</code></td><td><em>string</em></td><td><code>line</code></td></tr><tr><td>color</td><td>标签主题色</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>background</td><td>标签栏背景色</td><td><em>string</em></td><td><code>white</code></td></tr><tr><td>duration</td><td>动画时间，单位秒，设置为 0 可以禁用动画</td><td><em>number | string</em></td><td><code>0.3</code></td></tr><tr><td>line-width</td><td>底部条宽度，默认单位 <code>px</code></td><td><em>number | string</em></td><td><code>40px</code></td></tr><tr><td>line-height</td><td>底部条高度，默认单位 <code>px</code></td><td><em>number | string</em></td><td><code>3px</code></td></tr><tr><td>animated</td><td>是否开启切换标签内容时的转场动画</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>border</td><td>是否显示标签栏外边框，仅在 <code>type=&quot;line&quot;</code> 时有效</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>ellipsis</td><td>是否省略过长的标题文字</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>sticky</td><td>是否使用粘性定位布局</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>swipeable</td><td>是否开启手势左右滑动切换</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>lazy-render</td><td>是否开启延迟渲染（首次切换到标签时才触发内容渲染）</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>scrollspy</td><td>是否开启滚动导航</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>offset-top</td><td>粘性定位布局下与顶部的最小距离，支持 <code>px</code> <code>vw</code> <code>vh</code> <code>rem</code> 单位，默认 <code>px</code></td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>swipe-threshold</td><td>滚动阈值，标签数量超过阈值且总宽度超过标签栏宽度时开始横向滚动</td><td><em>number | string</em></td><td><code>5</code></td></tr><tr><td>title-active-color</td><td>标题选中态颜色</td><td><em>string</em></td><td>-</td></tr><tr><td>title-inactive-color</td><td>标题默认态颜色</td><td><em>string</em></td><td>-</td></tr><tr><td>before-change</td><td>切换标签前的回调函数，返回 <code>false</code> 可阻止切换，支持返回 Promise</td><td><em>(name: number | string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tab-props" tabindex="-1">Tab Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>标题</td><td><em>string</em></td><td>-</td></tr><tr><td>disabled</td><td>是否禁用标签</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>dot</td><td>是否在标题右上角显示小红点</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>badge</td><td>图标右上角徽标的内容</td><td><em>number | string</em></td><td>-</td></tr><tr><td>name</td><td>标签名称，作为匹配的标识符</td><td><em>number | string</em></td><td>标签的索引值</td></tr><tr><td>url</td><td>点击后跳转的链接地址</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>点击后跳转的目标路由对象，等同于 vue-router 的 <a href="https://router.vuejs.org/zh/api/#to">to 属性</a></td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>是否在跳转时替换当前页面历史</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>title-style</td><td>自定义标题样式</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>title-class</td><td>自定义标题类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>show-zero-badge <code>v3.2.2</code></td><td>当 badge 为数字 0 时，是否展示徽标</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tabs-events" tabindex="-1">Tabs Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click-tab <code>v3.1.4</code></td><td>点击标签时触发</td><td><em>{ name: string | number, title: string, event: MouseEvent, disabled: boolean }</em></td></tr><tr><td>change</td><td>当前激活的标签改变时触发</td><td><em>name: string | number, title: string</em></td></tr><tr><td>rendered</td><td>标签内容首次渲染时触发（仅在开启延迟渲染后触发）</td><td><em>name: string | number, title: string</em></td></tr><tr><td>scroll</td><td>滚动时触发，仅在 sticky 模式下生效</td><td><em>{ scrollTop: number, isFixed: boolean }</em></td></tr></tbody></table><blockquote><p>提示：click 和 disabled 事件已废弃，请使用 click-tab 事件代替。</p></blockquote></div><div class="van-doc-card"><h3 id="tabs-fang-fa" tabindex="-1">Tabs 方法</h3><p>通过 ref 可以获取到 Tabs 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>resize</td><td>外层元素大小或组件显示状态变化时，可以调用此方法来触发重绘</td><td>-</td><td>-</td></tr><tr><td>scrollTo</td><td>滚动到指定的标签页，在滚动导航模式下可用</td><td><em>name: string | number</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">TabsType</span>, <span class="hljs-title class_">TabsInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>TabsInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">TabsInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> tabsRef = ref&lt;<span class="hljs-title class_">TabsInstance</span>&gt;();\n\ntabsRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">scrollTo</span>(<span class="hljs-number">0</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="tabs-slots" tabindex="-1">Tabs Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>nav-left</td><td>标签栏左侧内容</td></tr><tr><td>nav-right</td><td>标签栏右侧内容</td></tr><tr><td>nav-bottom <code>v3.1.1</code></td><td>标签栏下方内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tab-slots" tabindex="-1">Tab Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>标签页内容</td></tr><tr><td>title</td><td>自定义标题</td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-tab-text-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-tab-active-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-tab-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-tab-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-tab-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-tabs-default-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-tabs-line-height</td><td><em>44px</em></td><td>-</td></tr><tr><td>–van-tabs-card-height</td><td><em>30px</em></td><td>-</td></tr><tr><td>–van-tabs-nav-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-tabs-bottom-bar-width</td><td><em>40px</em></td><td>-</td></tr><tr><td>–van-tabs-bottom-bar-height</td><td><em>3px</em></td><td>-</td></tr><tr><td>–van-tabs-bottom-bar-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="zu-jian-cong-yin-cang-zhuang-tai-qie-huan-dao-xian-shi-zhuang-tai-shi-di-bu-tiao-wei-zhi-cuo-wu" tabindex="-1">组件从隐藏状态切换到显示状态时，底部条位置错误？</h3><p>Tabs 组件在挂载时，会获取自身的宽度，并计算出底部条的位置。如果组件一开始处于隐藏状态，则获取到的宽度永远为 0，因此无法展示底部条位置。</p><h4 id="jie-jue-fang-fa" tabindex="-1">解决方法</h4><p>方法一，如果是使用 <code>v-show</code> 来控制组件展示的，则替换为 <code>v-if</code> 即可解决此问题：</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- Before --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;show&quot;</span> /&gt;</span>\n<span class="hljs-comment">&lt;!-- After --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;show&quot;</span> /&gt;</span>\n</code></pre><p>方法二，调用组件的 resize 方法来主动触发重绘：</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;tabs&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>.<span class="hljs-property">tabs</span>.<span class="hljs-title function_">resize</span>();\n</code></pre></div>',28),td=[ad],nd={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",sd,td)))},ld={class:"van-doc-markdown-body"},ed=t('<h1>Tabbar 标签栏</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>底部导航栏，用于在不同页面之间进行切换。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Tabbar</span>, <span class="hljs-title class_">TabbarItem</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tabbar</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">TabbarItem</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p><code>v-model</code> 默认绑定选中标签的索引值，通过修改 <code>v-model</code> 即可切换选中的标签。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;friends-o&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;setting-o&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">return</span> { active };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="tong-guo-ming-cheng-pi-pei" tabindex="-1">通过名称匹配</h3><p>在标签指定 <code>name</code> 属性的情况下，<code>v-model</code> 的值为当前标签的 <code>name</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;home&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;friends&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;friends-o&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;setting&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;setting-o&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;home&#39;</span>);\n    <span class="hljs-keyword">return</span> { active };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="hui-biao-ti-shi" tabindex="-1">徽标提示</h3><p>设置 <code>dot</code> 属性后，会在图标右上角展示一个小红点；设置 <code>badge</code> 属性后，会在图标右上角展示相应的徽标。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">dot</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;friends-o&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;setting-o&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;20&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-tu-biao" tabindex="-1">自定义图标</h3><p>通过 <code>icon</code> 插槽自定义图标，可以通过 <code>slot-scope</code> 判断标签是否选中。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>自定义<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;props&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;props.active ? icon.active : icon.inactive&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;setting-o&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> icon = {\n      <span class="hljs-attr">active</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/user-active.png&#39;</span>,\n      <span class="hljs-attr">inactive</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/user-inactive.png&#39;</span>,\n    };\n    <span class="hljs-keyword">return</span> {\n      icon,\n      active,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yan-se" tabindex="-1">自定义颜色</h3><p>通过 <code>active-color</code> 属性设置选中标签的颜色，通过 <code>inactive-color</code> 属性设置未选中标签的颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> <span class="hljs-attr">inactive-color</span>=<span class="hljs-string">&quot;#000&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;friends-o&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;setting-o&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="jian-ting-qie-huan-shi-jian" tabindex="-1">监听切换事件</h3><p>通过 <code>change</code> 事件来监听选中标签的变化。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span>&gt;</span>标签 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span>标签 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;friends-o&quot;</span>&gt;</span>标签 3<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;setting-o&quot;</span>&gt;</span>标签 4<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">index</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">`标签 <span class="hljs-subst">${index}</span>`</span>);\n    <span class="hljs-keyword">return</span> {\n      icon,\n      onChange,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="lu-you-mo-shi" tabindex="-1">路由模式</h3><p>标签栏支持路由模式，用于搭配 <code>vue-router</code> 使用。路由模式下会匹配页面路径和标签的 <code>to</code> 属性，并自动选中对应的标签。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> /&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar</span> <span class="hljs-attr">route</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">replace</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/home&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">replace</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/search&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="tabbar-props" tabindex="-1">Tabbar Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>当前选中标签的名称或索引值</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>fixed</td><td>是否固定在底部</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>border</td><td>是否显示外边框</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>z-index</td><td>元素 z-index</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>active-color</td><td>选中标签的颜色</td><td><em>string</em></td><td><code>#1989fa</code></td></tr><tr><td>inactive-color</td><td>未选中标签的颜色</td><td><em>string</em></td><td><code>#7d7e80</code></td></tr><tr><td>route</td><td>是否开启路由模式</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>placeholder</td><td>固定在底部时，是否在标签位置生成一个等高的占位元素</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>safe-area-inset-bottom</td><td>是否开启<a href="#/zh-CN/advanced-usage#di-bu-an-quan-qu-gua-pei">底部安全区适配</a>，设置 fixed 时默认开启</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>before-change</td><td>切换标签前的回调函数，返回 <code>false</code> 可阻止切换，支持返回 Promise</td><td><em>(name: number | string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tabbar-events" tabindex="-1">Tabbar Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>切换标签时触发</td><td><em>active: number | string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tabbaritem-props" tabindex="-1">TabbarItem Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>name</td><td>标签名称，作为匹配的标识符</td><td><em>number | string</em></td><td>当前标签的索引值</td></tr><tr><td>icon</td><td><a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td>-</td></tr><tr><td>icon-prefix</td><td>图标类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props">class-prefix 属性</a></td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>dot</td><td>是否显示图标右上角小红点</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>badge</td><td>图标右上角徽标的内容</td><td><em>number | string</em></td><td>-</td></tr><tr><td>url</td><td>点击后跳转的链接地址</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>点击后跳转的目标路由对象，等同于 vue-router 的 <a href="https://router.vuejs.org/zh/api/#to">to 属性</a></td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>是否在跳转时替换当前页面历史</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tabbaritem-slots" tabindex="-1">TabbarItem Slots</h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>icon</td><td>自定义图标</td><td><em>active: boolean</em></td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-tabbar-height</td><td><em>50px</em></td><td>-</td></tr><tr><td>–van-tabbar-z-index</td><td><em>1</em></td><td>-</td></tr><tr><td>–van-tabbar-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-tabbar-item-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-tabbar-item-text-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-tabbar-item-active-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-tabbar-item-active-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-tabbar-item-line-height</td><td><em>1</em></td><td>-</td></tr><tr><td>–van-tabbar-item-icon-size</td><td><em>22px</em></td><td>-</td></tr><tr><td>–van-tabbar-item-icon-margin-bottom</td><td><em>var(–van-padding-base)</em></td><td>-</td></tr></tbody></table></div>',18),dd=[ed],pd={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",ld,dd)))},cd={class:"van-doc-markdown-body"},od=t('<h1>Tag 标签</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于标记关键词和概括主要内容。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Tag</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tag</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>type</code> 属性控制标签颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="kong-xin-yang-shi" tabindex="-1">空心样式</h3><p>设置 <code>plain</code> 属性设置为空心样式。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="yuan-jiao-yang-shi" tabindex="-1">圆角样式</h3><p>通过 <code>round</code> 设置为圆角样式。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">round</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="biao-ji-yang-shi" tabindex="-1">标记样式</h3><p>通过 <code>mark</code> 设置为标记样式(半圆角)。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">mark</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="ke-guan-bi-biao-qian" tabindex="-1">可关闭标签</h3><p>添加 <code>closeable</code> 属性表示标签是可关闭的，关闭标签时会触发 <code>close</code> 事件，在 <code>close</code> 事件中可以执行隐藏标签的逻辑。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">closeable</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;medium&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;close&quot;</span>&gt;</span>\n  标签\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">close</span> = (<span class="hljs-params"></span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      close,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="biao-qian-da-xiao" tabindex="-1">标签大小</h3><p>通过 <code>size</code> 属性调整标签大小。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;medium&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;large&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yan-se" tabindex="-1">自定义颜色</h3><p>通过 <code>color</code> 和 <code>text-color</code> 属性设置标签颜色。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#7232dd&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#ffe1e1&quot;</span> <span class="hljs-attr">text-color</span>=<span class="hljs-string">&quot;#ad0000&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#7232dd&quot;</span> <span class="hljs-attr">plain</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>类型，可选值为 <code>primary</code> <code>success</code> <code>danger</code> <code>warning</code></td><td><em>string</em></td><td><code>default</code></td></tr><tr><td>size</td><td>大小, 可选值为 <code>large</code> <code>medium</code></td><td><em>string</em></td><td>-</td></tr><tr><td>color</td><td>标签颜色</td><td><em>string</em></td><td>-</td></tr><tr><td>show</td><td>是否展示标签</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>plain</td><td>是否为空心样式</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>round</td><td>是否为圆角样式</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>mark</td><td>是否为标记样式</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>text-color</td><td>文本颜色，优先级高于 <code>color</code> 属性</td><td><em>string</em></td><td><code>white</code></td></tr><tr><td>closeable</td><td>是否为可关闭标签</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>标签显示内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>close</td><td>关闭标签时触发</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-tag-padding</td><td><em>0 var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-tag-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-tag-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-tag-border-radius</td><td><em>2px</em></td><td>-</td></tr><tr><td>–van-tag-line-height</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-tag-medium-padding</td><td><em>2px 6px</em></td><td>-</td></tr><tr><td>–van-tag-large-padding</td><td><em>var(–van-padding-base) var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-tag-large-border-radius</td><td><em>var(–van-border-radius-md)</em></td><td>-</td></tr><tr><td>–van-tag-large-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-tag-round-border-radius</td><td><em>var(–van-border-radius-max)</em></td><td>-</td></tr><tr><td>–van-tag-danger-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-tag-primary-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-tag-success-color</td><td><em>var(–van-success-color)</em></td><td>-</td></tr><tr><td>–van-tag-warning-color</td><td><em>var(–van-warning-color)</em></td><td>-</td></tr><tr><td>–van-tag-default-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-tag-plain-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr></tbody></table></div>',17),rd=[od],id={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",cd,rd)))},hd={class:"van-doc-markdown-body"},jd=t('<h1>Toast 轻提示</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>在页面中间弹出黑色半透明提示，用于消息通知、加载提示、操作结果提示等场景。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Toast</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="wen-zi-ti-shi" tabindex="-1">文字提示</h3><pre><code class="language-js"><span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;提示内容&#39;</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="jia-zai-ti-shi" tabindex="-1">加载提示</h3><p>使用 <code>Toast.loading</code> 方法展示加载提示，通过 <code>forbidClick</code> 属性可以禁用背景点击。</p><pre><code class="language-js"><span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">loading</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;加载中...&#39;</span>,\n  <span class="hljs-attr">forbidClick</span>: <span class="hljs-literal">true</span>,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="cheng-gong-shi-bai-ti-shi" tabindex="-1">成功/失败提示</h3><p>使用 <code>Toast.success</code> 方法展示成功提示，使用 <code>Toast.fail</code> 方法展示失败提示。</p><pre><code class="language-js"><span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#39;成功文案&#39;</span>);\n<span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">fail</span>(<span class="hljs-string">&#39;失败文案&#39;</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-tu-biao" tabindex="-1">自定义图标</h3><p>通过 <code>icon</code> 选项可以自定义图标，支持传入<a href="#/zh-CN/icon">图标名称</a>或图片链接，通过<code>loadingType</code> 属性可以自定义加载图标类型。</p><pre><code class="language-js"><span class="hljs-title class_">Toast</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;自定义图标&#39;</span>,\n  <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;like-o&#39;</span>,\n});\n\n<span class="hljs-title class_">Toast</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;自定义图片&#39;</span>,\n  <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/logo.png&#39;</span>,\n});\n\n<span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">loading</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;加载中...&#39;</span>,\n  <span class="hljs-attr">forbidClick</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">loadingType</span>: <span class="hljs-string">&#39;spinner&#39;</span>,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-wei-zhi" tabindex="-1">自定义位置</h3><p>Toast 默认渲染在屏幕正中位置，通过 <code>position</code> 属性可以控制 Toast 展示的位置。</p><pre><code class="language-js"><span class="hljs-title class_">Toast</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;顶部展示&#39;</span>,\n  <span class="hljs-attr">position</span>: <span class="hljs-string">&#39;top&#39;</span>,\n});\n\n<span class="hljs-title class_">Toast</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;底部展示&#39;</span>,\n  <span class="hljs-attr">position</span>: <span class="hljs-string">&#39;bottom&#39;</span>,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="dong-tai-geng-xin-ti-shi" tabindex="-1">动态更新提示</h3><p>执行 Toast 方法时会返回对应的 Toast 实例，通过修改实例上的 <code>message</code> 属性可以实现动态更新提示的效果。</p><pre><code class="language-js"><span class="hljs-keyword">const</span> toast = <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">loading</span>({\n  <span class="hljs-attr">duration</span>: <span class="hljs-number">0</span>,\n  <span class="hljs-attr">forbidClick</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;倒计时 3 秒&#39;</span>,\n});\n\n<span class="hljs-keyword">let</span> second = <span class="hljs-number">3</span>;\n<span class="hljs-keyword">const</span> timer = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> {\n  second--;\n  <span class="hljs-keyword">if</span> (second) {\n    toast.<span class="hljs-property">message</span> = <span class="hljs-string">`倒计时 <span class="hljs-subst">${second}</span> 秒`</span>;\n  } <span class="hljs-keyword">else</span> {\n    <span class="hljs-built_in">clearInterval</span>(timer);\n    <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">clear</span>();\n  }\n}, <span class="hljs-number">1000</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="quan-ju-fang-fa" tabindex="-1">全局方法</h3><p>通过 <code>app.use</code> 全局注册 Toast 组件后，会自动在 app 的所有子组件上挂载 <code>$toast</code> 方法，便于在组件内调用。</p><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.$toast(<span class="hljs-string">&#39;提示文案&#39;</span>);\n  },\n};\n</code></pre><blockquote><p>Tips: 由于 setup 选项中无法访问 this，因此不能使用上述方式，请通过 import 引入。</p></blockquote></div><div class="van-doc-card"><h3 id="dan-li-mo-shi" tabindex="-1">单例模式</h3><p>Toast 默认采用单例模式，即同一时间只会存在一个 Toast，如果需要在同一时间弹出多个 Toast，可以参考下面的示例：</p><pre><code class="language-js"><span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">allowMultiple</span>();\n\n<span class="hljs-keyword">const</span> toast1 = <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;第一个 Toast&#39;</span>);\n<span class="hljs-keyword">const</span> toast2 = <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#39;第二个 Toast&#39;</span>);\n\ntoast1.<span class="hljs-title function_">clear</span>();\ntoast2.<span class="hljs-title function_">clear</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="xiu-gai-mo-ren-pei-zhi" tabindex="-1">修改默认配置</h3><p>通过 <code>Toast.setDefaultOptions</code> 函数可以全局修改 Toast 的默认配置。</p><pre><code class="language-js"><span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">setDefaultOptions</span>({ <span class="hljs-attr">duration</span>: <span class="hljs-number">2000</span> });\n\n<span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">setDefaultOptions</span>(<span class="hljs-string">&#39;loading&#39;</span>, { <span class="hljs-attr">forbidClick</span>: <span class="hljs-literal">true</span> });\n\n<span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">resetDefaultOptions</span>();\n\n<span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">resetDefaultOptions</span>(<span class="hljs-string">&#39;loading&#39;</span>);\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>Toast</td><td>展示提示</td><td><code>options | message</code></td><td>toast 实例</td></tr><tr><td>Toast.loading</td><td>展示加载提示</td><td><code>options | message</code></td><td>toast 实例</td></tr><tr><td>Toast.success</td><td>展示成功提示</td><td><code>options | message</code></td><td>toast 实例</td></tr><tr><td>Toast.fail</td><td>展示失败提示</td><td><code>options | message</code></td><td>toast 实例</td></tr><tr><td>Toast.clear</td><td>关闭提示</td><td><code>clearAll: boolean</code></td><td><code>void</code></td></tr><tr><td>Toast.allowMultiple</td><td>允许同时存在多个 Toast</td><td>-</td><td><code>void</code></td></tr><tr><td>Toast.setDefaultOptions</td><td>修改默认配置，对所有 Toast 生效。<br>传入 type 可以修改指定类型的默认配置</td><td><code>type | options</code></td><td><code>void</code></td></tr><tr><td>Toast.resetDefaultOptions</td><td>重置默认配置，对所有 Toast 生效。<br>传入 type 可以重置指定类型的默认配置</td><td><code>type</code></td><td><code>void</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="toastoptions-shu-ju-jie-gou" tabindex="-1">ToastOptions 数据结构</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>提示类型，可选值为 <code>loading</code> <code>success</code><br><code>fail</code> <code>html</code></td><td><em>ToastType</em></td><td><code>text</code></td></tr><tr><td>position</td><td>位置，可选值为 <code>top</code> <code>bottom</code></td><td><em>ToastPosition</em></td><td><code>middle</code></td></tr><tr><td>message</td><td>文本内容，支持通过<code>\\n</code>换行</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>icon</td><td>自定义图标，支持传入<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td>-</td></tr><tr><td>iconSize</td><td>图标大小，如 <code>20px</code> <code>2em</code>，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>36px</code></td></tr><tr><td>iconPrefix</td><td>图标类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props">class-prefix 属性</a></td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>overlay</td><td>是否显示背景遮罩层</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>forbidClick</td><td>是否禁止背景点击</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>closeOnClick</td><td>是否在点击后关闭</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>closeOnClickOverlay</td><td>是否在点击遮罩层后关闭</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loadingType</td><td><a href="#/zh-CN/loading">加载图标类型</a>, 可选值为 <code>spinner</code></td><td><em>string</em></td><td><code>circular</code></td></tr><tr><td>duration</td><td>展示时长(ms)，值为 0 时，toast 不会消失</td><td><em>number</em></td><td><code>2000</code></td></tr><tr><td>className</td><td>自定义类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>overlayClass <code>v3.0.4</code></td><td>自定义遮罩层类名</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>overlayStyle <code>v3.0.4</code></td><td>自定义遮罩层样式</td><td><em>object</em></td><td>-</td></tr><tr><td>onOpened</td><td>完全展示后的回调函数</td><td><em>Function</em></td><td>-</td></tr><tr><td>onClose</td><td>关闭时的回调函数</td><td><em>Function</em></td><td>-</td></tr><tr><td>transition</td><td>动画类名，等价于 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#transition">transition</a> 的<code>name</code>属性</td><td><em>string</em></td><td><code>van-fade</code></td></tr><tr><td>teleport</td><td>指定挂载的节点，等同于 Teleport 组件的 <a href="https://v3.cn.vuejs.org/api/built-in-components.html#teleport">to 属性</a></td><td><em>string | Element</em></td><td><code>body</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ToastType</span>, <span class="hljs-title class_">ToastOptions</span>, <span class="hljs-title class_">ToastPosition</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-toast-max-width</td><td><em>70%</em></td><td>-</td></tr><tr><td>–van-toast-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-toast-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-toast-loading-icon-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-toast-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-toast-border-radius</td><td><em>var(–van-border-radius-lg)</em></td><td>-</td></tr><tr><td>–van-toast-background-color</td><td><em>fade(var(–van-black), 70%)</em></td><td>-</td></tr><tr><td>–van-toast-icon-size</td><td><em>36px</em></td><td>-</td></tr><tr><td>–van-toast-text-min-width</td><td><em>96px</em></td><td>-</td></tr><tr><td>–van-toast-text-padding</td><td><em>var(–van-padding-xs) var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-toast-default-padding</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-toast-default-width</td><td><em>88px</em></td><td>-</td></tr><tr><td>–van-toast-default-min-height</td><td><em>88px</em></td><td>-</td></tr><tr><td>–van-toast-position-top-distance</td><td><em>20%</em></td><td>-</td></tr><tr><td>–van-toast-position-bottom-distance</td><td><em>20%</em></td><td>-</td></tr></tbody></table></div>',19),ud=[jd],gd={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",hd,ud)))},md={class:"van-doc-markdown-body"},vd=t('<h1>TreeSelect 分类选择</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于从一组相关联的数据集合中进行选择。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">TreeSelect</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">TreeSelect</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="dan-xuan-mo-shi" tabindex="-1">单选模式</h3><p><code>item</code> 为分类显示所需的数据，数据格式见下方示例。<code>main-active-index</code> 表示左侧高亮选项的索引，<code>active-id</code> 表示右侧高亮选项的 id。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tree-select</span>\n  <span class="hljs-attr">v-model:active-id</span>=<span class="hljs-string">&quot;activeId&quot;</span>\n  <span class="hljs-attr">v-model:main-active-index</span>=<span class="hljs-string">&quot;activeIndex&quot;</span>\n  <span class="hljs-attr">:items</span>=<span class="hljs-string">&quot;items&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeId = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>);\n    <span class="hljs-keyword">const</span> activeIndex = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> items = [\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;浙江&#39;</span>,\n        <span class="hljs-attr">children</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;杭州&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">1</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;温州&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">2</span> },\n        ],\n      },\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;江苏&#39;</span>,\n        <span class="hljs-attr">children</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;南京&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">5</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;无锡&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">6</span> },\n        ],\n      },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      items,\n      activeId,\n      activeIndex,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="duo-xuan-mo-shi" tabindex="-1">多选模式</h3><p><code>active-id</code> 为数组格式时，可以选中多个右侧选项。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tree-select</span>\n  <span class="hljs-attr">v-model:active-id</span>=<span class="hljs-string">&quot;activeIds&quot;</span>\n  <span class="hljs-attr">v-model:main-active-index</span>=<span class="hljs-string">&quot;activeIndex&quot;</span>\n  <span class="hljs-attr">:items</span>=<span class="hljs-string">&quot;items&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeId = <span class="hljs-title function_">ref</span>([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]);\n    <span class="hljs-keyword">const</span> activeIndex = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> items = [\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;浙江&#39;</span>,\n        <span class="hljs-attr">children</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;杭州&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">1</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;温州&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">2</span> },\n        ],\n      },\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;江苏&#39;</span>,\n        <span class="hljs-attr">children</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;南京&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">5</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;无锡&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">6</span> },\n        ],\n      },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      items,\n      activeId,\n      activeIndex,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-nei-rong" tabindex="-1">自定义内容</h3><p>通过 <code>content</code> 插槽可以自定义右侧区域的内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tree-select</span>\n  <span class="hljs-attr">v-model:main-active-index</span>=<span class="hljs-string">&quot;activeIndex&quot;</span>\n  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;55vw&quot;</span>\n  <span class="hljs-attr">:items</span>=<span class="hljs-string">&quot;items&quot;</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">content</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-image</span>\n      <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;activeIndex === 0&quot;</span>\n      <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/apple-1.jpg&quot;</span>\n    /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-image</span>\n      <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;activeIndex === 1&quot;</span>\n      <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/apple-2.jpg&quot;</span>\n    /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tree-select</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeIndex = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">return</span> {\n      activeIndex,\n      <span class="hljs-attr">items</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;分组 1&#39;</span> }, { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;分组 2&#39;</span> }],\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="hui-biao-ti-shi" tabindex="-1">徽标提示</h3><p>设置 <code>dot</code> 属性后，会在图标右上角展示一个小红点；设置 <code>badge</code> 属性后，会在图标右上角展示相应的徽标。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tree-select</span>\n  <span class="hljs-attr">v-model:main-active-index</span>=<span class="hljs-string">&quot;activeIndex&quot;</span>\n  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;55vw&quot;</span>\n  <span class="hljs-attr">:items</span>=<span class="hljs-string">&quot;items&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeIndex = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">return</span> {\n      activeIndex,\n      <span class="hljs-attr">items</span>: [\n        { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;浙江&#39;</span>, <span class="hljs-attr">children</span>: [], <span class="hljs-attr">dot</span>: <span class="hljs-literal">true</span> },\n        { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;江苏&#39;</span>, <span class="hljs-attr">children</span>: [], <span class="hljs-attr">badge</span>: <span class="hljs-number">5</span> },\n      ],\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>items</td><td>分类显示所需的数据</td><td><em>TreeSelectItem[]</em></td><td><code>[]</code></td></tr><tr><td>height</td><td>高度，默认单位为<code>px</code></td><td><em>number | string</em></td><td><code>300</code></td></tr><tr><td>main-active-index</td><td>左侧选中项的索引</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>active-id</td><td>右侧选中项的 id，支持传入数组</td><td><em>number | string |<br>(number | string)[]</em></td><td><code>0</code></td></tr><tr><td>max</td><td>右侧项最大选中个数</td><td><em>number | string</em></td><td><code>Infinity</code></td></tr><tr><td>selected-icon</td><td>自定义右侧栏选中状态的图标</td><td><em>string</em></td><td><code>success</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click-nav</td><td>点击左侧导航时触发</td><td><em>index: number</em></td></tr><tr><td>click-item</td><td>点击右侧选择项时触发</td><td><em>item: TreeSelectChild</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>content</td><td>自定义右侧区域内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="treeselectitem-shu-ju-jie-gou" tabindex="-1">TreeSelectItem 数据结构</h3><p><code>TreeSelectItem</code> 整体为一个数组，数组内包含一系列描述分类的对象，每个分类里，<code>text</code> 表示当前分类的名称，<code>children</code> 表示分类里的可选项。</p><pre><code class="language-js">[\n  {\n    <span class="hljs-comment">// 导航名称</span>\n    <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;所有城市&#39;</span>,\n    <span class="hljs-comment">// \b导航名称右上角徽标</span>\n    <span class="hljs-attr">badge</span>: <span class="hljs-number">3</span>,\n    <span class="hljs-comment">// 是否在导航名称右上角显示小红点</span>\n    <span class="hljs-attr">dot</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-comment">// 导航节点额外类名</span>\n    <span class="hljs-attr">className</span>: <span class="hljs-string">&#39;my-class&#39;</span>,\n    <span class="hljs-comment">// 该导航下所有的可选项</span>\n    <span class="hljs-attr">children</span>: [\n      {\n        <span class="hljs-comment">// 名称</span>\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;温州&#39;</span>,\n        <span class="hljs-comment">// id，作为匹配选中状态的标识符</span>\n        <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>,\n        <span class="hljs-comment">// 禁用选项</span>\n        <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>,\n      },\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;杭州&#39;</span>,\n        <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>,\n      },\n    ],\n  },\n];\n</code></pre></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">TreeSelectItem</span>, <span class="hljs-title class_">TreeSelectChild</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-tree-select-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-tree-select-nav-background-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-tree-select-content-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-tree-select-nav-item-padding</td><td><em>14px var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-tree-select-item-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-tree-select-item-active-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-tree-select-item-disabled-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-tree-select-item-selected-size</td><td><em>16px</em></td><td>-</td></tr></tbody></table></div>',16),bd=[vd],fd={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",md,bd)))},yd={class:"van-doc-markdown-body"},wd=t('<h1>Uploader 文件上传</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>用于将本地的图片或文件上传至服务器，并在上传过程中展示预览图和上传进度。目前 Uploader 组件不包含将文件上传至服务器的接口逻辑，该步骤需要自行实现。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Uploader</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Uploader</span>);\n</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>文件上传完毕后会触发 <code>after-read</code> 回调函数，获取到对应的 <code>file</code> 对象。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">:after-read</span>=<span class="hljs-string">&quot;afterRead&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">afterRead</span> = (<span class="hljs-params">file</span>) =&gt; {\n      <span class="hljs-comment">// 此时可以自行将文件上传至服务器</span>\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(file);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      afterRead,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="wen-jian-yu-lan" tabindex="-1">文件预览</h3><p>通过 <code>v-model</code> 可以绑定已经上传的文件列表，并展示文件列表的预览图。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fileList&quot;</span> <span class="hljs-attr">multiple</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> fileList = <span class="hljs-title function_">ref</span>([\n      { <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/leaf.jpg&#39;</span> },\n      <span class="hljs-comment">// Uploader 根据文件后缀来判断是否为图片文件</span>\n      <span class="hljs-comment">// 如果图片 URL 中不包含类型信息，可以添加 isImage 标记来声明</span>\n      { <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://cloud-image&#39;</span>, <span class="hljs-attr">isImage</span>: <span class="hljs-literal">true</span> },\n    ]);\n\n    <span class="hljs-keyword">return</span> {\n      fileList,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="shang-chuan-zhuang-tai" tabindex="-1">上传状态</h3><p>通过 <code>status</code> 属性可以标识上传状态，<code>uploading</code> 表示上传中，<code>failed</code> 表示上传失败，<code>done</code> 表示上传完成。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fileList&quot;</span> <span class="hljs-attr">:after-read</span>=<span class="hljs-string">&quot;afterRead&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> fileList = <span class="hljs-title function_">ref</span>([\n      {\n        <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/leaf.jpg&#39;</span>,\n        <span class="hljs-attr">status</span>: <span class="hljs-string">&#39;uploading&#39;</span>,\n        <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;上传中...&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/tree.jpg&#39;</span>,\n        <span class="hljs-attr">status</span>: <span class="hljs-string">&#39;failed&#39;</span>,\n        <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;上传失败&#39;</span>,\n      },\n    ]);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">afterRead</span> = (<span class="hljs-params">file</span>) =&gt; {\n      file.<span class="hljs-property">status</span> = <span class="hljs-string">&#39;uploading&#39;</span>;\n      file.<span class="hljs-property">message</span> = <span class="hljs-string">&#39;上传中...&#39;</span>;\n\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        file.<span class="hljs-property">status</span> = <span class="hljs-string">&#39;failed&#39;</span>;\n        file.<span class="hljs-property">message</span> = <span class="hljs-string">&#39;上传失败&#39;</span>;\n      }, <span class="hljs-number">1000</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      fileList,\n      afterRead,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xian-zhi-shang-chuan-shu-liang" tabindex="-1">限制上传数量</h3><p>通过 <code>max-count</code> 属性可以限制上传文件的数量，上传数量达到限制后，会自动隐藏上传区域。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fileList&quot;</span> <span class="hljs-attr">multiple</span> <span class="hljs-attr">:max-count</span>=<span class="hljs-string">&quot;2&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> fileList = <span class="hljs-title function_">ref</span>([]);\n\n    <span class="hljs-keyword">return</span> {\n      fileList,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="xian-zhi-shang-chuan-da-xiao" tabindex="-1">限制上传大小</h3><p>通过 <code>max-size</code> 属性可以限制上传文件的大小，超过大小的文件会被自动过滤，这些文件信息可以通过 <code>oversize</code> 事件获取。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">multiple</span> <span class="hljs-attr">:max-size</span>=<span class="hljs-string">&quot;500 * 1024&quot;</span> @<span class="hljs-attr">oversize</span>=<span class="hljs-string">&quot;onOversize&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onOversize</span> = (<span class="hljs-params">file</span>) =&gt; {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(file);\n      <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;文件大小不能超过 500kb&#39;</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      onOversize,\n    };\n  },\n};\n</code></pre><p>如果需要针对不同类型的文件来作出不同的大小限制，可以在 <code>max-size</code> 属性中传入一个函数，在函数中通过 <code>file.type</code> 区分文件类型，返回 <code>true</code> 表示超出限制，<code>false</code> 表示未超出限制。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">multiple</span> <span class="hljs-attr">:max-size</span>=<span class="hljs-string">&quot;isOverSize&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">isOverSize</span> = (<span class="hljs-params">file</span>) =&gt; {\n      <span class="hljs-keyword">const</span> maxSize = file.<span class="hljs-property">type</span> === <span class="hljs-string">&#39;image/jpeg&#39;</span> ? <span class="hljs-number">500</span> * <span class="hljs-number">1024</span> : <span class="hljs-number">1000</span> * <span class="hljs-number">1024</span>;\n      <span class="hljs-keyword">return</span> file.<span class="hljs-property">size</span> &gt;= maxSize;\n    };\n    <span class="hljs-keyword">return</span> {\n      isOverSize,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-shang-chuan-yang-shi" tabindex="-1">自定义上传样式</h3><p>通过默认插槽可以自定义上传区域的样式。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;plus&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>上传文件<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-uploader</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-yu-lan-yang-shi" tabindex="-1">自定义预览样式</h3><p>通过 <code>preview-cover</code> 插槽可以自定义覆盖在预览区域上方的内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fileList&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">preview-cover</span>=<span class="hljs-string">&quot;{ file }&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;preview-cover van-ellipsis&quot;</span>&gt;</span>{{ file.name }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-uploader</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.preview-cover</span> {\n    <span class="hljs-attribute">position</span>: absolute;\n    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;\n    <span class="hljs-attribute">box-sizing</span>: border-box;\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;\n    <span class="hljs-attribute">padding</span>: <span class="hljs-number">4px</span>;\n    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;\n    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>;\n    <span class="hljs-attribute">text-align</span>: center;\n    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.3</span>);\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="shang-chuan-qian-zhi-chu-li" tabindex="-1">上传前置处理</h3><p>通过传入 <code>beforeRead</code> 函数可以在上传前进行校验和处理，返回 <code>true</code> 表示校验通过，返回 <code>false</code> 表示校验失败。支持返回 <code>Promise</code> 对 file 对象进行自定义处理，例如压缩图片。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">:before-read</span>=<span class="hljs-string">&quot;beforeRead&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-comment">// 返回布尔值</span>\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">beforeRead</span> = (<span class="hljs-params">file</span>) =&gt; {\n      <span class="hljs-keyword">if</span> (file.<span class="hljs-property">type</span> !== <span class="hljs-string">&#39;image/jpeg&#39;</span>) {\n        <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;请上传 jpg 格式图片&#39;</span>);\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n      }\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n    };\n\n    <span class="hljs-comment">// 返回 Promise</span>\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">asyncBeforeRead</span> = (<span class="hljs-params">file</span>) =&gt;\n      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {\n        <span class="hljs-keyword">if</span> (file.<span class="hljs-property">type</span> !== <span class="hljs-string">&#39;image/jpeg&#39;</span>) {\n          <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;请上传 jpg 格式图片&#39;</span>);\n          <span class="hljs-title function_">reject</span>();\n        } <span class="hljs-keyword">else</span> {\n          <span class="hljs-keyword">const</span> img = <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>([<span class="hljs-string">&#39;foo&#39;</span>], <span class="hljs-string">&#39;bar.jpg&#39;</span>, {\n            <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;image/jpeg&#39;</span>,\n          });\n          <span class="hljs-title function_">resolve</span>(img);\n        }\n      });\n\n    <span class="hljs-keyword">return</span> {\n      beforeRead,\n      asyncBeforeRead,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="jin-yong-wen-jian-shang-chuan" tabindex="-1">禁用文件上传</h3><p>通过 <code>disabled</code> 属性禁用文件上传。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">disabled</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-dan-ge-tu-pian-yu-lan" tabindex="-1">自定义单个图片预览</h3><p>在 <code>v-model</code> 数组中设置单个预览图片属性，支持 <code>imageFit</code> <code>deletable</code> <code>previewSize</code> <code>beforeDelete</code>。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fileList&quot;</span> <span class="hljs-attr">:deletable</span>=<span class="hljs-string">&quot;false&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> fileList = <span class="hljs-title function_">ref</span>([\n      { <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/leaf.jpg&#39;</span> },\n      {\n        <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/sand.jpg&#39;</span>,\n        <span class="hljs-attr">deletable</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-attr">beforeDelete</span>: <span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;自定义单个预览图片的事件和样式&#39;</span>);\n        },\n      },\n      {\n        <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/tree.jpg&#39;</span>,\n        <span class="hljs-attr">deletable</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-attr">imageFit</span>: <span class="hljs-string">&#39;contain&#39;</span>,\n        <span class="hljs-attr">previewSize</span>: <span class="hljs-number">120</span>,\n      },\n    ]);\n\n    <span class="hljs-keyword">return</span> { fileList };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>已上传的文件列表</td><td><em>FileListItem[]</em></td><td>-</td></tr><tr><td>accept</td><td>允许上传的文件类型，<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input/file#%E9%99%90%E5%88%B6%E5%85%81%E8%AE%B8%E7%9A%84%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B">详细说明</a></td><td><em>string</em></td><td><code>image/*</code></td></tr><tr><td>name</td><td>标识符，可以在回调函数的第二项参数中获取</td><td><em>number | string</em></td><td>-</td></tr><tr><td>preview-size</td><td>预览图和上传区域的尺寸，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>80px</code></td></tr><tr><td>preview-image</td><td>是否在上传完成后展示预览图</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>preview-full-image</td><td>是否在点击预览图后展示全屏图片预览</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>preview-options</td><td>全屏图片预览的配置项，可选值见 <a href="#/zh-CN/image-preview">ImagePreview</a></td><td><em>object</em></td><td>-</td></tr><tr><td>multiple</td><td>是否开启图片多选，部分安卓机型不支持</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disabled</td><td>是否禁用文件上传</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly <code>v3.1.5</code></td><td>是否将上传区域设置为只读状态</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>deletable</td><td>是否展示删除按钮</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-upload</td><td>是否展示上传区域</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>lazy-load</td><td>是否开启图片懒加载，须配合 <a href="#/zh-CN/lazyload">Lazyload</a> 组件使用</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>capture</td><td>图片选取模式，可选值为 <code>camera</code> (直接调起摄像头)</td><td><em>string</em></td><td>-</td></tr><tr><td>after-read</td><td>文件读取完成后的回调函数</td><td><em>Function</em></td><td>-</td></tr><tr><td>before-read</td><td>文件读取前的回调函数，返回 <code>false</code> 可终止文件读取，<br>支持返回 <code>Promise</code></td><td><em>Function</em></td><td>-</td></tr><tr><td>before-delete</td><td>文件删除前的回调函数，返回 <code>false</code> 可终止文件读取，<br>支持返回 <code>Promise</code></td><td><em>Function</em></td><td>-</td></tr><tr><td>max-size <code>v3.0.17</code></td><td>文件大小限制，单位为 <code>byte</code></td><td><em>number | string | (file: File) =&gt; boolean</em></td><td>-</td></tr><tr><td>max-count</td><td>文件上传数量限制</td><td><em>number | string</em></td><td>-</td></tr><tr><td>result-type</td><td>文件读取结果类型，可选值为 <code>file</code> <code>text</code></td><td><em>string</em></td><td><code>dataUrl</code></td></tr><tr><td>upload-text</td><td>上传区域文字提示</td><td><em>string</em></td><td>-</td></tr><tr><td>image-fit</td><td>预览图裁剪模式，可选值见 <a href="#/zh-CN/image">Image</a> 组件</td><td><em>string</em></td><td><code>cover</code></td></tr><tr><td>upload-icon</td><td>上传区域<a href="#/zh-CN/icon">图标名称</a>或图片链接</td><td><em>string</em></td><td><code>photograph</code></td></tr></tbody></table><blockquote><p>注意：accept、capture 和 multiple 为浏览器 input 标签的原生属性，移动端各种机型对这些属性的支持程度有所差异，因此在不同机型和 WebView 下可能出现一些兼容性问题。</p></blockquote></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>oversize</td><td>文件大小超过限制时触发</td><td>同 <code>after-read</code></td></tr><tr><td>click-upload <code>v3.1.5</code></td><td>点击上传区域时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-preview</td><td>点击预览图时触发</td><td>同 <code>after-read</code></td></tr><tr><td>close-preview</td><td>关闭全屏图片预览时触发</td><td>-</td></tr><tr><td>delete</td><td>删除文件预览时触发</td><td>同 <code>after-read</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>default</td><td>自定义上传区域</td><td>-</td></tr><tr><td>preview-cover</td><td>自定义覆盖在预览区域上方的内容</td><td><em>item: FileListItem</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="hui-diao-can-shu" tabindex="-1">回调参数</h3><p>before-read、after-read、before-delete 执行时会传递以下回调参数：</p><table><thead><tr><th>参数名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>file</td><td>file 对象</td><td><em>object</em></td></tr><tr><td>detail</td><td>额外信息，包含 name 和 index 字段</td><td><em>object</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="resulttype-ke-xuan-zhi" tabindex="-1">ResultType 可选值</h3><p><code>result-type</code> 字段表示文件读取结果的类型，上传大文件时，建议使用 file 类型，避免卡顿。</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>file</td><td>结果仅包含 File 对象</td></tr><tr><td>text</td><td>结果包含 File 对象，以及文件的文本内容</td></tr><tr><td>dataUrl</td><td>结果包含 File 对象，以及文件对应的 base64 编码</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fang-fa" tabindex="-1">方法</h3><p>通过 ref 可以获取到 Uploader 实例并调用实例方法，详见<a href="#/zh-CN/advanced-usage#zu-jian-shi-li-fang-fa">组件实例方法</a>。</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th><th>返回值</th></tr></thead><tbody><tr><td>closeImagePreview</td><td>关闭全屏的图片预览</td><td>-</td><td>-</td></tr><tr><td>chooseFile</td><td>主动调起文件选择，由于浏览器安全限制，只有在用户触发操作的上下文中调用才有效</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">UploaderInstance</span>,\n  <span class="hljs-title class_">UploaderResultType</span>,\n  <span class="hljs-title class_">UploaderFileListItem</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>UploaderInstance</code> 是组件实例的类型，用法如下：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">UploaderInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> uploaderRef = ref&lt;<span class="hljs-title class_">UploaderInstance</span>&gt;();\n\nuploaderRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">chooseFile</span>();\n</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>–van-uploader-size</td><td><em>80px</em></td><td>-</td></tr><tr><td>–van-uploader-icon-size</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-uploader-icon-color</td><td><em>var(–van-gray-4)</em></td><td>-</td></tr><tr><td>–van-uploader-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-uploader-text-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-uploader-upload-background-color</td><td><em>var(–van-gray-1)</em></td><td>-</td></tr><tr><td>–van-uploader-upload-active-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-uploader-delete-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-uploader-delete-icon-size</td><td><em>14px</em></td><td>-</td></tr><tr><td>–van-uploader-delete-background-color</td><td><em>rgba(0, 0, 0, 0.7)</em></td><td>-</td></tr><tr><td>–van-uploader-file-background-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-uploader-file-icon-size</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-uploader-file-icon-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-uploader-file-name-padding</td><td><em>0 var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-uploader-file-name-margin-top</td><td><em>var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-uploader-file-name-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-uploader-file-name-text-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-uploader-mask-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-uploader-mask-background-color</td><td><em>fade(var(–van-gray-8), 88%)</em></td><td>-</td></tr><tr><td>–van-uploader-mask-icon-size</td><td><em>22px</em></td><td>-</td></tr><tr><td>–van-uploader-mask-message-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-uploader-mask-message-line-height</td><td><em>var(–van-line-height-xs)</em></td><td>-</td></tr><tr><td>–van-uploader-loading-icon-size</td><td><em>22px</em></td><td>-</td></tr><tr><td>–van-uploader-loading-icon-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-uploader-disabled-opacity</td><td><em>var(–van-disabled-opacity)</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="pai-zhao-shang-chuan-de-tu-pian-bei-xuan-zhuan-90-du" tabindex="-1">拍照上传的图片被旋转 90 度？</h3><p>部分手机在拍照上传时会出现图片被旋转 90 度的问题，这个问题可以通过 <a href="https://github.com/fengyuanchen/compressorjs">compressorjs</a> 或其他开源库进行处理。</p><p>compressorjs 是一个开源的图片处理库，提供了图片压缩、图片旋转等能力。</p><h4 id="shi-li" tabindex="-1">示例</h4><p>使用 compressorjs 进行处理的示例代码如下:</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">:before-read</span>=<span class="hljs-string">&quot;beforeRead&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Compressor</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;compressorjs&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">beforeRead</span> = (<span class="hljs-params">file</span>) =&gt;\n      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n        <span class="hljs-comment">// compressorjs 默认开启 checkOrientation 选项</span>\n        <span class="hljs-comment">// 会将图片修正为正确方向</span>\n        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Compressor</span>(file, {\n          <span class="hljs-attr">success</span>: resolve,\n          <span class="hljs-title function_">error</span>(<span class="hljs-params">err</span>) {\n            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err.<span class="hljs-property">message</span>);\n          },\n        });\n      });\n\n    <span class="hljs-keyword">return</span> {\n      beforeRead,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="shang-chuan-tu-pian-shi-chu-xian-liu-lan-qi-shua-xin-huo-qia-dun-xian-xiang" tabindex="-1">上传图片时出现浏览器刷新或卡顿现象？</h3><p>这种现象一般是内存不足导致的，通常发生在旧机型上；上传一张较大的图片引起也引起此现象。</p><p>为了减少这种情况的出现，可以在上传图片前对图片进行压缩，压缩方法请参考上文中提到的 <code>compressorjs</code> 库。</p></div><div class="van-doc-card"><h3 id="shang-chuan-heic-heif-ge-shi-de-tu-pian-hou-wu-fa-zhan-shi" tabindex="-1">上传 HEIC/HEIF 格式的图片后无法展示？</h3><p>目前 Chrome、Safari 等浏览器不支持展示 HEIC/HEIF 格式的图片，因此上传后无法在 Uploader 组件中进行预览。</p><p>[HEIF] 格式的兼容性请参考 <a href="https://caniuse.com/?search=heic">caniuse</a>。</p></div>',28),qd=[wd],xd={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",yd,qd)))},kd={class:"van-doc-markdown-body"},zd=t('<h1>ActionBar</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to provide convenient interaction for page-related operations.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ActionBar</span>, <span class="hljs-title class_">ActionBarIcon</span>, <span class="hljs-title class_">ActionBarButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ActionBar</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ActionBarIcon</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ActionBarButton</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Icon1&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onClickIcon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;cart-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Icon2&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onClickIcon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;shop-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Icon3&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onClickIcon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Button&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onClickButton&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-action-bar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickIcon</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Click Icon&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickButton</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Click Button&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      onClickIcon,\n      onClickButton,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="icon-badge" tabindex="-1">Icon Badge</h3><p>Use <code>badge</code> prop to show badge in icon.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Icon1&quot;</span> <span class="hljs-attr">dot</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;cart-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Icon2&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;5&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;shop-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Icon3&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;12&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Button&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Button&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-action-bar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-icon-color" tabindex="-1">Custom Icon Color</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Icon1&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;cart-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Icon2&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;star&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Collected&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#ff5000&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Button&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Button&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-action-bar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-button-color" tabindex="-1">Custom Button Color</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Icon1&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;shop-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Icon2&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#be99ff&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Button&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-action-bar-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#7232dd&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Button&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-action-bar</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="actionbar-props" tabindex="-1">ActionBar Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>safe-area-inset-bottom</td><td>Whether to enable bottom safe area adaptation</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="actionbaricon-props" tabindex="-1">ActionBarIcon Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>text</td><td>Button text</td><td><em>string</em></td><td>-</td></tr><tr><td>icon</td><td>Icon</td><td><em>string</em></td><td>-</td></tr><tr><td>color</td><td>Icon color</td><td><em>string</em></td><td><code>#323233</code></td></tr><tr><td>icon-class</td><td>Icon class name</td><td><em>string | Array | object</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>icon-prefix <code>v3.0.17</code></td><td>Icon className prefix</td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>dot</td><td>Whether to show red dot</td><td><em>boolean</em></td><td>-</td></tr><tr><td>badge</td><td>Content of the badge</td><td><em>number | string</em></td><td>-</td></tr><tr><td>url</td><td>Link</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>Target route of the link, same as to of vue-router</td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>If true, the navigation will not leave a history record</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="actionbarbutton-props" tabindex="-1">ActionBarButton Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>text</td><td>Button text</td><td><em>string</em></td><td>-</td></tr><tr><td>type</td><td>Button type, Can be set to <code>primary</code> <code>info</code> <code>warning</code> <code>danger</code></td><td><em>string</em></td><td><code>default</code></td></tr><tr><td>color</td><td>Button color, support linear-gradient</td><td><em>string</em></td><td>-</td></tr><tr><td>icon</td><td>Left Icon</td><td><em>string</em></td><td>-</td></tr><tr><td>disabled</td><td>Whether to disable button</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loading</td><td>Whether show loading status</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>url</td><td>Link</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>Target route of the link, same as to of vue-router</td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>If true, the navigation will not leave a history record</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="actionbaricon-slots" tabindex="-1">ActionBarIcon Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Text</td></tr><tr><td>icon</td><td>Custom icon</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="actionbarbutton-slots" tabindex="-1">ActionBarButton Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Button content</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-action-bar-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-action-bar-height</td><td><em>50px</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-width</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-height</td><td><em>100%</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-size</td><td><em>18px</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-font-size</td><td><em>var(–van-font-size-xs)</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-active-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-text-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-action-bar-icon-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-action-bar-button-height</td><td><em>40px</em></td><td>-</td></tr><tr><td>–van-action-bar-button-warning-color</td><td><em>var(–van-gradient-orange)</em></td><td>-</td></tr><tr><td>–van-action-bar-button-danger-color</td><td><em>var(–van-gradient-red)</em></td><td>-</td></tr></tbody></table></div>',16),_d=[zd],Cd={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",kd,_d)))},Sd={class:"van-doc-markdown-body"},Td=t('<h1>ActionSheet</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>The pop-up modal panel at the bottom contains multiple options related to the current situation.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ActionSheet</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ActionSheet</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><p>Use <code>actions</code> prop to set options of action-sheet.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">is-link</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Basic Usage&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-action-sheet</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span> @<span class="hljs-attr">select</span>=<span class="hljs-string">&quot;onSelect&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Option 1&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Option 2&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Option 3&#39;</span> },\n    ];\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSelect</span> = (<span class="hljs-params">item</span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      <span class="hljs-title class_">Toast</span>(item.<span class="hljs-property">name</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      actions,\n      onSelect,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="show-cancel-button" tabindex="-1">Show Cancel Button</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-sheet</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span>\n  <span class="hljs-attr">cancel-text</span>=<span class="hljs-string">&quot;Cancel&quot;</span>\n  <span class="hljs-attr">close-on-click-action</span>\n  @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;onCancel&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Option 1&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Option 2&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Option 3&#39;</span> },\n    ];\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onCancel</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;cancel&#39;</span>);\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      actions,\n      onCancel,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="show-description" tabindex="-1">Show Description</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-sheet</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span>\n  <span class="hljs-attr">cancel-text</span>=<span class="hljs-string">&quot;Cancel&quot;</span>\n  <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;Description&quot;</span>\n  <span class="hljs-attr">close-on-click-action</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Option 1&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Option 2&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Option 3&#39;</span>, <span class="hljs-attr">subname</span>: <span class="hljs-string">&#39;Description&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      actions,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="option-status" tabindex="-1">Option Status</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-sheet</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span>\n  <span class="hljs-attr">cancel-text</span>=<span class="hljs-string">&quot;Cancel&quot;</span>\n  <span class="hljs-attr">close-on-click-action</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Colored Option&#39;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#39;#ee0a24&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Disabled Option&#39;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Loading Option&#39;</span>, <span class="hljs-attr">loading</span>: <span class="hljs-literal">true</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      actions,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-panel" tabindex="-1">Custom Panel</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-action-sheet</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-action-sheet</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.content</span> {\n    <span class="hljs-attribute">padding</span>: <span class="hljs-number">16px</span> <span class="hljs-number">16px</span> <span class="hljs-number">160px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model:show</td><td>Whether to show ActionSheet</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>actions</td><td>Options</td><td><em>ActionSheetAction[]</em></td><td><code>[]</code></td></tr><tr><td>title</td><td>Title</td><td><em>string</em></td><td>-</td></tr><tr><td>cancel-text</td><td>Text of cancel button</td><td><em>string</em></td><td>-</td></tr><tr><td>description</td><td>Description above the options</td><td><em>string</em></td><td>-</td></tr><tr><td>closeable</td><td>Whether to show close icon</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-icon</td><td>Close icon name</td><td><em>string</em></td><td><code>cross</code></td></tr><tr><td>duration</td><td>Transition duration, unit second</td><td><em>number | string</em></td><td><code>0.3</code></td></tr><tr><td>round</td><td>Whether to show round corner</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>overlay</td><td>Whether to show overlay</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>overlay-class</td><td>Custom overlay class</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>overlay-style</td><td>Custom overlay style</td><td><em>object</em></td><td>-</td></tr><tr><td>lock-scroll</td><td>Whether to lock background scroll</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>lazy-render</td><td>Whether to lazy render util appeared</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-popstate</td><td>Whether to close when popstate</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>close-on-click-action</td><td>Whether to close when an action is clicked</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>close-on-click-overlay</td><td>Whether to close when overlay is clicked</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>safe-area-inset-bottom</td><td>Whether to enable bottom safe area adaptation</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>teleport</td><td>Specifies a target element where ActionSheet will be mounted</td><td><em>string | Element</em></td><td>-</td></tr><tr><td>before-close <code>v3.1.4</code></td><td>Callback function before close</td><td><em>(action: string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="data-structure-of-actionsheetaction" tabindex="-1">Data Structure of ActionSheetAction</h3><table><thead><tr><th>Key</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>name</td><td>Title</td><td><em>string</em></td></tr><tr><td>subname</td><td>Subtitle</td><td><em>string</em></td></tr><tr><td>color</td><td>Text color</td><td><em>string</em></td></tr><tr><td>className</td><td>className for the option</td><td><em>string | Array | object</em></td></tr><tr><td>loading</td><td>Whether to be loading status</td><td><em>boolean</em></td></tr><tr><td>disabled</td><td>Whether to be disabled</td><td><em>boolean</em></td></tr><tr><td>callback</td><td>Callback function after clicked</td><td><em>action: ActionSheetAction</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>select</td><td>Emitted when an option is clicked</td><td><em>action: ActionSheetAction, index: number</em></td></tr><tr><td>cancel</td><td>Emitted when the cancel button is clicked</td><td>-</td></tr><tr><td>open</td><td>Emitted when opening ActionSheet</td><td>-</td></tr><tr><td>close</td><td>Emitted when closing ActionSheet</td><td>-</td></tr><tr><td>opened</td><td>Emitted when ActionSheet is opened</td><td>-</td></tr><tr><td>closed</td><td>Emitted when ActionSheet is closed</td><td>-</td></tr><tr><td>click-overlay</td><td>Emitted when overlay is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Custom content</td></tr><tr><td>description</td><td>Custom description above the options</td></tr><tr><td>cancel <code>v3.0.10</code></td><td>Custom the content of cancel button</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ActionSheetAction</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-action-sheet-max-height</td><td><em>80%</em></td><td>-</td></tr><tr><td>–van-action-sheet-header-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-action-sheet-header-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-action-sheet-description-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-action-sheet-description-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-action-sheet-description-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-action-sheet-item-background</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-action-sheet-item-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-action-sheet-item-line-height</td><td><em>var(–van-line-height-lg)</em></td><td>-</td></tr><tr><td>–van-action-sheet-item-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-action-sheet-item-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-action-sheet-subname-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-action-sheet-subname-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-action-sheet-subname-line-height</td><td><em>var(–van-line-height-sm)</em></td><td>-</td></tr><tr><td>–van-action-sheet-close-icon-size</td><td><em>22px</em></td><td>-</td></tr><tr><td>–van-action-sheet-close-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-action-sheet-close-icon-active-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-action-sheet-close-icon-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-action-sheet-cancel-text-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-action-sheet-cancel-padding-top</td><td><em>var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-action-sheet-cancel-padding-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-action-sheet-loading-icon-size</td><td><em>22px</em></td><td>-</td></tr></tbody></table></div>',17),Id=[Td],Pd={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Sd,Id)))},Dd={class:"van-doc-markdown-body"},Ad=t('<h1>AddressEdit</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to create, update, and delete receiving addresses.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">AddressEdit</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">AddressEdit</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-address-edit</span>\n  <span class="hljs-attr">:area-list</span>=<span class="hljs-string">&quot;areaList&quot;</span>\n  <span class="hljs-attr">show-postal</span>\n  <span class="hljs-attr">show-delete</span>\n  <span class="hljs-attr">show-set-default</span>\n  <span class="hljs-attr">show-search-result</span>\n  <span class="hljs-attr">:search-result</span>=<span class="hljs-string">&quot;searchResult&quot;</span>\n  <span class="hljs-attr">:area-columns-placeholder</span>=<span class="hljs-string">&quot;[&#39;Choose&#39;, &#39;Choose&#39;, &#39;Choose&#39;]&quot;</span>\n  @<span class="hljs-attr">save</span>=<span class="hljs-string">&quot;onSave&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n  @<span class="hljs-attr">change-detail</span>=<span class="hljs-string">&quot;onChangeDetail&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> searchResult = <span class="hljs-title function_">ref</span>([]);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSave</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;save&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onDelete</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;delete&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChangeDetail</span> = (<span class="hljs-params">val</span>) =&gt; {\n      <span class="hljs-keyword">if</span> (val) {\n        searchResult.<span class="hljs-property">value</span> = [\n          {\n            <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Name1&#39;</span>,\n            <span class="hljs-attr">address</span>: <span class="hljs-string">&#39;Address&#39;</span>,\n          },\n        ];\n      } <span class="hljs-keyword">else</span> {\n        searchResult.<span class="hljs-property">value</span> = [];\n      }\n    };\n\n    <span class="hljs-keyword">return</span> {\n      onSave,\n      onDelete,\n      areaList,\n      searchResult,\n      onChangeDetail,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>area-list</td><td>Area List</td><td><em>object</em></td><td>-</td></tr><tr><td>area-columns-placeholder</td><td>placeholder of area columns</td><td><em>string[]</em></td><td><code>[]</code></td></tr><tr><td>area-placeholder</td><td>placeholder of area input field</td><td><em>string</em></td><td><code>Area</code></td></tr><tr><td>address-info</td><td>Address Info</td><td><em>AddressEditInfo</em></td><td><code>{}</code></td></tr><tr><td>search-result</td><td>Address search result</td><td><em>AddressEditSearchItem[]</em></td><td><code>[]</code></td></tr><tr><td>show-postal</td><td>Whether to show postal field</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-delete</td><td>Whether to show delete button</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-set-default</td><td>Whether to show default address switch</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-search-result</td><td>Whether to show address search result</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-area</td><td>Whether to show area cell</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-detail</td><td>Whether to show detail field</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>disable-area</td><td>Whether to disable area select</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>save-button-text</td><td>Save button text</td><td><em>string</em></td><td><code>Save</code></td></tr><tr><td>delete-button-text</td><td>Delete button text</td><td><em>string</em></td><td><code>Delete</code></td></tr><tr><td>detail-rows</td><td>Detail input rows</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>detail-maxlength</td><td>Detail maxlength</td><td><em>number | string</em></td><td><code>200</code></td></tr><tr><td>is-saving</td><td>Whether to show save button loading status</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>is-deleting</td><td>Whether to show delete button loading status</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>tel-validator</td><td>The method to validate tel</td><td><em>(tel: string) =&gt; boolean</em></td><td>-</td></tr><tr><td>tel-maxlength</td><td>Tel maxlength</td><td><em>number | string</em></td><td>-</td></tr><tr><td>postal-validator</td><td>The method to validate postal</td><td><em>(tel: string) =&gt; boolean</em></td><td>-</td></tr><tr><td>validator</td><td>Custom validator</td><td><em>(key, val) =&gt; string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>save</td><td>Emitted when the save button is clicked</td><td>content：form content</td></tr><tr><td>focus</td><td>Emitted when field is focused</td><td>key: field name</td></tr><tr><td>delete</td><td>Emitted when confirming delete</td><td>content：form content</td></tr><tr><td>cancel-delete</td><td>Emitted when canceling delete</td><td>content：form content</td></tr><tr><td>select-search</td><td>Emitted when a search result is selected</td><td>value: search content</td></tr><tr><td>click-area</td><td>Emitted when the area field is clicked</td><td>-</td></tr><tr><td>change-area</td><td>Emitted when area changed</td><td>values: area values</td></tr><tr><td>change-detail</td><td>Emitted when address detail changed</td><td>value: address detail</td></tr><tr><td>change-default</td><td>Emitted when switching default address</td><td>value: checked</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Custom content below postal</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get AddressEdit instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>setAddressDetail</td><td>Set address detail</td><td><em>addressDetail: string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">AddressEditInfo</span>,\n  <span class="hljs-title class_">AddressEditInstance</span>,\n  <span class="hljs-title class_">AddressEditSearchItem</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>AddressEditInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">AddressEditInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> addressEditRef = ref&lt;<span class="hljs-title class_">AddressEditInstance</span>&gt;();\n\naddressEditRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">setAddressDetail</span>(<span class="hljs-string">&#39;&#39;</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="addresseditinfo-data-structure" tabindex="-1">AddressEditInfo Data Structure</h3><table><thead><tr><th>key</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>name</td><td>Name</td><td><em>string</em></td></tr><tr><td>tel</td><td>Phone</td><td><em>string</em></td></tr><tr><td>province</td><td>Province</td><td><em>string</em></td></tr><tr><td>city</td><td>City</td><td><em>string</em></td></tr><tr><td>county</td><td>County</td><td><em>string</em></td></tr><tr><td>addressDetail</td><td>Detailed Address</td><td><em>string</em></td></tr><tr><td>areaCode</td><td>Area code</td><td><em>string</em></td></tr><tr><td>postalCode</td><td>Postal code</td><td><em>string</em></td></tr><tr><td>isDefault</td><td>Is default address</td><td><em>boolean</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="addresseditsearchitem-data-structure" tabindex="-1">AddressEditSearchItem Data Structure</h3><table><thead><tr><th>key</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>name</td><td>Name</td><td><em>string</em></td></tr><tr><td>address</td><td>Address</td><td><em>string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="area-data-structure" tabindex="-1">Area Data Structure</h3><p>Please refer to <a href="#/en-US/area">Area</a> component.</p></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-address-edit-padding</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-address-edit-buttons-padding</td><td><em>var(–van-padding-xl) var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-address-edit-button-margin-bottom</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-address-edit-button-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr></tbody></table></div>',16),Nd=[Ad],Ed={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Dd,Nd)))},Rd={class:"van-doc-markdown-body"},Ud=t('<h1>AddressList</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Display a list of receiving addresses.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">AddressList</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">AddressList</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-address-list</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;chosenAddressId&quot;</span>\n  <span class="hljs-attr">:list</span>=<span class="hljs-string">&quot;list&quot;</span>\n  <span class="hljs-attr">:disabled-list</span>=<span class="hljs-string">&quot;disabledList&quot;</span>\n  <span class="hljs-attr">disabled-text</span>=<span class="hljs-string">&quot;The following address is out of range&quot;</span>\n  <span class="hljs-attr">default-tag-text</span>=<span class="hljs-string">&quot;Default&quot;</span>\n  @<span class="hljs-attr">add</span>=<span class="hljs-string">&quot;onAdd&quot;</span>\n  @<span class="hljs-attr">edit</span>=<span class="hljs-string">&quot;onEdit&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> chosenAddressId = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;1&#39;</span>);\n    <span class="hljs-keyword">const</span> list = [\n      {\n        <span class="hljs-attr">id</span>: <span class="hljs-string">&#39;1&#39;</span>,\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;John Snow&#39;</span>,\n        <span class="hljs-attr">tel</span>: <span class="hljs-string">&#39;13000000000&#39;</span>,\n        <span class="hljs-attr">address</span>: <span class="hljs-string">&#39;Somewhere&#39;</span>,\n        <span class="hljs-attr">isDefault</span>: <span class="hljs-literal">true</span>,\n      },\n      {\n        <span class="hljs-attr">id</span>: <span class="hljs-string">&#39;2&#39;</span>,\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Ned Stark&#39;</span>,\n        <span class="hljs-attr">tel</span>: <span class="hljs-string">&#39;1310000000&#39;</span>,\n        <span class="hljs-attr">address</span>: <span class="hljs-string">&#39;Somewhere&#39;</span>,\n      },\n    ];\n    <span class="hljs-keyword">const</span> disabledList = [\n      {\n        <span class="hljs-attr">id</span>: <span class="hljs-string">&#39;3&#39;</span>,\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Tywin&#39;</span>,\n        <span class="hljs-attr">tel</span>: <span class="hljs-string">&#39;1320000000&#39;</span>,\n        <span class="hljs-attr">address</span>: <span class="hljs-string">&#39;Somewhere&#39;</span>,\n      },\n    ];\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onAdd</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Add&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onEdit</span> = (<span class="hljs-params">item, index</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Edit:&#39;</span> + index);\n\n    <span class="hljs-keyword">return</span> {\n      list,\n      onAdd,\n      onEdit,\n      disabledList,\n      chosenAddressId,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Id of chosen address</td><td><em>string</em></td><td>-</td></tr><tr><td>list</td><td>Address list</td><td><em>Address[]</em></td><td><code>[]</code></td></tr><tr><td>disabled-list</td><td>Disabled address list</td><td><em>Address[]</em></td><td><code>[]</code></td></tr><tr><td>disabled-text</td><td>Disabled text</td><td><em>string</em></td><td>-</td></tr><tr><td>switchable</td><td>Whether to allow switch address</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>add-button-text</td><td>Add button text</td><td><em>string</em></td><td><code>Add new address</code></td></tr><tr><td>default-tag-text</td><td>Default tag text</td><td><em>string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>add</td><td>Emitted when the add button is clicked</td><td>-</td></tr><tr><td>edit</td><td>Emitted when the edit icon of address is clicked</td><td><em>item: Address, index: number</em></td></tr><tr><td>select</td><td>Emitted when an address is selected</td><td><em>item: Address, index: number</em></td></tr><tr><td>edit-disabled</td><td>Emitted when the edit icon of disabled address is clicked</td><td><em>item: Address, index: number</em></td></tr><tr><td>select-disabled</td><td>Emitted when a disabled address is selected</td><td><em>item: Address, index: number</em></td></tr><tr><td>click-item</td><td>Emitted when an address item is clicked</td><td><em>item: Address, index: number</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="data-structure-of-address" tabindex="-1">Data Structure of Address</h3><table><thead><tr><th>Key</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>id</td><td>Id</td><td><em>number | string</em></td></tr><tr><td>name</td><td>Name</td><td><em>string</em></td></tr><tr><td>tel</td><td>Phone</td><td><em>number | string</em></td></tr><tr><td>address</td><td>Address</td><td><em>string</em></td></tr><tr><td>isDefault</td><td>Is default address</td><td><em>boolean</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>default</td><td>Custom content after list</td><td>-</td></tr><tr><td>top</td><td>Custom content before list</td><td>-</td></tr><tr><td>item-bottom</td><td>Custom content after list item</td><td><em>item: Address</em></td></tr><tr><td>tag <code>v3.0.9</code></td><td>Custom tag of list item</td><td><em>item: Address</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">AddressListAddress</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-address-list-padding</td><td><em>var(–van-padding-sm) var(–van-padding-sm) 80px</em></td><td>-</td></tr><tr><td>–van-address-list-disabled-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-address-list-disabled-text-padding</td><td><em>var(–van-padding-base) * 5 0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-address-list-disabled-text-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-address-list-disabled-text-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-address-list-add-button-z-index</td><td><em>999</em></td><td>-</td></tr><tr><td>–van-address-list-item-padding</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-address-list-item-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-address-list-item-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-address-list-item-font-size</td><td><em>13px</em></td><td>-</td></tr><tr><td>–van-address-list-item-line-height</td><td><em>var(–van-line-height-sm)</em></td><td>-</td></tr><tr><td>–van-address-list-item-radio-icon-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-address-list-edit-icon-size</td><td><em>20px</em></td><td>-</td></tr></tbody></table></div>',13),Bd=[Ud],Vd={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Rd,Bd)))},Ld={class:"van-doc-markdown-body"},Fd=t('<h1>Area</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>A three-level linkage selection of provinces and cities, usually used in conjunction with <a href="#/en-US/popup">Popup</a> component.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Area</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Area</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><p>To initialize <code>Area</code> component, <code>area-list</code> property is required.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-area</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">:area-list</span>=<span class="hljs-string">&quot;areaList&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="arealist-data-structure" tabindex="-1">areaList Data Structure</h3><p>An object contains three properties: <code>province_list</code>, <code>city_list</code> and <code>county_list</code>. Each property is a simple key-value object, key is a 6-bit code of the area of which first two bits stand for the province or state, middle two bits are used as city code and the last two are district code, value is the name of the area. If the code stands for an area that has sub-areas, lower bits of it will be filled with 0.</p><p>Sample data:</p><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">province_list</span>: {\n    <span class="hljs-number">110000</span>: <span class="hljs-string">&#39;Beijing&#39;</span>,\n    <span class="hljs-number">330000</span>: <span class="hljs-string">&#39;Zhejiang Province&#39;</span>,\n  },\n  <span class="hljs-attr">city_list</span>: {\n    <span class="hljs-number">110100</span>: <span class="hljs-string">&#39;Beijing City&#39;</span>,\n    <span class="hljs-number">330100</span>: <span class="hljs-string">&#39;Hangzhou&#39;</span>,\n  },\n  <span class="hljs-attr">county_list</span>: {\n    <span class="hljs-number">110101</span>: <span class="hljs-string">&#39;Dongcheng District&#39;</span>,\n    <span class="hljs-number">110102</span>: <span class="hljs-string">&#39;Xicheng District&#39;</span>,\n    <span class="hljs-comment">// ....</span>\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="vant-area-data" tabindex="-1">@vant/area-data</h3><p>Vant officially provides a default area data, which can be imported through <a href="https://github.com/youzan/vant/tree/dev/packages/vant-area-data">@vant/area-data</a>:</p><pre><code class="language-bash">yarn add @vant/area-data\n</code></pre><pre><code class="language-ts"><span class="hljs-keyword">import</span> { areaList } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/area-data&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">return</span> { areaList };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="initial-value" tabindex="-1">Initial Value</h3><p>To have a selected value，simply pass the <code>code</code> of target area to <code>value</code> property.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-area</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">:area-list</span>=<span class="hljs-string">&quot;areaList&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;110101&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="columns-number" tabindex="-1">Columns Number</h3><p><code>columns-num</code> property is used to config number of columns to be displayed. This component has 3 columns corresponding to a 3 level picker by default. Set <code>columns-num</code> with 2, you’ll have a 2 level picker.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-area</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">:area-list</span>=<span class="hljs-string">&quot;areaList&quot;</span> <span class="hljs-attr">:columns-num</span>=<span class="hljs-string">&quot;2&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="columns-placeholder" tabindex="-1">Columns Placeholder</h3><p><code>columns-placeholder</code> property is used to config placeholder of columns.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-area</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span>\n  <span class="hljs-attr">:area-list</span>=<span class="hljs-string">&quot;areaList&quot;</span>\n  <span class="hljs-attr">:columns-placeholder</span>=<span class="hljs-string">&quot;[&#39;Choose&#39;, &#39;Choose&#39;, &#39;Choose&#39;]&quot;</span>\n/&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>value</td><td>the <code>code</code> of selected area</td><td><em>string</em></td><td>-</td></tr><tr><td>title</td><td>Toolbar title</td><td><em>string</em></td><td>-</td></tr><tr><td>confirm-button-text</td><td>Text of confirm button</td><td><em>string</em></td><td><code>Confirm</code></td></tr><tr><td>cancel-button-text</td><td>Text of cancel button</td><td><em>string</em></td><td><code>Cancel</code></td></tr><tr><td>area-list</td><td>Area list data</td><td><em>object</em></td><td>-</td></tr><tr><td>columns-placeholder</td><td>Placeholder of columns</td><td><em>string[]</em></td><td><code>[]</code></td></tr><tr><td>loading</td><td>Whether to show loading prompt</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly</td><td>Whether to be readonly</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>item-height</td><td>Option height, supports <code>px</code> <code>vw</code> <code>vh</code> <code>rem</code> unit, default <code>px</code></td><td><em>number | string</em></td><td><code>44</code></td></tr><tr><td>columns-num</td><td>Level of picker</td><td><em>number | string</em></td><td><code>3</code></td></tr><tr><td>visible-item-count</td><td>Count of visible columns</td><td><em>number | string</em></td><td><code>6</code></td></tr><tr><td>swipe-duration</td><td>Duration of the momentum animation，unit <code>ms</code></td><td><em>number | string</em></td><td><code>1000</code></td></tr><tr><td>is-oversea-code</td><td>The method to validate oversea code</td><td><em>() =&gt; boolean</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>confirm</td><td>Emitted when the confirm button is clicked</td><td><em>result: ConfirmResult</em></td></tr><tr><td>cancel</td><td>Emitted when the cancel button is clicked</td><td>-</td></tr><tr><td>change</td><td>Emitted when current option changed</td><td>current values，column index</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="confirmresult" tabindex="-1">ConfirmResult</h3><p>An array that contains selected area objects.</p><pre><code class="language-js">[\n  {\n    <span class="hljs-attr">code</span>: <span class="hljs-string">&#39;330000&#39;</span>,\n    <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Zhejiang Province&#39;</span>,\n  },\n  {\n    <span class="hljs-attr">code</span>: <span class="hljs-string">&#39;330100&#39;</span>,\n    <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Hangzhou&#39;</span>,\n  },\n  {\n    <span class="hljs-attr">code</span>: <span class="hljs-string">&#39;330105&#39;</span>,\n    <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Xihu District&#39;</span>,\n  },\n];\n</code></pre></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>toolbar <code>3.1.2</code></td><td>Custom toolbar content</td><td>-</td></tr><tr><td>title</td><td>Custom title</td><td>-</td></tr><tr><td>confirm <code>3.1.2</code></td><td>Custom confirm button text</td><td>-</td></tr><tr><td>cancel <code>3.1.2</code></td><td>Custom cancel button text</td><td>-</td></tr><tr><td>columns-top</td><td>Custom content above columns</td><td>-</td></tr><tr><td>columns-bottom</td><td>Custom content below columns</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get Area instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>reset</td><td>Reset all options by code</td><td><em>code?: string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">AreaList</span>, <span class="hljs-title class_">AreaInstance</span>, <span class="hljs-title class_">AreaColumnOption</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>AreaInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">AreaInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> areaRef = ref&lt;<span class="hljs-title class_">AreaInstance</span>&gt;();\n\nareaRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">reset</span>();\n</code></pre></div>',17),Wd=[Fd],Md={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ld,Wd)))},Od={class:"van-doc-markdown-body"},Gd=t('<h1>Badge</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Display a small badge or a red dot to the top-right of its child.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Badge</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Badge</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;Hot&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">dot</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.child</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">40px</span>;\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;\n    <span class="hljs-attribute">background</span>: <span class="hljs-number">#f2f3f5</span>;\n    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="max" tabindex="-1">Max</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;20&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;9&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;20&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;200&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;99&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-color" tabindex="-1">Custom Color</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;5&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">dot</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-content" tabindex="-1">Custom Content</h3><p>Use <code>content</code> slot to custom :content of badge.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">content</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;success&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;badge-icon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">content</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;cross&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;badge-icon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">content</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;down&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;badge-icon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-badge</span>&gt;</span>\n</code></pre><pre><code class="language-css"><span class="hljs-selector-class">.badge-icon</span> {\n  <span class="hljs-attribute">display</span>: block;\n  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;\n  <span class="hljs-attribute">line-height</span>: <span class="hljs-number">16px</span>;\n}\n</code></pre></div><div class="van-doc-card"><h3 id="standalone" tabindex="-1">Standalone</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;20&quot;</span> /&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-badge</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;200&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;99&quot;</span> /&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>content</td><td>Badge content</td><td><em>number | string</em></td><td>-</td></tr><tr><td>color</td><td>Background color</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>dot</td><td>Whether to show dot</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>max</td><td>Max value，show <code>{max}+</code> when exceed，only works when content is number</td><td><em>number | string</em></td><td>-</td></tr><tr><td>offset <code>v3.0.5</code></td><td>Offset of badge dot</td><td><em>[number | string, number | string]</em></td><td>-</td></tr><tr><td>show-zero <code>v3.0.10</code></td><td>Whether to show badge when content is zero</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Default slot</td></tr><tr><td>content</td><td>Custom badge content</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-badge-size</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-badge-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-badge-padding</td><td><em>0 3px</em></td><td>-</td></tr><tr><td>–van-badge-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-badge-font-weight</td><td><em>var(–van-font-weight-bold)</em></td><td>-</td></tr><tr><td>–van-badge-border-width</td><td><em>var(–van-border-width-base)</em></td><td>-</td></tr><tr><td>–van-badge-background-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-badge-dot-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-badge-dot-size</td><td><em>8px</em></td><td>-</td></tr><tr><td>–van-badge-font-family</td><td><em>-apple-system-font, Helvetica Neue, Arial, sans-serif</em></td><td>-</td></tr></tbody></table></div>',14),Hd=[Gd],Kd={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Od,Hd)))},$d={class:"van-doc-markdown-body"},Jd=t('<h1>Button</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Buttons are used to trigger an action, such as submitting a form.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Button</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Button</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="type" tabindex="-1">Type</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Primary<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>Success<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;default&quot;</span>&gt;</span>Default<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>Danger<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span>&gt;</span>Warning<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="plain" tabindex="-1">Plain</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Primary<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Danger<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="hairline" tabindex="-1">Hairline</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">hairline</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Hairline<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">hairline</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Hairline<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="disabled" tabindex="-1">Disabled</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="loading" tabindex="-1">Loading</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">loading-type</span>=<span class="hljs-string">&quot;spinner&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">loading-text</span>=<span class="hljs-string">&quot;Loading...&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="shape" tabindex="-1">Shape</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Square<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">round</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Round<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="icon" tabindex="-1">Icon</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;plus&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;plus&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/user-active.png&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>\n  Button\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="size" tabindex="-1">Size</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;large&quot;</span>&gt;</span>Large<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;normal&quot;</span>&gt;</span>Normal<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span>Small<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span>&gt;</span>Mini<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="block-element" tabindex="-1">Block Element</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">block</span>&gt;</span>Block Element<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="route" tabindex="-1">Route</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">url</span>=<span class="hljs-string">&quot;/vant/mobile.html&quot;</span>&gt;</span>URL<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span>Vue Router<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-color" tabindex="-1">Custom Color</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#7232dd&quot;</span>&gt;</span>Pure<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#7232dd&quot;</span> <span class="hljs-attr">plain</span>&gt;</span>Pure<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;linear-gradient(to right, #ff6034, #ee0a24)&quot;</span>&gt;</span>\n  Gradient\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>type</td><td>Can be set to <code>primary</code> <code>success</code> <code>warning</code> <code>danger</code></td><td><em>string</em></td><td><code>default</code></td></tr><tr><td>size</td><td>Can be set to <code>large</code> <code>small</code> <code>mini</code></td><td><em>string</em></td><td><code>normal</code></td></tr><tr><td>text</td><td>Text</td><td><em>string</em></td><td>-</td></tr><tr><td>color</td><td>Color, support linear-gradient</td><td><em>string</em></td><td>-</td></tr><tr><td>icon</td><td>Left Icon</td><td><em>string</em></td><td>-</td></tr><tr><td>icon-prefix</td><td>Icon className prefix</td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>icon-position</td><td>Icon position, can be set to <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>tag</td><td>HTML Tag</td><td><em>string</em></td><td><code>button</code></td></tr><tr><td>native-type</td><td>Native Type Attribute</td><td><em>string</em></td><td><code>button</code></td></tr><tr><td>plain</td><td>Whether to be plain button</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>block</td><td>Whether to set display block</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>round</td><td>Whether to be round button</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>square</td><td>Whether to be square button</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disabled</td><td>Whether to disable button</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loading</td><td>Whether show loading status</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loading-text</td><td>Loading text</td><td><em>string</em></td><td>-</td></tr><tr><td>loading-type</td><td>Loading type, can be set to <code>spinner</code></td><td><em>string</em></td><td><code>circular</code></td></tr><tr><td>loading-size</td><td>Loading icon size</td><td><em>number | string</em></td><td><code>20px</code></td></tr><tr><td>url</td><td>Link URL</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>Target route of the link, same as using vue-router</td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>If true, the navigation will not leave a history record</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when button is clicked and not disabled or loading</td><td><em>event: MouseEvent</em></td></tr><tr><td>touchstart</td><td>Emitted when button is touched</td><td><em>event: TouchEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Default slot</td></tr><tr><td>icon <code>v3.0.18</code></td><td>Custom icon</td></tr><tr><td>loading</td><td>Custom loading icon</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ButtonType</span>, <span class="hljs-title class_">ButtonSize</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-button-mini-height</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-button-mini-padding</td><td><em>0 var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-button-mini-font-size</td><td><em>var(–van-font-size-xs)</em></td><td>-</td></tr><tr><td>–van-button-small-height</td><td><em>32px</em></td><td>-</td></tr><tr><td>–van-button-small-padding</td><td><em>0 var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-button-small-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-button-normal-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-button-normal-padding</td><td><em>0 15px</em></td><td>-</td></tr><tr><td>–van-button-large-height</td><td><em>50px</em></td><td>-</td></tr><tr><td>–van-button-default-height</td><td><em>44px</em></td><td>-</td></tr><tr><td>–van-button-default-line-height</td><td><em>1.2</em></td><td>-</td></tr><tr><td>–van-button-default-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-button-default-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-button-default-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-button-default-border-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr><tr><td>–van-button-primary-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-button-primary-background-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-button-primary-border-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-button-success-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-button-success-background-color</td><td><em>var(–van-success-color)</em></td><td>-</td></tr><tr><td>–van-button-success-border-color</td><td><em>var(–van-success-color)</em></td><td>-</td></tr><tr><td>–van-button-danger-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-button-danger-background-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-button-danger-border-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-button-warning-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-button-warning-background-color</td><td><em>var(–van-warning-color)</em></td><td>-</td></tr><tr><td>–van-button-warning-border-color</td><td><em>var(–van-warning-color)</em></td><td>-</td></tr><tr><td>–van-button-border-width</td><td><em>var(–van-border-width-base)</em></td><td>-</td></tr><tr><td>–van-button-border-radius</td><td><em>var(–van-border-radius-sm)</em></td><td>-</td></tr><tr><td>–van-button-round-border-radius</td><td><em>var(–van-border-radius-max)</em></td><td>-</td></tr><tr><td>–van-button-plain-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-button-disabled-opacity</td><td><em>var(–van-disabled-opacity)</em></td><td>-</td></tr><tr><td>–van-button-icon-size</td><td><em>1.2em</em></td><td>-</td></tr><tr><td>–van-button-loading-icon-size</td><td><em>20px</em></td><td>-</td></tr></tbody></table></div>',22),Xd=[Jd],Yd={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",$d,Xd)))},Zd={class:"van-doc-markdown-body"},Qd=t('<h1>Calendar</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Calendar component for selecting dates or date ranges.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Calendar</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Calendar</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="select-single-date" tabindex="-1">Select Single Date</h3><p>The <code>confirm</code> event will be emitted after the date selection is completed.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Select Single Date&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;date&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> date = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatDate</span> = (<span class="hljs-params">date</span>) =&gt; <span class="hljs-string">`<span class="hljs-subst">${date.getMonth() + <span class="hljs-number">1</span>}</span>/<span class="hljs-subst">${date.getDate()}</span>`</span>;\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">value</span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      date.<span class="hljs-property">value</span> = <span class="hljs-title function_">formatDate</span>(value);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      date,\n      show,\n      onConfirm,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="select-multiple-date" tabindex="-1">Select Multiple Date</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Select Multiple Date&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;text&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;multiple&quot;</span> @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> text = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">dates</span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      text.<span class="hljs-property">value</span> = <span class="hljs-string">`选择了 <span class="hljs-subst">${dates.length}</span> 个日期`</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      text,\n      show,\n      onConfirm,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="select-date-range" tabindex="-1">Select Date Range</h3><p>You can select a date range after setting <code>type</code> to<code>range</code>. In range mode, the date returned by the <code>confirm</code> event is an array, the first item in the array is the start time and the second item is the end time.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Select Date Range&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;date&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> date = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatDate</span> = (<span class="hljs-params">date</span>) =&gt; <span class="hljs-string">`<span class="hljs-subst">${date.getMonth() + <span class="hljs-number">1</span>}</span>/<span class="hljs-subst">${date.getDate()}</span>`</span>;\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">values</span>) =&gt; {\n      <span class="hljs-keyword">const</span> [start, end] = values;\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      date.<span class="hljs-property">value</span> = <span class="hljs-string">`<span class="hljs-subst">${formatDate(start)}</span> - <span class="hljs-subst">${formatDate(end)}</span>`</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      date,\n      show,\n      onConfirm,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="quick-select" tabindex="-1">Quick Select</h3><p>Set <code>show-confirm</code> to <code>false</code> to hide the confirm button. In this case, the <code>confirm</code> event will be emitted immediately after the selection is completed.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:show-confirm</span>=<span class="hljs-string">&quot;false&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-color" tabindex="-1">Custom Color</h3><p>Use <code>color</code> prop to custom calendar color.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-date-range" tabindex="-1">Custom Date Range</h3><p>Use <code>min-date</code> and <code>max-date</code> to custom date range.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span> <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2010</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n      <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2010</span>, <span class="hljs-number">0</span>, <span class="hljs-number">31</span>),\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-confirm-text" tabindex="-1">Custom Confirm Text</h3><p>Use <code>confirm-text</code> and <code>confirm-disabled-text</code> to custom confirm text.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span>\n  <span class="hljs-attr">confirm-text</span>=<span class="hljs-string">&quot;OK&quot;</span>\n  <span class="hljs-attr">confirm-disabled-text</span>=<span class="hljs-string">&quot;Select End Time&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-day-text" tabindex="-1">Custom Day Text</h3><p>Use <code>formatter</code> to custom day text.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">:formatter</span>=<span class="hljs-string">&quot;formatter&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatter</span> = (<span class="hljs-params">day</span>) =&gt; {\n      <span class="hljs-keyword">const</span> month = day.<span class="hljs-property">date</span>.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span>;\n      <span class="hljs-keyword">const</span> date = day.<span class="hljs-property">date</span>.<span class="hljs-title function_">getDate</span>();\n\n      <span class="hljs-keyword">if</span> (month === <span class="hljs-number">5</span>) {\n        <span class="hljs-keyword">if</span> (date === <span class="hljs-number">1</span>) {\n          day.<span class="hljs-property">topInfo</span> = <span class="hljs-string">&#39;Labor Day&#39;</span>;\n        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (date === <span class="hljs-number">4</span>) {\n          day.<span class="hljs-property">topInfo</span> = <span class="hljs-string">&#39;Youth Day&#39;</span>;\n        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (date === <span class="hljs-number">11</span>) {\n          day.<span class="hljs-property">text</span> = <span class="hljs-string">&#39;Today&#39;</span>;\n        }\n      }\n\n      <span class="hljs-keyword">if</span> (day.<span class="hljs-property">type</span> === <span class="hljs-string">&#39;start&#39;</span>) {\n        day.<span class="hljs-property">bottomInfo</span> = <span class="hljs-string">&#39;In&#39;</span>;\n      } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (day.<span class="hljs-property">type</span> === <span class="hljs-string">&#39;end&#39;</span>) {\n        day.<span class="hljs-property">bottomInfo</span> = <span class="hljs-string">&#39;Out&#39;</span>;\n      }\n\n      <span class="hljs-keyword">return</span> day;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      formatter,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-position" tabindex="-1">Custom Position</h3><p>Use <code>position</code> to custom popup position，can be set to <code>top</code>、<code>left</code>、<code>right</code>.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:round</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;right&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="max-range" tabindex="-1">Max Range</h3><p>When selecting a date range, you can use the <code>max-range</code> prop to specify the maximum number of selectable days.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">:max-range</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;500px&#39; }&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-first-day-of-week" tabindex="-1">Custom First Day Of Week</h3><p>Use <code>first-day-of-week</code> to custom the start day of week</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">first-day-of-week</span>=<span class="hljs-string">&quot;1&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="tiled-display" tabindex="-1">Tiled display</h3><p>Set <code>poppable</code> to <code>false</code>, the calendar will be displayed directly on the page instead of appearing as a popup</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Calendar&quot;</span>\n  <span class="hljs-attr">:poppable</span>=<span class="hljs-string">&quot;false&quot;</span>\n  <span class="hljs-attr">:show-confirm</span>=<span class="hljs-string">&quot;false&quot;</span>\n  <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;500px&#39; }&quot;</span>\n/&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>type</td><td>Type，can be set to <code>range</code> <code>multiple</code></td><td><em>string</em></td><td><code>single</code></td></tr><tr><td>title</td><td>Title of calendar</td><td><em>string</em></td><td><code>Calendar</code></td></tr><tr><td>color</td><td>Color for the bottom button and selected date</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>min-date</td><td>Min date</td><td><em>Date</em></td><td>Today</td></tr><tr><td>max-date</td><td>Max date</td><td><em>Date</em></td><td>Six months after the today</td></tr><tr><td>default-date</td><td>Default selected date</td><td><em>Date | Date[] | null</em></td><td>Today</td></tr><tr><td>row-height</td><td>Row height</td><td><em>number | string</em></td><td><code>64</code></td></tr><tr><td>formatter</td><td>Day formatter</td><td><em>(day: Day) =&gt; Day</em></td><td>-</td></tr><tr><td>poppable</td><td>Whether to show the calendar inside a popup</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>lazy-render</td><td>Whether to enable lazy render</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-mark</td><td>Whether to show background month mark</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-title</td><td>Whether to show title</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-subtitle</td><td>Whether to show subtitle</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-confirm</td><td>Whether to show confirm button</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>readonly</td><td>Whether to be readonly</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>confirm-text</td><td>Confirm button text</td><td><em>string</em></td><td><code>Confirm</code></td></tr><tr><td>confirm-disabled-text</td><td>Confirm button text when disabled</td><td><em>string</em></td><td><code>Confirm</code></td></tr><tr><td>first-day-of-week</td><td>Set the start day of week</td><td><em>0-6</em></td><td><code>0</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="calendar-poppable-props" tabindex="-1">Calendar Poppable Props</h3><p>Following props are supported when the poppable is true</p><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model:show</td><td>Whether to show calendar</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>position</td><td>Popup position, can be set to <code>top</code> <code>right</code> <code>left</code></td><td><em>string</em></td><td><code>bottom</code></td></tr><tr><td>round</td><td>Whether to show round corner</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-popstate</td><td>Whether to close when popstate</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-overlay</td><td>Whether to close when overlay is clicked</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>safe-area-inset-bottom</td><td>Whether to enable bottom safe area adaptation</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>teleport</td><td>Specifies a target element where Calendar will be mounted</td><td><em>string | Element</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="calendar-range-props" tabindex="-1">Calendar Range Props</h3><p>Following props are supported when the type is range</p><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>max-range</td><td>Number of selectable days</td><td><em>number | string</em></td><td>Unlimited</td></tr><tr><td>range-prompt</td><td>Error message when exceeded max range</td><td><em>string</em></td><td><code>Choose no more than xx days</code></td></tr><tr><td>show-range-prompt</td><td>Whether prompt error message when exceeded max range</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>allow-same-day</td><td>Whether the start and end time of the range is allowed on the same day</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="calendar-multiple-props" tabindex="-1">Calendar Multiple Props</h3><p>Following props are supported when the type is multiple</p><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>max-range</td><td>Max count of selectable days</td><td><em>number | string</em></td><td>Unlimited</td></tr><tr><td>range-prompt</td><td>Error message when exceeded max count</td><td><em>string</em></td><td><code>Choose no more than xx days</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="data-structure-of-day" tabindex="-1">Data Structure of Day</h3><table><thead><tr><th>Key</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>date</td><td>Date</td><td><em>Date</em></td></tr><tr><td>type</td><td>Type, can be set to <code>selected</code>、<code>start</code>、<code>middle</code>、<code>end</code>、<code>disabled</code></td><td><em>string</em></td></tr><tr><td>text</td><td>Text</td><td><em>string</em></td></tr><tr><td>topInfo</td><td>Top info</td><td><em>string</em></td></tr><tr><td>bottomInfo</td><td>Bottom info</td><td><em>string</em></td></tr><tr><td>className</td><td>Extra className</td><td><em>string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>select</td><td>Emitted when date is selected</td><td><em>value: Date | Date[]</em></td></tr><tr><td>confirm</td><td>Emitted after date selection is complete，if <code>show-confirm</code> is <code>true</code>, it is Emitted after clicking the confirm button</td><td><em>value: Date | Date[]</em></td></tr><tr><td>open</td><td>Emitted when opening Popup</td><td>-</td></tr><tr><td>close</td><td>Emitted when closing Popup</td><td>-</td></tr><tr><td>opened</td><td>Emitted when Popup is opened</td><td>-</td></tr><tr><td>closed</td><td>Emitted when Popup is closed</td><td>-</td></tr><tr><td>unselect</td><td>Emitted when unselect date when type is multiple</td><td><em>value: Date</em></td></tr><tr><td>month-show</td><td>Emitted when a month enters the visible area</td><td><em>{ date: Date, title: string }</em></td></tr><tr><td>over-range</td><td>Emitted when exceeded max range</td><td>-</td></tr><tr><td>click-subtitle <code>v3.1.3</code></td><td>Emitted when clicking the subtitle</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>title</td><td>Custom title</td><td>-</td></tr><tr><td>subtitle <code>v3.1.3</code></td><td>Custom subtitle</td><td>-</td></tr><tr><td>footer</td><td>Custom footer</td><td>-</td></tr><tr><td>top-info <code>v3.0.17</code></td><td>Custom top info of day</td><td><em>day: Day</em></td></tr><tr><td>bottom-info <code>v3.0.17</code></td><td>Custom bottom info of day</td><td><em>day: Day</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get Calendar instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>reset</td><td>Reset selected date, will reset to default date when no params passed</td><td><em>date?: Date | Date[]</em></td><td>-</td></tr><tr><td>scrollToDate</td><td>Scroll to date</td><td><em>date: Date</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">CalendarType</span>,\n  <span class="hljs-title class_">CalendarDayItem</span>,\n  <span class="hljs-title class_">CalendarDayType</span>,\n  <span class="hljs-title class_">CalendarInstance</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>CalendarInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CalendarInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> calendarRef = ref&lt;<span class="hljs-title class_">CalendarInstance</span>&gt;();\n\ncalendarRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">reset</span>();\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-calendar-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-calendar-popup-height</td><td><em>80%</em></td><td>-</td></tr><tr><td>–van-calendar-header-box-shadow</td><td><em>0 2px 10px rgba(125, 126, 128, 0.16)</em></td><td>-</td></tr><tr><td>–van-calendar-header-title-height</td><td><em>44px</em></td><td>-</td></tr><tr><td>–van-calendar-header-title-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-calendar-header-subtitle-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-calendar-weekdays-height</td><td><em>30px</em></td><td>-</td></tr><tr><td>–van-calendar-weekdays-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-calendar-month-title-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-calendar-month-mark-color</td><td><em>fade(var(–van-gray-2), 80%)</em></td><td>-</td></tr><tr><td>–van-calendar-month-mark-font-size</td><td><em>160px</em></td><td>-</td></tr><tr><td>–van-calendar-day-height</td><td><em>64px</em></td><td>-</td></tr><tr><td>–van-calendar-day-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-calendar-range-edge-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-calendar-range-edge-background-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-calendar-range-middle-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-calendar-range-middle-background-opacity</td><td><em>0.1</em></td><td>-</td></tr><tr><td>–van-calendar-selected-day-size</td><td><em>54px</em></td><td>-</td></tr><tr><td>–van-calendar-selected-day-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-calendar-info-font-size</td><td><em>var(–van-font-size-xs)</em></td><td>-</td></tr><tr><td>–van-calendar-info-line-height</td><td><em>var(–van-line-height-xs)</em></td><td>-</td></tr><tr><td>–van-calendar-selected-day-background-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-calendar-day-disabled-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-calendar-confirm-button-height</td><td><em>36px</em></td><td>-</td></tr><tr><td>–van-calendar-confirm-button-margin</td><td><em>7px 0</em></td><td>-</td></tr></tbody></table></div>',28),sp=[Qd],ap={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Zd,sp)))},tp={class:"van-doc-markdown-body"},np=t('<h1>Card</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to display product pictures, prices and other information.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Card</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Card</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-card</span>\n  <span class="hljs-attr">num</span>=<span class="hljs-string">&quot;2&quot;</span>\n  <span class="hljs-attr">price</span>=<span class="hljs-string">&quot;2.00&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span>\n  <span class="hljs-attr">desc</span>=<span class="hljs-string">&quot;Description&quot;</span>\n  <span class="hljs-attr">thumb</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/ipad.jpeg&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="discount-info" tabindex="-1">Discount Info</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-card</span>\n  <span class="hljs-attr">num</span>=<span class="hljs-string">&quot;2&quot;</span>\n  <span class="hljs-attr">tag</span>=<span class="hljs-string">&quot;Tag&quot;</span>\n  <span class="hljs-attr">price</span>=<span class="hljs-string">&quot;2.00&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span>\n  <span class="hljs-attr">desc</span>=<span class="hljs-string">&quot;Description&quot;</span>\n  <span class="hljs-attr">origin-price</span>=<span class="hljs-string">&quot;10.00&quot;</span>\n  <span class="hljs-attr">thumb</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/ipad.jpeg&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-content" tabindex="-1">Custom Content</h3><p>Use slot to custom content.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-card</span>\n  <span class="hljs-attr">num</span>=<span class="hljs-string">&quot;2&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span>\n  <span class="hljs-attr">desc</span>=<span class="hljs-string">&quot;Description&quot;</span>\n  <span class="hljs-attr">price</span>=<span class="hljs-string">&quot;2.00&quot;</span>\n  <span class="hljs-attr">thumb</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/ipad.jpeg&quot;</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">tags</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">footer</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-card</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>thumb</td><td>Left thumb image URL</td><td><em>string</em></td><td>-</td></tr><tr><td>title</td><td>Title</td><td><em>string</em></td><td>-</td></tr><tr><td>desc</td><td>Description</td><td><em>string</em></td><td>-</td></tr><tr><td>tag</td><td>Tag</td><td><em>string</em></td><td>-</td></tr><tr><td>num</td><td>number</td><td><em>number | string</em></td><td>-</td></tr><tr><td>price</td><td>Price</td><td><em>number | string</em></td><td>-</td></tr><tr><td>origin-price</td><td>Origin price</td><td><em>number | string</em></td><td>-</td></tr><tr><td>centered</td><td>Whether content vertical centered</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>currency</td><td>Currency symbol</td><td><em>string</em></td><td><code>¥</code></td></tr><tr><td>thumb-link</td><td>Thumb link URL</td><td><em>string</em></td><td>-</td></tr><tr><td>lazy-load</td><td>Whether to enable thumb lazy load，should register <a href="#/en-US/lazyload">Lazyload</a> component</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when component is clicked</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-thumb</td><td>Emitted when thumb is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>title</td><td>Custom title</td></tr><tr><td>desc</td><td>Custom description</td></tr><tr><td>num</td><td>Custom num</td></tr><tr><td>price</td><td>Custom price</td></tr><tr><td>origin-price</td><td>Custom origin price</td></tr><tr><td>price-top</td><td>Custom price top</td></tr><tr><td>bottom</td><td>Custom price bottom</td></tr><tr><td>thumb</td><td>Custom thumb</td></tr><tr><td>tag</td><td>Custom thumb tag</td></tr><tr><td>tags</td><td>Custom tags</td></tr><tr><td>footer</td><td>Custom footer</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-card-padding</td><td><em>var(–van-padding-xs) var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-card-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-card-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-card-background-color</td><td><em>var(–van-background-color-light)</em></td><td>-</td></tr><tr><td>–van-card-thumb-size</td><td><em>88px</em></td><td>-</td></tr><tr><td>–van-card-thumb-border-radius</td><td><em>var(–van-border-radius-lg)</em></td><td>-</td></tr><tr><td>–van-card-title-line-height</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-card-desc-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-card-desc-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-card-price-color</td><td><em>var(–van-gray-8)</em></td><td>-</td></tr><tr><td>–van-card-origin-price-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-card-num-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-card-origin-price-font-size</td><td><em>var(–van-font-size-xs)</em></td><td>-</td></tr><tr><td>–van-card-price-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-card-price-integer-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-card-price-font-family</td><td><em>var(–van-price-integer-font-family)</em></td><td>-</td></tr></tbody></table></div>',13),lp=[np],ep={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",tp,lp)))},dp={class:"van-doc-markdown-body"},pp=t('<h1>Cascader</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>The cascader component is used for the selection of multi-level data. The typical scene is the selection of provinces and cities.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Cascader</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Cascader</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fieldValue&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Area&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Select Area&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">round</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cascader</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cascaderValue&quot;</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Select Area&quot;</span>\n    <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n    @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n    @<span class="hljs-attr">finish</span>=<span class="hljs-string">&quot;onFinish&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> fieldValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> cascaderValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> options = [\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Zhejiang&#39;</span>,\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;330000&#39;</span>,\n        <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Hangzhou&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;330100&#39;</span> }],\n      },\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Jiangsu&#39;</span>,\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;320000&#39;</span>,\n        <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Nanjing&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;320100&#39;</span> }],\n      },\n    ];\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onFinish</span> = (<span class="hljs-params">{ selectedOptions }</span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      fieldValue.<span class="hljs-property">value</span> = selectedOptions.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">option</span>) =&gt;</span> option.<span class="hljs-property">text</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#39;/&#39;</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      options,\n      onFinish,\n      fieldValue,\n      cascaderValue,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-color" tabindex="-1">Custom Color</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cascader</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cascaderValue&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Select Area&quot;</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n  <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span>\n  @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n  @<span class="hljs-attr">finish</span>=<span class="hljs-string">&quot;onFinish&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="async-options" tabindex="-1">Async Options</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fieldValue&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Area&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Select Area&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">round</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cascader</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cascaderValue&quot;</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Select Area&quot;</span>\n    <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n    @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n    @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>\n    @<span class="hljs-attr">finish</span>=<span class="hljs-string">&quot;onFinish&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> fieldValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> cascaderValue = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> options = <span class="hljs-title function_">ref</span>([\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Zhejiang&#39;</span>,\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;330000&#39;</span>,\n        <span class="hljs-attr">children</span>: [],\n      },\n    ]);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">{ value }</span>) =&gt; {\n      <span class="hljs-keyword">if</span> (value === options.<span class="hljs-property">value</span>[<span class="hljs-number">0</span>].<span class="hljs-property">value</span>) {\n        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n          options.<span class="hljs-property">value</span>[<span class="hljs-number">0</span>].<span class="hljs-property">children</span> = [\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Hangzhou&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;330100&#39;</span> },\n            { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Ningbo&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;330200&#39;</span> },\n          ];\n        }, <span class="hljs-number">500</span>);\n      }\n    };\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onFinish</span> = (<span class="hljs-params">{ selectedOptions }</span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      fieldValue.<span class="hljs-property">value</span> = selectedOptions.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">option</span>) =&gt;</span> option.<span class="hljs-property">text</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#39;/&#39;</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      options,\n      onFinish,\n      fieldValue,\n      cascaderValue,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-field-names" tabindex="-1">Custom Field Names</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cascader</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;code&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Select Area&quot;</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n  <span class="hljs-attr">:field-names</span>=<span class="hljs-string">&quot;fieldNames&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> code = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> fieldNames = {\n      <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;name&#39;</span>,\n      <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;code&#39;</span>,\n      <span class="hljs-attr">children</span>: <span class="hljs-string">&#39;items&#39;</span>,\n    };\n    <span class="hljs-keyword">const</span> options = [\n      {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Zhejiang&#39;</span>,\n        <span class="hljs-attr">code</span>: <span class="hljs-string">&#39;330000&#39;</span>,\n        <span class="hljs-attr">items</span>: [{ <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Hangzhou&#39;</span>, <span class="hljs-attr">code</span>: <span class="hljs-string">&#39;330100&#39;</span> }],\n      },\n      {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Jiangsu&#39;</span>,\n        <span class="hljs-attr">code</span>: <span class="hljs-string">&#39;320000&#39;</span>,\n        <span class="hljs-attr">items</span>: [{ <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Nanjing&#39;</span>, <span class="hljs-attr">code</span>: <span class="hljs-string">&#39;320100&#39;</span> }],\n      },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      code,\n      options,\n      fieldNames,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>title</td><td>Title</td><td><em>string</em></td><td>-</td></tr><tr><td>value</td><td>Value of selected option</td><td><em>string | number</em></td><td>-</td></tr><tr><td>options</td><td>Options</td><td><em>Option[]</em></td><td><code>[]</code></td></tr><tr><td>placeholder</td><td>Placeholder of unselected tab</td><td><em>string</em></td><td><code>Select</code></td></tr><tr><td>active-color</td><td>Active color</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>swipeable <code>v3.0.11</code></td><td>Whether to enable gestures to slide left and right</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>closeable</td><td>Whether to show close icon</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-icon <code>v3.0.10</code></td><td>Close icon name</td><td><em>string</em></td><td><code>cross</code></td></tr><tr><td>field-names <code>v3.0.4</code></td><td>Custom the fields of options</td><td><em>object</em></td><td><code>{ text: &#39;text&#39;, value: &#39;value&#39;, children: &#39;children&#39; }</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="data-structure-of-option" tabindex="-1">Data Structure of Option</h3><table><thead><tr><th>Key</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>text</td><td>Option text</td><td><em>string</em></td></tr><tr><td>value</td><td>Option value</td><td><em>string | number</em></td></tr><tr><td>color <code>v3.1.0</code></td><td>Text color</td><td><em>string</em></td></tr><tr><td>children</td><td>Cascade children</td><td><em>Option[]</em></td></tr><tr><td>disabled <code>v3.1.2</code></td><td>Whether to disable option</td><td><em>boolean</em></td></tr><tr><td>className <code>v3.1.0</code></td><td>className for the option</td><td><em>string | Array | object</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>change</td><td>Emitted when active option changed</td><td><code>{ value, selectedOptions, tabIndex }</code></td></tr><tr><td>finish</td><td>Emitted when all options is selected</td><td><code>{ value, selectedOptions, tabIndex }</code></td></tr><tr><td>close</td><td>Emitted when the close icon is clicked</td><td>-</td></tr><tr><td>click-tab</td><td>Emitted when a tab is clicked</td><td><em>activeTab: number, title: string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>title</td><td>Custom title</td><td>-</td></tr><tr><td>option <code>v3.1.4</code></td><td>Custom option text</td><td><em>{ option: Option, selected: boolean }</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CascaderOption</span>, <span class="hljs-title class_">CascaderFieldNames</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-cascader-header-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-cascader-header-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-cascader-title-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-cascader-title-line-height</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-cascader-close-icon-size</td><td><em>22px</em></td><td>-</td></tr><tr><td>–van-cascader-close-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-cascader-close-icon-active-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-cascader-selected-icon-size</td><td><em>18px</em></td><td>-</td></tr><tr><td>–van-cascader-tabs-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-cascader-active-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-cascader-options-height</td><td><em>384px</em></td><td>-</td></tr><tr><td>–van-cascader-tab-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-cascader-unselected-tab-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr></tbody></table></div>',16),cp=[pp],op={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",dp,cp)))},rp={class:"van-doc-markdown-body"},ip=t('<h1>Cell</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>The cell is a single display item in the list.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Cell</span>, <span class="hljs-title class_">CellGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Cell</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CellGroup</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Cell title&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Content&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Cell title&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Content&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Description&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="inset-grouped" tabindex="-1">Inset Grouped</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Cell title&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Content&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Cell title&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Content&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Description&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="size" tabindex="-1">Size</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Cell title&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Content&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;large&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Cell title&quot;</span>\n    <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Content&quot;</span>\n    <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;large&quot;</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Description&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="left-icon" tabindex="-1">Left Icon</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Cell title&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;location-o&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="value-only" tabindex="-1">Value only</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Content&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="link" tabindex="-1">Link</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Cell title&quot;</span> <span class="hljs-attr">is-link</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Cell title&quot;</span> <span class="hljs-attr">is-link</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Content&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Cell title&quot;</span> <span class="hljs-attr">is-link</span> <span class="hljs-attr">arrow-direction</span>=<span class="hljs-string">&quot;down&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Content&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="router" tabindex="-1">Router</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;URL&quot;</span> <span class="hljs-attr">is-link</span> <span class="hljs-attr">url</span>=<span class="hljs-string">&quot;/vant/mobile.html&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Vue Router&quot;</span> <span class="hljs-attr">is-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;index&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="group-title" tabindex="-1">Group Title</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Group 1&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Cell title&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Content&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Group 2&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Cell title&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Content&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="use-slots" tabindex="-1">Use Slots</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Content&quot;</span> <span class="hljs-attr">is-link</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- Use the title slot to customize the title --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">title</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;custom-title&quot;</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;shop-o&quot;</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- Use the right-icon slot to customize the right icon --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;search-icon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.custom-title</span> {\n    <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">4px</span>;\n    <span class="hljs-attribute">vertical-align</span>: middle;\n  }\n\n  <span class="hljs-selector-class">.search-icon</span> {\n    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;\n    <span class="hljs-attribute">line-height</span>: inherit;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="vertical-center" tabindex="-1">Vertical Center</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">center</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Cell title&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Content&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Description&quot;</span> /&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="cellgroup-props" tabindex="-1">CellGroup Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>title</td><td>Group title</td><td><em>string</em></td><td>-</td></tr><tr><td>inset <code>v3.1.0</code></td><td>Whether to be inset grouped</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>border</td><td>Whether to show outer border</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="cell-props" tabindex="-1">Cell Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>title</td><td>Title</td><td><em>number | string</em></td><td>-</td></tr><tr><td>value</td><td>Right text</td><td><em>number | string</em></td><td>-</td></tr><tr><td>label</td><td>Description below the title</td><td><em>string</em></td><td>-</td></tr><tr><td>size</td><td>Size，can be set to <code>large</code></td><td><em>string</em></td><td>-</td></tr><tr><td>icon</td><td>Left Icon</td><td><em>string</em></td><td>-</td></tr><tr><td>icon-prefix</td><td>Icon className prefix</td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>border</td><td>Whether to show inner border</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>center</td><td>Whether to center content vertically</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>url</td><td>Link URL</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>Target route of the link, same as to of vue-router</td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>If true, the navigation will not leave a history record</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>clickable</td><td>Whether to show click feedback when clicked</td><td><em>boolean</em></td><td><code>null</code></td></tr><tr><td>is-link</td><td>Whether to show link icon</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>required</td><td>Whether to show required mark</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>arrow-direction</td><td>Can be set to <code>left</code> <code>up</code> <code>down</code></td><td><em>string</em></td><td><code>right</code></td></tr><tr><td>title-style</td><td>Title style</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>title-class</td><td>Title className</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>value-class</td><td>Value className</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>label-class</td><td>Label className</td><td><em>string | Array | object</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="cell-events" tabindex="-1">Cell Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when cell is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="cellgroup-slots" tabindex="-1">CellGroup Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Default slot</td></tr><tr><td>title</td><td>Custom title</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="cell-slots" tabindex="-1">Cell Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>title</td><td>Custom title</td></tr><tr><td>value <code>v3.1.1</code></td><td>Custom value</td></tr><tr><td>label</td><td>Custom label</td></tr><tr><td>icon</td><td>Custom left icon</td></tr><tr><td>right-icon</td><td>Custom right icon</td></tr><tr><td>extra</td><td>Custom extra content on the right</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CellArrowDirection</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-cell-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-cell-line-height</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-cell-vertical-padding</td><td><em>10px</em></td><td>-</td></tr><tr><td>–van-cell-horizontal-padding</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-cell-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-cell-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-cell-border-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr><tr><td>–van-cell-active-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-cell-required-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-cell-label-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-cell-label-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-cell-label-line-height</td><td><em>var(–van-line-height-sm)</em></td><td>-</td></tr><tr><td>–van-cell-label-margin-top</td><td><em>var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-cell-value-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-cell-icon-size</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-cell-right-icon-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-cell-large-vertical-padding</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-cell-large-title-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-cell-large-label-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-cell-group-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-cell-group-title-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-cell-group-title-padding</td><td><em>var(–van-padding-md) var(–van-padding-md) var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-cell-group-title-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-cell-group-title-line-height</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-cell-group-inset-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-cell-group-inset-border-radius</td><td><em>var(–van-border-radius-lg)</em></td><td>-</td></tr><tr><td>–van-cell-group-inset-title-padding</td><td><em>var(–van-padding-md) var(–van-padding-md) var(–van-padding-xs) var(–van-padding-xl)</em></td><td>-</td></tr></tbody></table></div>',23),hp=[ip],jp={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",rp,hp)))},up={class:"van-doc-markdown-body"},gp=t('<h1>Checkbox</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>A group of options for multiple choices.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Checkbox</span>, <span class="hljs-title class_">CheckboxGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Checkbox</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CheckboxGroup</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>Checkbox<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-keyword">return</span> {\n      checked,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="disabled" tabindex="-1">Disabled</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>Checkbox<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-shape" tabindex="-1">Custom Shape</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span>&gt;</span>Checkbox<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-color" tabindex="-1">Custom Color</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">checked-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span>&gt;</span>Checkbox<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-icon-size" tabindex="-1">Custom Icon Size</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">icon-size</span>=<span class="hljs-string">&quot;24px&quot;</span>&gt;</span>Checkbox<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-icon" tabindex="-1">Custom Icon</h3><p>Use icon slot to custom icon.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  customize icon\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;props&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;img-icon&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;props.checked ? activeIcon : inactiveIcon&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.img-icon</span> {\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-keyword">return</span> {\n      checked,\n      <span class="hljs-attr">activeIcon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/user-active.png&#39;</span>,\n      <span class="hljs-attr">inactiveIcon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/user-inactive.png&#39;</span>,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="disable-label-click" tabindex="-1">Disable Label Click</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">label-disabled</span>&gt;</span>Checkbox<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="checkbox-group" tabindex="-1">Checkbox Group</h3><p>When Checkboxes are inside a CheckboxGroup, the checked checkboxes’s name is an array and bound with CheckboxGroup by v-model.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;a&quot;</span>&gt;</span>Checkbox a<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;b&quot;</span>&gt;</span>Checkbox b<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>([<span class="hljs-string">&#39;a&#39;</span>, <span class="hljs-string">&#39;b&#39;</span>]);\n    <span class="hljs-keyword">return</span> { checked };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="horizontal" tabindex="-1">Horizontal</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;horizontal&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;a&quot;</span>&gt;</span>Checkbox a<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;b&quot;</span>&gt;</span>Checkbox b<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">return</span> { checked };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="maximum-amount-of-checked-options" tabindex="-1">Maximum amount of checked options</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">:max</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;a&quot;</span>&gt;</span>Checkbox a<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;b&quot;</span>&gt;</span>Checkbox b<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;c&quot;</span>&gt;</span>Checkbox c<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="toggle-all" tabindex="-1">Toggle All</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;checkboxGroup&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;a&quot;</span>&gt;</span>Checkbox a<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;b&quot;</span>&gt;</span>Checkbox b<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;c&quot;</span>&gt;</span>Checkbox c<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;checkAll&quot;</span>&gt;</span>Check All<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;toggleAll&quot;</span>&gt;</span>Toggle All<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">const</span> checkboxGroup = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">checkAll</span> = (<span class="hljs-params"></span>) =&gt; {\n      checkboxGroup.<span class="hljs-property">value</span>.<span class="hljs-title function_">toggleAll</span>(<span class="hljs-literal">true</span>);\n    }\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">toggleAll</span> = (<span class="hljs-params"></span>) =&gt; {\n      checkboxGroup.<span class="hljs-property">value</span>.<span class="hljs-title function_">toggleAll</span>();\n    },\n\n    <span class="hljs-keyword">return</span> {\n      checked,\n      checkAll,\n      toggleAll,\n      checkboxGroup,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="inside-a-cell" tabindex="-1">Inside a Cell</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span>\n      <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item, index) in list&quot;</span>\n      <span class="hljs-attr">clickable</span>\n      <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span>\n      <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;`Checkbox ${item}`&quot;</span>\n      @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;toggle(index)&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right-icon</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span>\n          <span class="hljs-attr">:name</span>=<span class="hljs-string">&quot;item&quot;</span>\n          <span class="hljs-attr">:ref</span>=<span class="hljs-string">&quot;el =&gt; checkboxRefs[index] = el&quot;</span>\n          @<span class="hljs-attr">click.stop</span>\n        /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref, onBeforeUpdate } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">const</span> checkboxRefs = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">toggle</span> = (<span class="hljs-params">index</span>) =&gt; {\n      checkboxRefs.<span class="hljs-property">value</span>[index].<span class="hljs-title function_">toggle</span>();\n    };\n\n    <span class="hljs-title function_">onBeforeUpdate</span>(<span class="hljs-function">() =&gt;</span> {\n      checkboxRefs.<span class="hljs-property">value</span> = [];\n    });\n\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">list</span>: [<span class="hljs-string">&#39;a&#39;</span>, <span class="hljs-string">&#39;b&#39;</span>],\n      toggle,\n      checked,\n      checkboxRefs,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="checkbox-props" tabindex="-1">Checkbox Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Check status</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>name</td><td>Checkbox name</td><td><em>any</em></td><td>-</td></tr><tr><td>shape</td><td>Can be set to <code>square</code></td><td><em>string</em></td><td><code>round</code></td></tr><tr><td>disabled</td><td>Disable checkbox</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>label-disabled</td><td>Whether to disable label click</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>label-position</td><td>Can be set to <code>left</code></td><td><em>string</em></td><td><code>right</code></td></tr><tr><td>icon-size</td><td>Icon size</td><td><em>number | string</em></td><td><code>20px</code></td></tr><tr><td>checked-color</td><td>Checked color</td><td><em>string</em></td><td><code>#1989fa</code></td></tr><tr><td>bind-group</td><td>Whether to bind with CheckboxGroup</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="checkboxgroup-props" tabindex="-1">CheckboxGroup Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Names of all checked checkboxes</td><td><em>any[]</em></td><td>-</td></tr><tr><td>disabled</td><td>Whether to disable all checkboxes</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>max</td><td>Maximum amount of checked options</td><td><em>number | string</em></td><td><code>0</code>(Unlimited)</td></tr><tr><td>direction</td><td>Direction, can be set to <code>horizontal</code></td><td><em>string</em></td><td><code>vertical</code></td></tr><tr><td>icon-size</td><td>Icon size of all checkboxes</td><td><em>number | string</em></td><td><code>20px</code></td></tr><tr><td>checked-color</td><td>Checked color of all checkboxes</td><td><em>string</em></td><td><code>#1989fa</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="checkbox-events" tabindex="-1">Checkbox Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>change</td><td>Emitted when value changed</td><td><em>checked: boolean</em></td></tr><tr><td>click</td><td>Emitted when the checkbox is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="checkboxgroup-events" tabindex="-1">CheckboxGroup Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>change</td><td>Emitted when value changed</td><td><em>names: any[]</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="checkbox-slots" tabindex="-1">Checkbox Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>default</td><td>Custom label</td><td>-</td></tr><tr><td>icon</td><td>Custom icon</td><td><em>{ checked: boolean, disabled: boolean }</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="checkboxgroup-methods" tabindex="-1">CheckboxGroup Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get CheckboxGroup instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>toggleAll</td><td>Toggle check status of all checkboxes</td><td><em>options?: boolean | object</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="toggleall-usage" tabindex="-1">toggleAll Usage</h3><pre><code class="language-js"><span class="hljs-keyword">const</span> { checkboxGroup } = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>;\n\n<span class="hljs-comment">// Toggle all</span>\ncheckboxGroup.<span class="hljs-title function_">toggleAll</span>();\n<span class="hljs-comment">// Select all</span>\ncheckboxGroup.<span class="hljs-title function_">toggleAll</span>(<span class="hljs-literal">true</span>);\n<span class="hljs-comment">// Unselect all</span>\ncheckboxGroup.<span class="hljs-title function_">toggleAll</span>(<span class="hljs-literal">false</span>);\n\n<span class="hljs-comment">// Toggle all, skip disabled</span>\ncheckboxGroup.<span class="hljs-title function_">toggleAll</span>({\n  <span class="hljs-attr">skipDisabled</span>: <span class="hljs-literal">true</span>,\n});\n<span class="hljs-comment">// Select all, skip disabled</span>\ncheckboxGroup.<span class="hljs-title function_">toggleAll</span>({\n  <span class="hljs-attr">checked</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">skipDisabled</span>: <span class="hljs-literal">true</span>,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="checkbox-methods" tabindex="-1">Checkbox Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get Checkbox instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>toggle</td><td>Toggle check status</td><td><em>checked?: boolean</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">CheckboxInstance</span>,\n  <span class="hljs-title class_">CheckboxGroupInstance</span>,\n  <span class="hljs-title class_">CheckboxGroupToggleAllOptions</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>CheckboxInstance</code> and <code>CheckboxGroupInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CheckboxInstance</span>, <span class="hljs-title class_">CheckboxGroupInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> checkboxRef = ref&lt;<span class="hljs-title class_">CheckboxInstance</span>&gt;();\n<span class="hljs-keyword">const</span> checkboxGroupRef = ref&lt;<span class="hljs-title class_">CheckboxGroupInstance</span>&gt;();\n\ncheckboxRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">toggle</span>();\ncheckboxGroupRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">toggleAll</span>();\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-checkbox-size</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-checkbox-border-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-checkbox-transition-duration</td><td><em>var(–van-animation-duration-fast)</em></td><td>-</td></tr><tr><td>–van-checkbox-label-margin</td><td><em>var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-checkbox-label-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-checkbox-checked-icon-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-checkbox-disabled-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-checkbox-disabled-label-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-checkbox-disabled-background-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr></tbody></table></div>',28),mp=[gp],vp={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",up,mp)))},bp={class:"van-doc-markdown-body"},fp=t('<h1>Circle</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Circular progress bar component, and supports gradient color animation.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Circle</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Circle</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;30&quot;</span>\n  <span class="hljs-attr">:speed</span>=<span class="hljs-string">&quot;100&quot;</span>\n  <span class="hljs-attr">:text</span>=<span class="hljs-string">&quot;text&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref, computed } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentRate = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> text = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> currentRate.<span class="hljs-property">value</span>.<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">0</span>) + <span class="hljs-string">&#39;%&#39;</span>);\n\n    <span class="hljs-keyword">return</span> {\n      text,\n      currentRate,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-width" tabindex="-1">Custom Width</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">:stroke-width</span>=<span class="hljs-string">&quot;60&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Custom Width&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-color" tabindex="-1">Custom Color</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">layer-color</span>=<span class="hljs-string">&quot;#ebedf0&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Custom Color&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="gradient" tabindex="-1">Gradient</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">:color</span>=<span class="hljs-string">&quot;gradientColor&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Gradient&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentRate = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> gradientColor = {\n      <span class="hljs-string">&#39;0%&#39;</span>: <span class="hljs-string">&#39;#3fecff&#39;</span>,\n      <span class="hljs-string">&#39;100%&#39;</span>: <span class="hljs-string">&#39;#6149f6&#39;</span>,\n    };\n\n    <span class="hljs-keyword">return</span> {\n      currentRate,\n      gradientColor,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="counter-clockwise" tabindex="-1">Counter Clockwise</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">:clockwise</span>=<span class="hljs-string">&quot;false&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Counter Clockwise&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-size" tabindex="-1">Custom Size</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;120px&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Custom Size&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="start-position" tabindex="-1">Start Position</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">:text</span>=<span class="hljs-string">&quot;Left&quot;</span>\n  <span class="hljs-attr">start-position</span>=<span class="hljs-string">&quot;left&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Right&quot;</span>\n  <span class="hljs-attr">start-position</span>=<span class="hljs-string">&quot;right&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-circle</span>\n  <span class="hljs-attr">v-model:current-rate</span>=<span class="hljs-string">&quot;currentRate&quot;</span>\n  <span class="hljs-attr">:rate</span>=<span class="hljs-string">&quot;rate&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Bottom&quot;</span>\n  <span class="hljs-attr">start-position</span>=<span class="hljs-string">&quot;bottom&quot;</span>\n/&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model:current-rate</td><td>Current rate</td><td><em>number</em></td><td>-</td></tr><tr><td>rate</td><td>Target rate</td><td><em>number | string</em></td><td><code>100</code></td></tr><tr><td>size</td><td>Circle size</td><td><em>number | string</em></td><td><code>100px</code></td></tr><tr><td>color</td><td>Progress color, passing object to render gradient</td><td><em>string | object</em></td><td><code>#1989fa</code></td></tr><tr><td>layer-color</td><td>Layer color</td><td><em>string</em></td><td><code>white</code></td></tr><tr><td>fill</td><td>Fill color</td><td><em>string</em></td><td><code>none</code></td></tr><tr><td>speed</td><td>Animate speed（rate/s）</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>text</td><td>Text</td><td><em>string</em></td><td>-</td></tr><tr><td>stroke-width</td><td>Stroke width</td><td><em>number | string</em></td><td><code>40</code></td></tr><tr><td>stroke-linecap</td><td>Stroke linecap，can be set to <code>square</code> <code>butt</code></td><td><em>string</em></td><td><code>round</code></td></tr><tr><td>clockwise</td><td>Whether to be clockwise</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>start-position <code>v3.2.1</code></td><td>Progress start position，can be set to <code>left</code>、<code>right</code>、<code>bottom</code></td><td><em>CircleStartPosition</em></td><td><code>top</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>custom text content</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CircleStartPosition</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-circle-size</td><td><em>100px</em></td><td>-</td></tr><tr><td>–van-circle-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-circle-layer-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-circle-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-circle-text-font-weight</td><td><em>var(–van-font-weight-bold)</em></td><td>-</td></tr><tr><td>–van-circle-text-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-circle-text-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr></tbody></table></div>',17),yp=[fp],wp={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",bp,yp)))},qp={class:"van-doc-markdown-body"},xp=t('<h1>Layout</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Quickly and easily create layouts with <code>van-row</code> and <code>van-col</code>.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Col</span>, <span class="hljs-title class_">Row</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Col</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Row</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><p>Layout are based on 24-column. The attribute <code>span</code> in <code>Col</code> means the number of column the grid spans. Of course, You can use <code>offset</code> attribute to set number of spacing on the left side of the grid.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>span: 8<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>span: 8<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>span: 8<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>span: 4<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">offset</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>offset: 4, span: 10<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">offset</span>=<span class="hljs-string">&quot;12&quot;</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;12&quot;</span>&gt;</span>offset: 12, span: 12<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="column-spacing" tabindex="-1">Column Spacing</h3><p>Set grid spacing using <code>gutter</code> attribute. The default value is 0.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-row</span> <span class="hljs-attr">gutter</span>=<span class="hljs-string">&quot;20&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>span: 8<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>span: 8<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>span: 8<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="justify-content" tabindex="-1">Justify Content</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-row</span> <span class="hljs-attr">justify</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-row</span> <span class="hljs-attr">justify</span>=<span class="hljs-string">&quot;end&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-row</span> <span class="hljs-attr">justify</span>=<span class="hljs-string">&quot;space-between&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-row</span> <span class="hljs-attr">justify</span>=<span class="hljs-string">&quot;space-around&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-col</span> <span class="hljs-attr">span</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>span: 6<span class="hljs-tag">&lt;/<span class="hljs-name">van-col</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-row</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="row-props" tabindex="-1">Row Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>gutter</td><td>Grid spacing（px）</td><td><em>number | string</em></td><td>-</td></tr><tr><td>tag</td><td>Custom element tag</td><td><em>string</em></td><td><code>div</code></td></tr><tr><td>justify</td><td>Flex main axis，can be set to end/center/space-around/space-between</td><td><em>string</em></td><td><code>start</code></td></tr><tr><td>align</td><td>Flex cross axis, be set to center/bottom</td><td><em>string</em></td><td><code>top</code></td></tr><tr><td>wrap <code>v3.0.11</code></td><td>Whether to wrap</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="col-props" tabindex="-1">Col Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>span</td><td>number of column the grid spans</td><td><em>number | string</em></td><td>-</td></tr><tr><td>offset</td><td>number of spacing on the left side of the grid</td><td><em>number | string</em></td><td>-</td></tr><tr><td>tag</td><td>Custom element tag</td><td><em>string</em></td><td><code>div</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="row-events" tabindex="-1">Row Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when the row is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="col-events" tabindex="-1">Col Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when the col is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">RowAlign</span>, <span class="hljs-title class_">RowJustify</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div>',13),kp=[xp],zp={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",qp,kp)))},_p={class:"van-doc-markdown-body"},Cp=t('<h1>Collapse</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Place a group of content in multiple collapsible panels, click the title of the panel to expand or contract its content.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Collapse</span>, <span class="hljs-title class_">CollapseItem</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Collapse</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CollapseItem</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><p>Use <code>v-model</code> to control the name of active panels.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-collapse</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;activeNames&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title1&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title2&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title3&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeNames = <span class="hljs-title function_">ref</span>([<span class="hljs-string">&#39;1&#39;</span>]);\n    <span class="hljs-keyword">return</span> { activeNames };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="accordion" tabindex="-1">Accordion</h3><p>In accordion mode, only one panel can be expanded at the same time.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-collapse</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;activeName&quot;</span> <span class="hljs-attr">accordion</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title1&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title2&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title3&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeName = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;1&#39;</span>);\n    <span class="hljs-keyword">return</span> { activeName };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="disabled" tabindex="-1">Disabled</h3><p>Use the <code>disabled</code> prop to disable CollapseItem.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-collapse</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;activeNames&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title1&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title2&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>\n    Content\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title3&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>\n    Content\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-title" tabindex="-1">Custom title</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-collapse</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;activeNames&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">title</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>Title1 <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;question-o&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    Content\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-collapse-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title2&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;shop-o&quot;</span>&gt;</span>\n    Content\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-collapse</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeNames = <span class="hljs-title function_">ref</span>([<span class="hljs-string">&#39;1&#39;</span>]);\n    <span class="hljs-keyword">return</span> { activeNames };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="collapse-props" tabindex="-1">Collapse Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Names of current active panels</td><td>accordion mode： <em>number | string</em><br>non-accordion mode：<em>(number | string)[]</em></td><td>-</td></tr><tr><td>accordion</td><td>Whether to be accordion mode</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>border</td><td>Whether to show outer border</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="collapse-events" tabindex="-1">Collapse Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>change</td><td>Emitted when switching panel</td><td>activeNames</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="collapseitem-props" tabindex="-1">CollapseItem Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>name</td><td>Name</td><td><em>number | string</em></td><td><code>index</code></td></tr><tr><td>icon</td><td>Left Icon</td><td><em>string</em></td><td>-</td></tr><tr><td>size</td><td>Title size，can be set to <code>large</code></td><td><em>string</em></td><td>-</td></tr><tr><td>title</td><td>Title</td><td><em>number | string</em></td><td>-</td></tr><tr><td>value</td><td>Right text</td><td><em>number | string</em></td><td>-</td></tr><tr><td>label</td><td>Description below the title</td><td><em>string</em></td><td>-</td></tr><tr><td>border</td><td>Whether to show inner border</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>disabled</td><td>Whether to disabled collapse</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly <code>v3.0.12</code></td><td>Whether to be readonly</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>is-link</td><td>Whether to show link icon</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>title-class</td><td>Title className</td><td><em>string</em></td><td>-</td></tr><tr><td>value-class</td><td>Value className</td><td><em>string</em></td><td>-</td></tr><tr><td>label-class</td><td>Label className</td><td><em>string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="collapseitem-methods" tabindex="-1">CollapseItem Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get CollapseItem instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>toggle</td><td>Toggle expanded status</td><td><em>expanded: boolean</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CollapseItemInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>CollapseItemInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CollapseItemInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> collapseItemRef = ref&lt;<span class="hljs-title class_">CollapseItemInstance</span>&gt;();\n\ncollapseItemRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">toggle</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="collapseitem-slots" tabindex="-1">CollapseItem Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Content</td></tr><tr><td>title</td><td>Custom header title</td></tr><tr><td>value</td><td>Custom header value</td></tr><tr><td>label <code>v3.1.1</code></td><td>Custom header label</td></tr><tr><td>icon</td><td>Custom header left icon</td></tr><tr><td>right-icon</td><td>Custom header right icon</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-collapse-item-transition-duration</td><td><em>var(–van-animation-duration-base)</em></td><td>-</td></tr><tr><td>–van-collapse-item-content-padding</td><td><em>var(–van-padding-sm) var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-collapse-item-content-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-collapse-item-content-line-height</td><td><em>1.5</em></td><td>-</td></tr><tr><td>–van-collapse-item-content-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-collapse-item-content-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-collapse-item-title-disabled-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr></tbody></table></div>',17),Sp=[Cp],Tp={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",_p,Sp)))},Ip={class:"van-doc-markdown-body"},Pp=t('<h1>ConfigProvider</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to config the theme of Vant components.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ConfigProvider</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ConfigProvider</span>);\n</code></pre></div><h2 id="custom-theme" tabindex="-1">Custom Theme</h2><div class="van-doc-card"><h3 id="intro-1" tabindex="-1">Intro</h3><p>Vant organize component styles through <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Using_CSS_custom_properties">CSS Variables</a>, you can custom themes by overriding these CSS Variables.</p><h4 id="demo" tabindex="-1">Demo</h4><p>Looking at the style of the Button component, you can see that the following variables exist on the <code>.van-button--primary</code> class:</p><pre><code class="language-css"><span class="hljs-selector-class">.van-button--primary</span> {\n  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">var</span>(--van-button-primary-color);\n  <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--van-button-primary-background-color);\n}\n</code></pre><p>The default values of these variables are defined on the <code>root</code> node:</p><pre><code class="language-css"><span class="hljs-selector-pseudo">:root</span> {\n  <span class="hljs-attr">--van-white</span>: <span class="hljs-number">#fff</span>;\n  <span class="hljs-attr">--van-blue</span>: <span class="hljs-number">#1989fa</span>;\n  <span class="hljs-attr">--van-button-primary-color</span>: <span class="hljs-built_in">var</span>(--van-white);\n  <span class="hljs-attr">--van-button-primary-background-color</span>: <span class="hljs-built_in">var</span>(--van-primary-color);\n}\n</code></pre></div><div class="van-doc-card"><h3 id="custom-css-variables" tabindex="-1">Custom CSS Variables</h3><h4 id="override-by-css" tabindex="-1">Override by CSS</h4><p>You can directly override these CSS variables in the code, and the style of the Button component will change accordingly:</p><pre><code class="language-css"><span class="hljs-comment">/* the Primary Button will turn red */</span>\n<span class="hljs-selector-pseudo">:root</span> {\n  <span class="hljs-attr">--van-button-primary-background-color</span>: red;\n}\n</code></pre><h4 id="override-by-configprovider" tabindex="-1">Override by ConfigProvider</h4><p>The <code>ConfigProvider</code> component provides the ability to override CSS variables. You need to wrap a <code>ConfigProvider</code> component at the root node and configure some CSS variables through the <code>theme-vars</code> property.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-config-provider</span> <span class="hljs-attr">:theme-vars</span>=<span class="hljs-string">&quot;themeVars&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-form</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;rate&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Rate&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;rate&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;slider&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Slider&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;slider&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin: 16px&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">round</span> <span class="hljs-attr">block</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">native-type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>\n        Submit\n      <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-form</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-config-provider</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> rate = <span class="hljs-title function_">ref</span>(<span class="hljs-number">4</span>);\n    <span class="hljs-keyword">const</span> slider = <span class="hljs-title function_">ref</span>(<span class="hljs-number">50</span>);\n\n    <span class="hljs-comment">// ThemeVars will be converted to the corresponding CSS variable</span>\n    <span class="hljs-comment">// For example, sliderBarHeight will be converted to `--van-slider-bar-height`</span>\n    <span class="hljs-keyword">const</span> themeVars = {\n      <span class="hljs-attr">rateIconFullColor</span>: <span class="hljs-string">&#39;#07c160&#39;</span>,\n      <span class="hljs-attr">sliderBarHeight</span>: <span class="hljs-string">&#39;4px&#39;</span>,\n      <span class="hljs-attr">sliderButtonWidth</span>: <span class="hljs-string">&#39;20px&#39;</span>,\n      <span class="hljs-attr">sliderButtonHeight</span>: <span class="hljs-string">&#39;20px&#39;</span>,\n      <span class="hljs-attr">sliderActiveBackgroundColor</span>: <span class="hljs-string">&#39;#07c160&#39;</span>,\n      <span class="hljs-attr">buttonPrimaryBorderColor</span>: <span class="hljs-string">&#39;#07c160&#39;</span>,\n      <span class="hljs-attr">buttonPrimaryBackgroundColor</span>: <span class="hljs-string">&#39;#07c160&#39;</span>,\n    };\n\n    <span class="hljs-keyword">return</span> {\n      rate,\n      slider,\n      themeVars,\n    };\n  },\n};\n</code></pre><blockquote><p>Tips：ConfigProvider only affects its child components.</p></blockquote></div><div class="van-doc-card"><h3 id="basic-variables" tabindex="-1">Basic Variables</h3><p>CSS variables in Vant are divided into <strong>basic variables</strong> and <strong>component variables</strong>. Component variables will inherit the basic variables. After modifying the basic variables, all related components will be affected.</p><h4 id="modify-basic-variables" tabindex="-1">Modify Basic Variables</h4><ul><li>The basic variables can only be modified through the <code>root</code> selector.</li><li>The component variables can be modified through the <code>root</code> selector and <code>ConfigProvider</code> component.</li></ul><h4 id="variable-list" tabindex="-1">Variable List</h4><p>There are all <strong>Basic Variables</strong> below, for component CSS Variables, please refer to the documentation of each component.</p><pre><code class="language-less"><span class="hljs-comment">// Color Palette</span>\n<span class="hljs-attr">--van-black</span>: #000;\n<span class="hljs-attr">--van-white</span>: #fff;\n<span class="hljs-attr">--van-gray-1</span>: #f7f8fa;\n<span class="hljs-attr">--van-gray-2</span>: #f2f3f5;\n<span class="hljs-attr">--van-gray-3</span>: #ebedf0;\n<span class="hljs-attr">--van-gray-4</span>: #dcdee0;\n<span class="hljs-attr">--van-gray-5</span>: #c8c9cc;\n<span class="hljs-attr">--van-gray-6</span>: #969799;\n<span class="hljs-attr">--van-gray-7</span>: #646566;\n<span class="hljs-attr">--van-gray-8</span>: #323233;\n<span class="hljs-attr">--van-red</span>: #ee0a24;\n<span class="hljs-attr">--van-blue</span>: #1989fa;\n<span class="hljs-attr">--van-orange</span>: #ff976a;\n<span class="hljs-attr">--van-orange-dark</span>: #ed6a0c;\n<span class="hljs-attr">--van-orange-light</span>: #fffbe8;\n<span class="hljs-attr">--van-green</span>: #07c160;\n\n<span class="hljs-comment">// Gradient Colors</span>\n<span class="hljs-attr">--van-gradient-red</span>: linear-gradient(to <span class="hljs-attribute">right, #ff6034, #ee0a24);\n--van-gradient-orange</span>: linear-gradient(to right, <span class="hljs-number">#ffd01e</span>, <span class="hljs-number">#ff8917</span>);\n\n<span class="hljs-comment">// Component Colors</span>\n<span class="hljs-attr">--van-primary-color</span>: var(<span class="hljs-attr">--van-blue</span>);\n<span class="hljs-attr">--van-success-color</span>: var(<span class="hljs-attr">--van-green</span>);\n<span class="hljs-attr">--van-danger-color</span>: var(<span class="hljs-attr">--van-red</span>);\n<span class="hljs-attr">--van-warning-color</span>: var(<span class="hljs-attr">--van-orange</span>);\n<span class="hljs-attr">--van-text-color</span>: var(<span class="hljs-attr">--van-gray-8</span>);\n<span class="hljs-attr">--van-active-color</span>: var(<span class="hljs-attr">--van-gray-2</span>);\n<span class="hljs-attr">--van-active-opacity</span>: 0.7;\n<span class="hljs-attr">--van-disabled-opacity</span>: 0.5;\n<span class="hljs-attr">--van-background-color</span>: var(<span class="hljs-attr">--van-gray-1</span>);\n<span class="hljs-attr">--van-background-color-light</span>: #fafafa;\n<span class="hljs-attr">--van-text-link-color</span>: #576b95;\n\n<span class="hljs-comment">// Padding</span>\n<span class="hljs-attr">--van-padding-base</span>: 4px;\n<span class="hljs-attr">--van-padding-xs</span>: 8px;\n<span class="hljs-attr">--van-padding-sm</span>: 12px;\n<span class="hljs-attr">--van-padding-md</span>: 16px;\n<span class="hljs-attr">--van-padding-lg</span>: 24px;\n<span class="hljs-attr">--van-padding-xl</span>: 32px;\n\n<span class="hljs-comment">// Font</span>\n<span class="hljs-attr">--van-font-size-xs</span>: 10px;\n<span class="hljs-attr">--van-font-size-sm</span>: 12px;\n<span class="hljs-attr">--van-font-size-md</span>: 14px;\n<span class="hljs-attr">--van-font-size-lg</span>: 16px;\n<span class="hljs-attr">--van-font-weight-bold</span>: 500;\n<span class="hljs-attr">--van-line-height-xs</span>: 14px;\n<span class="hljs-attr">--van-line-height-sm</span>: 18px;\n<span class="hljs-attr">--van-line-height-md</span>: 20px;\n<span class="hljs-attr">--van-line-height-lg</span>: 22px;\n<span class="hljs-attr">--van-base-font-family</span>: -apple-system, BlinkMacSystemFont, &#39;Helvetica Neue&#39;,\n  Helvetica, Segoe UI, Arial, Roboto, &#39;PingFang SC&#39;, &#39;miui&#39;, &#39;Hiragino Sans GB&#39;,\n  &#39;Microsoft Yahei&#39;, sans-serif;\n<span class="hljs-attr">--van-price-integer-font-family</span>: Avenir-Heavy, PingFang SC, Helvetica Neue,\n  Arial, sans-serif;\n\n<span class="hljs-comment">// Animation</span>\n<span class="hljs-attr">--van-animation-duration-base</span>: 0.3s;\n<span class="hljs-attr">--van-animation-duration-fast</span>: 0.2s;\n<span class="hljs-attr">--van-animation-timing-function-enter</span>: ease-out;\n<span class="hljs-attr">--van-animation-timing-function-leave</span>: ease-in;\n\n<span class="hljs-comment">// Border</span>\n<span class="hljs-attr">--van-border-color</span>: var(<span class="hljs-attr">--van-gray-3</span>);\n<span class="hljs-attr">--van-border-width-base</span>: 1px;\n<span class="hljs-attr">--van-border-radius-sm</span>: 2px;\n<span class="hljs-attr">--van-border-radius-md</span>: 4px;\n<span class="hljs-attr">--van-border-radius-lg</span>: 8px;\n<span class="hljs-attr">--van-border-radius-max</span>: 999px;\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>theme-vars</td><td>Theme variables</td><td><em>object</em></td><td>-</td></tr><tr><td>tag <code>v3.1.2</code></td><td>HTML Tag of root element</td><td><em>string</em></td><td><code>div</code></td></tr><tr><td>icon-prefix <code>v3.1.3</code></td><td>Icon className prefix</td><td><em>string</em></td><td><code>van-icon</code></td></tr></tbody></table></div>',9),Dp=[Pp],Ap={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ip,Dp)))},Np={class:"van-doc-markdown-body"},Ep=t('<h1>ContactCard</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Display contact information in the form of cards.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ContactCard</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ContactCard</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="add-contact" tabindex="-1">Add Contact</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-contact-card</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;add&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onAdd&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onAdd</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;add&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      onAdd,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="edit-contact" tabindex="-1">Edit Contact</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-contact-card</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;edit&quot;</span> <span class="hljs-attr">:tel</span>=<span class="hljs-string">&quot;tel&quot;</span> <span class="hljs-attr">:name</span>=<span class="hljs-string">&quot;name&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onEdit&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> tel = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;13000000000&#39;</span>);\n    <span class="hljs-keyword">const</span> name = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;John Snow&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onEdit</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;edit&#39;</span>);\n\n    <span class="hljs-keyword">return</span> {\n      tel,\n      name,\n      onEdit,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="uneditable" tabindex="-1">Uneditable</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-contact-card</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;edit&quot;</span>\n  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;John Snow&quot;</span>\n  <span class="hljs-attr">tel</span>=<span class="hljs-string">&quot;13000000000&quot;</span>\n  <span class="hljs-attr">:editable</span>=<span class="hljs-string">&quot;false&quot;</span>\n/&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>type</td><td>Can be set to <code>edit</code></td><td><em>string</em></td><td><code>add</code></td></tr><tr><td>name</td><td>Name</td><td><em>string</em></td><td>-</td></tr><tr><td>tel</td><td>Phone</td><td><em>string</em></td><td>-</td></tr><tr><td>add-text</td><td>Add card text</td><td><em>string</em></td><td><code>Add contact info</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when component is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ContactCardType</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-contact-card-padding</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-contact-card-add-icon-size</td><td><em>40px</em></td><td>-</td></tr><tr><td>–van-contact-card-add-icon-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-contact-card-value-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr></tbody></table></div>',13),Rp=[Ep],Up={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Np,Rp)))},Bp={class:"van-doc-markdown-body"},Vp=t('<h1>ContactEdit</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Edit and save the contact information.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ContactEdit</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ContactEdit</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-contact-edit</span>\n  <span class="hljs-attr">is-edit</span>\n  <span class="hljs-attr">show-set-default</span>\n  <span class="hljs-attr">:contact-info</span>=<span class="hljs-string">&quot;editingContact&quot;</span>\n  <span class="hljs-attr">set-default-label</span>=<span class="hljs-string">&quot;Set as the default contact&quot;</span>\n  @<span class="hljs-attr">save</span>=<span class="hljs-string">&quot;onSave&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> editingContact = <span class="hljs-title function_">ref</span>({});\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSave</span> = (<span class="hljs-params">contactInfo</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Save&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onDelete</span> = (<span class="hljs-params">contactInfo</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Delete&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      onSave,\n      onDelete,\n      editingContact,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>contact-info</td><td>Contact Info</td><td><em>Contact</em></td><td><code>[]</code></td></tr><tr><td>is-edit</td><td>Whether is editing</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>is-saving</td><td>Whether to show save button loading status</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>is-deleting</td><td>Whether to show delete button loading status</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>tel-validator</td><td>The method to validate tel</td><td><em>(tel: string) =&gt; boolean</em></td><td>-</td></tr><tr><td>show-set-default</td><td>Whether to show default contact switch</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>set-default-label</td><td>default contact switch label</td><td><em>string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>save</td><td>Emitted when the save button is clicked</td><td>content：contact info</td></tr><tr><td>delete</td><td>Emitted when the delete button is clicked</td><td>content：contact info</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="data-structure-of-contact" tabindex="-1">Data Structure of Contact</h3><table><thead><tr><th>key</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>name</td><td>Name</td><td><em>string</em></td></tr><tr><td>tel</td><td>Phone</td><td><em>string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ContactEditInfo</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-contact-edit-padding</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-contact-edit-fields-radius</td><td><em>var(–van-border-radius-md)</em></td><td>-</td></tr><tr><td>–van-contact-edit-buttons-padding</td><td><em>var(–van-padding-xl) 0</em></td><td>-</td></tr><tr><td>–van-contact-edit-button-margin-bottom</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-contact-edit-button-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-contact-edit-field-label-width</td><td><em>4.1em</em></td><td>-</td></tr></tbody></table></div>',12),Lp=[Vp],Fp={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Bp,Lp)))},Wp={class:"van-doc-markdown-body"},Mp=t('<h1>ContactList</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to display the contact list.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ContactList</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ContactList</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-contact-list</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;chosenContactId&quot;</span>\n  <span class="hljs-attr">:list</span>=<span class="hljs-string">&quot;list&quot;</span>\n  <span class="hljs-attr">default-tag-text</span>=<span class="hljs-string">&quot;default&quot;</span>\n  @<span class="hljs-attr">add</span>=<span class="hljs-string">&quot;onAdd&quot;</span>\n  @<span class="hljs-attr">edit</span>=<span class="hljs-string">&quot;onEdit&quot;</span>\n  @<span class="hljs-attr">select</span>=<span class="hljs-string">&quot;onSelect&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> chosenContactId = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;1&#39;</span>);\n    <span class="hljs-keyword">const</span> list = <span class="hljs-title function_">ref</span>([\n      {\n        <span class="hljs-attr">id</span>: <span class="hljs-string">&#39;1&#39;</span>,\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;John Snow&#39;</span>,\n        <span class="hljs-attr">tel</span>: <span class="hljs-string">&#39;13000000000&#39;</span>,\n        <span class="hljs-attr">isDefault</span>: <span class="hljs-literal">true</span>,\n      },\n      {\n        <span class="hljs-attr">id</span>: <span class="hljs-string">&#39;2&#39;</span>,\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Ned Stark&#39;</span>,\n        <span class="hljs-attr">tel</span>: <span class="hljs-string">&#39;1310000000&#39;</span>,\n      },\n    ]);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onAdd</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Add&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onEdit</span> = (<span class="hljs-params">contact</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Edit&#39;</span> + contact.<span class="hljs-property">id</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSelect</span> = (<span class="hljs-params">contact</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Select&#39;</span> + contact.<span class="hljs-property">id</span>);\n\n    <span class="hljs-keyword">return</span> {\n      list,\n      onAdd,\n      onEdit,\n      onSelect,\n      chosenContactId,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Id of chosen contact</td><td><em>number | string</em></td><td>-</td></tr><tr><td>list</td><td>Contact list</td><td><em>Contact[]</em></td><td><code>[]</code></td></tr><tr><td>add-text</td><td>Add button text</td><td><em>string</em></td><td><code>Add new contact</code></td></tr><tr><td>default-tag-text</td><td>Default tag text</td><td><em>string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>add</td><td>Emitted when the add button is clicked</td><td>-</td></tr><tr><td>edit</td><td>Emitted when the edit button is clicked</td><td><em>contact: Contact，index: number</em></td></tr><tr><td>select</td><td>Emitted when a contact is selected</td><td><em>contact: Contact, index: number</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="data-structure-of-contact" tabindex="-1">Data Structure of Contact</h3><table><thead><tr><th>key</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>id</td><td>ID</td><td><em>number | string</em></td></tr><tr><td>name</td><td>Name</td><td><em>string</em></td></tr><tr><td>tel</td><td>Phone</td><td><em>string</em></td></tr><tr><td>isDefault</td><td>Is default contact</td><td><em>boolean</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ContactListItem</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-contact-list-edit-icon-size</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-contact-list-add-button-z-index</td><td><em>999</em></td><td>-</td></tr><tr><td>–van-contact-list-item-padding</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-contact-list-item-radio-icon-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr></tbody></table></div>',12),Op=[Mp],Gp={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Wp,Op)))},Hp={class:"van-doc-markdown-body"},Kp=t('<h1>CountDown</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to display the countdown value in real time, and precision supports milliseconds.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CountDown</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CountDown</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-count-down</span> <span class="hljs-attr">:time</span>=<span class="hljs-string">&quot;time&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> time = <span class="hljs-title function_">ref</span>(<span class="hljs-number">30</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>);\n    <span class="hljs-keyword">return</span> { time };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-format" tabindex="-1">Custom Format</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-count-down</span> <span class="hljs-attr">:time</span>=<span class="hljs-string">&quot;time&quot;</span> <span class="hljs-attr">format</span>=<span class="hljs-string">&quot;DD Day, HH:mm:ss&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="millisecond" tabindex="-1">Millisecond</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-count-down</span> <span class="hljs-attr">millisecond</span> <span class="hljs-attr">:time</span>=<span class="hljs-string">&quot;time&quot;</span> <span class="hljs-attr">format</span>=<span class="hljs-string">&quot;HH:mm:ss:SS&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-style" tabindex="-1">Custom Style</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-count-down</span> <span class="hljs-attr">:time</span>=<span class="hljs-string">&quot;time&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">default</span>=<span class="hljs-string">&quot;timeData&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>{{ timeData.hours }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;colon&quot;</span>&gt;</span>:<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>{{ timeData.minutes }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;colon&quot;</span>&gt;</span>:<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span>&gt;</span>{{ timeData.seconds }}<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-count-down</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.colon</span> {\n    <span class="hljs-attribute">display</span>: inline-block;\n    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">4px</span>;\n    <span class="hljs-attribute">color</span>: <span class="hljs-number">#ee0a24</span>;\n  }\n  <span class="hljs-selector-class">.block</span> {\n    <span class="hljs-attribute">display</span>: inline-block;\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">22px</span>;\n    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;\n    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>;\n    <span class="hljs-attribute">text-align</span>: center;\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ee0a24</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="manual-control" tabindex="-1">Manual Control</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-count-down</span>\n  <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;countDown&quot;</span>\n  <span class="hljs-attr">millisecond</span>\n  <span class="hljs-attr">:time</span>=<span class="hljs-string">&quot;3000&quot;</span>\n  <span class="hljs-attr">:auto-start</span>=<span class="hljs-string">&quot;false&quot;</span>\n  <span class="hljs-attr">format</span>=<span class="hljs-string">&quot;ss:SSS&quot;</span>\n  @<span class="hljs-attr">finish</span>=<span class="hljs-string">&quot;onFinish&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">clickable</span> <span class="hljs-attr">:column-num</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Start&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;play-circle-o&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;start&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Pause&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;pause-circle-o&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;pause&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Reset&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;replay&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;reset&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> countDown = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">start</span> = (<span class="hljs-params"></span>) =&gt; {\n      countDown.<span class="hljs-property">value</span>.<span class="hljs-title function_">start</span>();\n    };\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">pause</span> = (<span class="hljs-params"></span>) =&gt; {\n      countDown.<span class="hljs-property">value</span>.<span class="hljs-title function_">pause</span>();\n    };\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">reset</span> = (<span class="hljs-params"></span>) =&gt; {\n      countDown.<span class="hljs-property">value</span>.<span class="hljs-title function_">reset</span>();\n    };\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onFinish</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Finished&#39;</span>);\n\n    <span class="hljs-keyword">return</span> {\n      start,\n      pause,\n      reset,\n      onFinish,\n      countDown,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>time</td><td>Total time, unit milliseconds</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>format</td><td>Time format</td><td><em>string</em></td><td><code>HH:mm:ss</code></td></tr><tr><td>auto-start</td><td>Whether to auto start count down</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>millisecond</td><td>Whether to enable millisecond render</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="available-formats" tabindex="-1">Available formats</h3><table><thead><tr><th>Format</th><th>Description</th></tr></thead><tbody><tr><td>DD</td><td>Day</td></tr><tr><td>HH</td><td>Hour</td></tr><tr><td>mm</td><td>Minute</td></tr><tr><td>ss</td><td>Second</td></tr><tr><td>S</td><td>Millisecond, 1-digit</td></tr><tr><td>SS</td><td>Millisecond, 2-digits</td></tr><tr><td>SSS</td><td>Millisecond, 3-digits</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>finish</td><td>Emitted when count down finished</td><td>-</td></tr><tr><td>change</td><td>Emitted when count down changed</td><td><em>currentTime: CurrentTime</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>default</td><td>Custom Content</td><td><em>currentTime: CurrentTime</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="currenttime-structure" tabindex="-1">CurrentTime Structure</h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>total</td><td>Total time, unit milliseconds</td><td><em>number</em></td></tr><tr><td>days</td><td>Remain days</td><td><em>number</em></td></tr><tr><td>hours</td><td>Remain hours</td><td><em>number</em></td></tr><tr><td>minutes</td><td>Remain minutes</td><td><em>number</em></td></tr><tr><td>seconds</td><td>Remain seconds</td><td><em>number</em></td></tr><tr><td>milliseconds</td><td>Remain milliseconds</td><td><em>number</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get CountDown instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>start</td><td>Start count down</td><td>-</td><td>-</td></tr><tr><td>pause</td><td>Pause count down</td><td>-</td><td>-</td></tr><tr><td>reset</td><td>Reset count down</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CountDownInstance</span>, <span class="hljs-title class_">CountDownCurrentTime</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>CountDownInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">CountDownInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> countDownRef = ref&lt;<span class="hljs-title class_">CountDownInstance</span>&gt;();\n\ncountDownRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">start</span>();\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-count-down-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-count-down-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-count-down-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr></tbody></table></div>',19),$p=[Kp],Jp={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Hp,$p)))},Xp={class:"van-doc-markdown-body"},Yp=t('<h1>Coupon</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used for redemption and selection of coupons.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CouponCell</span>, <span class="hljs-title class_">CouponList</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CouponCell</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CouponList</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-comment">&lt;!-- Coupon Cell --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-coupon-cell</span>\n  <span class="hljs-attr">:coupons</span>=<span class="hljs-string">&quot;coupons&quot;</span>\n  <span class="hljs-attr">:chosen-coupon</span>=<span class="hljs-string">&quot;chosenCoupon&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showList = true&quot;</span>\n/&gt;</span>\n<span class="hljs-comment">&lt;!-- Coupon List --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showList&quot;</span>\n  <span class="hljs-attr">round</span>\n  <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>\n  <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 90%; padding-top: 4px;&quot;</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-coupon-list</span>\n    <span class="hljs-attr">:coupons</span>=<span class="hljs-string">&quot;coupons&quot;</span>\n    <span class="hljs-attr">:chosen-coupon</span>=<span class="hljs-string">&quot;chosenCoupon&quot;</span>\n    <span class="hljs-attr">:disabled-coupons</span>=<span class="hljs-string">&quot;disabledCoupons&quot;</span>\n    @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>\n    @<span class="hljs-attr">exchange</span>=<span class="hljs-string">&quot;onExchange&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> coupon = {\n      <span class="hljs-attr">available</span>: <span class="hljs-number">1</span>,\n      <span class="hljs-attr">originCondition</span>: <span class="hljs-number">0</span>,\n      <span class="hljs-attr">reason</span>: <span class="hljs-string">&#39;&#39;</span>,\n      <span class="hljs-attr">value</span>: <span class="hljs-number">150</span>,\n      <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Coupon name&#39;</span>,\n      <span class="hljs-attr">startAt</span>: <span class="hljs-number">1489104000</span>,\n      <span class="hljs-attr">endAt</span>: <span class="hljs-number">1514592000</span>,\n      <span class="hljs-attr">valueDesc</span>: <span class="hljs-string">&#39;1.5&#39;</span>,\n      <span class="hljs-attr">unitDesc</span>: <span class="hljs-string">&#39;元&#39;</span>,\n    };\n\n    <span class="hljs-keyword">const</span> coupons = <span class="hljs-title function_">ref</span>([coupon]);\n    <span class="hljs-keyword">const</span> showList = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> chosenCoupon = <span class="hljs-title function_">ref</span>(-<span class="hljs-number">1</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">index</span>) =&gt; {\n      showList.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      chosenCoupon.<span class="hljs-property">value</span> = index;\n    };\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onExchange</span> = (<span class="hljs-params">code</span>) =&gt; {\n      coupons.<span class="hljs-property">value</span>.<span class="hljs-title function_">push</span>(coupon);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      coupons,\n      showList,\n      onChange,\n      onExchange,\n      chosenCoupon,\n      <span class="hljs-attr">disabledCoupons</span>: [coupon],\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="couponcell-props" tabindex="-1">CouponCell Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>title</td><td>Cell title</td><td><em>string</em></td><td><code>Coupon</code></td></tr><tr><td>chosen-coupon</td><td>Index of chosen coupon</td><td><em>number | string</em></td><td><code>-1</code></td></tr><tr><td>coupons</td><td>Coupon list</td><td><em>Coupon[]</em></td><td><code>[]</code></td></tr><tr><td>editable</td><td>Cell editable</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>border</td><td>Whether to show inner border</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>currency</td><td>Currency symbol</td><td><em>string</em></td><td><code>¥</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="couponlist-props" tabindex="-1">CouponList Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Current exchange code</td><td><em>string</em></td><td>-</td></tr><tr><td>chosen-coupon</td><td>Index of chosen coupon</td><td><em>number</em></td><td><code>-1</code></td></tr><tr><td>coupons</td><td>Coupon list</td><td><em>Coupon[]</em></td><td><code>[]</code></td></tr><tr><td>disabled-coupons</td><td>Disabled coupon list</td><td><em>Coupon[]</em></td><td><code>[]</code></td></tr><tr><td>enabled-title</td><td>Title of coupon list</td><td><em>string</em></td><td><code>Available</code></td></tr><tr><td>disabled-title</td><td>Title of disabled coupon list</td><td><em>string</em></td><td><code>Unavailable</code></td></tr><tr><td>exchange-button-text</td><td>Exchange button text</td><td><em>string</em></td><td><code>Exchange</code></td></tr><tr><td>exchange-button-loading</td><td>Whether to show loading in exchange button</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>exchange-button-disabled</td><td>Whether to disable exchange button</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>exchange-min-length</td><td>Min length to enable exchange button</td><td><em>number</em></td><td><code>1</code></td></tr><tr><td>displayed-coupon-index</td><td>Index of displayed coupon</td><td><em>number</em></td><td>-</td></tr><tr><td>close-button-text</td><td>Close button text</td><td><em>string</em></td><td><code>Close</code></td></tr><tr><td>input-placeholder</td><td>Input placeholder</td><td><em>string</em></td><td><code>Coupon code</code></td></tr><tr><td>currency</td><td>Currency symbol</td><td><em>string</em></td><td><code>¥</code></td></tr><tr><td>empty-image</td><td>Placeholder image when list is empty</td><td><em>string</em></td><td><code>https://img.yzcdn.cn/vant/coupon-empty.png</code></td></tr><tr><td>show-count</td><td>Whether to show coupon count in tab title</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="couponlist-events" tabindex="-1">CouponList Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>change</td><td>Emitted when chosen coupon changed</td><td>index: index of chosen coupon</td></tr><tr><td>exchange</td><td>Emitted when exchanging coupon</td><td>code: exchange code</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="couponlist-slots" tabindex="-1">CouponList Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>list-footer <code>v3.0.18</code></td><td>Coupon list bottom</td></tr><tr><td>disabled-list-footer <code>v3.0.18</code></td><td>Unavailable coupons list bottom</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="data-structure-of-coupon" tabindex="-1">Data Structure of Coupon</h3><table><thead><tr><th>Key</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>id</td><td>Id</td><td><em>string</em></td></tr><tr><td>name</td><td>Name</td><td><em>string</em></td></tr><tr><td>condition</td><td>Condition</td><td><em>string</em></td></tr><tr><td>startAt</td><td>Start time (Timestamp, unit second)</td><td><em>number</em></td></tr><tr><td>endAt</td><td>End time (Timestamp, unit second)</td><td><em>number</em></td></tr><tr><td>description</td><td>Description</td><td><em>string</em></td></tr><tr><td>reason</td><td>Unavailable reason</td><td><em>string</em></td></tr><tr><td>value</td><td>Value</td><td><em>number</em></td></tr><tr><td>valueDesc</td><td>Value Text</td><td><em>string</em></td></tr><tr><td>unitDesc</td><td>Unit Text</td><td><em>string</em></td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-coupon-margin</td><td><em>0 var(–van-padding-sm) var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-coupon-content-height</td><td><em>84px</em></td><td>-</td></tr><tr><td>–van-coupon-content-padding</td><td><em>14px 0</em></td><td>-</td></tr><tr><td>–van-coupon-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-coupon-active-background-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-coupon-border-radius</td><td><em>var(–van-border-radius-lg)</em></td><td>-</td></tr><tr><td>–van-coupon-box-shadow</td><td><em>0 0 4px rgba(0, 0, 0, 0.1)</em></td><td>-</td></tr><tr><td>–van-coupon-head-width</td><td><em>96px</em></td><td>-</td></tr><tr><td>–van-coupon-amount-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-coupon-amount-font-size</td><td><em>30px</em></td><td>-</td></tr><tr><td>–van-coupon-currency-font-size</td><td><em>40%</em></td><td>-</td></tr><tr><td>–van-coupon-name-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-coupon-disabled-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-coupon-description-padding</td><td><em>var(–van-padding-xs) var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-coupon-description-border-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr><tr><td>–van-coupon-corner-checkbox-icon-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-coupon-list-background-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-coupon-list-field-padding</td><td><em>5px 0 5px var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-coupon-list-exchange-button-height</td><td><em>32px</em></td><td>-</td></tr><tr><td>–van-coupon-list-close-button-height</td><td><em>40px</em></td><td>-</td></tr><tr><td>–van-coupon-list-empty-image-size</td><td><em>200px</em></td><td>-</td></tr><tr><td>–van-coupon-list-empty-tip-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-coupon-list-empty-tip-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-coupon-list-empty-tip-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-coupon-cell-selected-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr></tbody></table></div>',13),Zp=[Yp],Qp={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Xp,Zp)))},sc={class:"van-doc-markdown-body"},ac=t('<h1>DatetimePicker</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to select time, support date and time dimensions, usually used with the <a href="#/en-US/popup">Popup</a> component.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">DatetimePicker</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">DatetimePicker</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="choose-date" tabindex="-1">Choose Date</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;date&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Choose Date&quot;</span>\n  <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span>\n  <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2021</span>, <span class="hljs-number">0</span>, <span class="hljs-number">17</span>));\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n      <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2025</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>),\n      currentDate,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="choose-year-month" tabindex="-1">Choose Year-Month</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;year-month&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Choose Year-Month&quot;</span>\n  <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span>\n  <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span>\n  <span class="hljs-attr">:formatter</span>=<span class="hljs-string">&quot;formatter&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatter</span> = (<span class="hljs-params">type, val</span>) =&gt; {\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;year&#39;</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">${val}</span> Year`</span>;\n      }\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;month&#39;</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">${val}</span> Month`</span>;\n      }\n      <span class="hljs-keyword">return</span> val;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n      <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2025</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>),\n      formatter,\n      currentDate,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="choose-month-day" tabindex="-1">Choose Month-Day</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;month-day&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Choose Month-Day&quot;</span>\n  <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span>\n  <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span>\n  <span class="hljs-attr">:formatter</span>=<span class="hljs-string">&quot;formatter&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatter</span> = (<span class="hljs-params">type, val</span>) =&gt; {\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;month&#39;</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">${val}</span> Month`</span>;\n      }\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;day&#39;</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-string">`<span class="hljs-subst">${val}</span> Day`</span>;\n      }\n      <span class="hljs-keyword">return</span> val;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n      <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2025</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>),\n      formatter,\n      currentDate,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="choose-time" tabindex="-1">Choose Time</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentTime&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;time&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Choose Time&quot;</span>\n  <span class="hljs-attr">:min-hour</span>=<span class="hljs-string">&quot;10&quot;</span>\n  <span class="hljs-attr">:max-hour</span>=<span class="hljs-string">&quot;20&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentTime = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;12:00&#39;</span>);\n    <span class="hljs-keyword">return</span> { currentTime };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="choose-datetime" tabindex="-1">Choose DateTime</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;datetime&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Choose DateTime&quot;</span>\n  <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span>\n  <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n      <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2025</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>),\n      currentDate,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="choose-datehour" tabindex="-1">Choose DateHour</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;datehour&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Choose DateTime&quot;</span>\n  <span class="hljs-attr">:min-date</span>=<span class="hljs-string">&quot;minDate&quot;</span>\n  <span class="hljs-attr">:max-date</span>=<span class="hljs-string">&quot;maxDate&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">minDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2020</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),\n      <span class="hljs-attr">maxDate</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2025</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>),\n      currentDate,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="option-filter" tabindex="-1">Option Filter</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentTime&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;time&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Option Filter&quot;</span>\n  <span class="hljs-attr">:filter</span>=<span class="hljs-string">&quot;filter&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentTime = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;12:00&#39;</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">filter</span> = (<span class="hljs-params">type, options</span>) =&gt; {\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;minute&#39;</span>) {\n        <span class="hljs-keyword">return</span> options.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">option</span>) =&gt;</span> <span class="hljs-title class_">Number</span>(option) % <span class="hljs-number">5</span> === <span class="hljs-number">0</span>);\n      }\n      <span class="hljs-keyword">return</span> options;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      filter,\n      currentTime,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="columns-order" tabindex="-1">Columns Order</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentDate&quot;</span>\n  <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;date&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Columns Order&quot;</span>\n  <span class="hljs-attr">:columns-order</span>=<span class="hljs-string">&quot;[&#39;month&#39;, &#39;day&#39;, &#39;year&#39;]&quot;</span>\n  <span class="hljs-attr">:formatter</span>=<span class="hljs-string">&quot;formatter&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentDate = <span class="hljs-title function_">ref</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatter</span> = (<span class="hljs-params">type, val</span>) =&gt; {\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;year&#39;</span>) {\n        <span class="hljs-keyword">return</span> val + <span class="hljs-string">&#39; Year&#39;</span>;\n      }\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;month&#39;</span>) {\n        <span class="hljs-keyword">return</span> val + <span class="hljs-string">&#39; Month&#39;</span>;\n      }\n      <span class="hljs-keyword">if</span> (type === <span class="hljs-string">&#39;day&#39;</span>) {\n        <span class="hljs-keyword">return</span> val + <span class="hljs-string">&#39; Day&#39;</span>;\n      }\n      <span class="hljs-keyword">return</span> val;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      formatter,\n      currentDate,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>type</td><td>Can be set to <code>date</code> <code>time</code><br> <code>year-month</code> <code>month-day</code> <code>datehour</code></td><td><em>string</em></td><td><code>datetime</code></td></tr><tr><td>title</td><td>Toolbar title</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>confirm-button-text</td><td>Text of confirm button</td><td><em>string</em></td><td><code>Confirm</code></td></tr><tr><td>cancel-button-text</td><td>Text of cancel button</td><td><em>string</em></td><td><code>Cancel</code></td></tr><tr><td>show-toolbar</td><td>Whether to show toolbar</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>loading</td><td>Whether to show loading prompt</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly</td><td>Whether to be readonly</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>filter</td><td>Option filter</td><td><em>(type: string, values: string[]) =&gt; string[]</em></td><td>-</td></tr><tr><td>formatter</td><td>Option text formatter</td><td><em>(type: string, value: string) =&gt; string</em></td><td>-</td></tr><tr><td>columns-order</td><td>Array for ordering columns, where item can be set to<br> <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code> and <code>minute</code></td><td><em>string[]</em></td><td>-</td></tr><tr><td>item-height</td><td>Option height, supports <code>px</code> <code>vw</code> <code>vh</code> <code>rem</code> unit, default <code>px</code></td><td><em>number | string</em></td><td><code>44</code></td></tr><tr><td>visible-item-count</td><td>Count of visible columns</td><td><em>number | string</em></td><td><code>6</code></td></tr><tr><td>swipe-duration</td><td>Duration of the momentum animation，unit <code>ms</code></td><td><em>number | string</em></td><td><code>1000</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="datepicker-props" tabindex="-1">DatePicker Props</h3><p>Following props are supported when the type is date or datetime</p><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>min-date</td><td>Min date</td><td><em>Date</em></td><td>Ten years ago on January 1</td></tr><tr><td>max-date</td><td>Max date</td><td><em>Date</em></td><td>Ten years later on December 31</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="timepicker-props" tabindex="-1">TimePicker Props</h3><p>Following props are supported when the type is time</p><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>min-hour</td><td>Min hour for <code>time</code> type</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>max-hour</td><td>Max hour for <code>time</code> type</td><td><em>number | string</em></td><td><code>23</code></td></tr><tr><td>min-minute</td><td>Max minute for <code>time</code> type</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>max-minute</td><td>Max minute for <code>time</code> type</td><td><em>number | string</em></td><td><code>59</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>change</td><td>Emitted when value changed</td><td>value: current value</td></tr><tr><td>confirm</td><td>Emitted when the confirm button is clicked</td><td>value: current value</td></tr><tr><td>cancel</td><td>Emitted when the cancel button is clicked</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>default</td><td>Custom toolbar content</td><td>-</td></tr><tr><td>title</td><td>Custom title</td><td>-</td></tr><tr><td>confirm</td><td>Custom confirm button text</td><td>-</td></tr><tr><td>cancel</td><td>Custom cancel button text</td><td>-</td></tr><tr><td>option</td><td>Custom option content</td><td><em>option: string | object</em></td></tr><tr><td>columns-top</td><td>Custom content above columns</td><td>-</td></tr><tr><td>columns-bottom</td><td>Custom content below columns</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get DatetimePicker instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>getPicker</td><td>get Picker instance</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">DatetimePickerType</span>, <span class="hljs-title class_">DatetimePickerInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>DatetimePickerInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">DatetimePickerInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> datetimePickerRef = ref&lt;<span class="hljs-title class_">DatetimePickerInstance</span>&gt;();\n\ndatetimePickerRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">getPicker</span>();\n</code></pre></div>',20),tc=[ac],nc={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",sc,tc)))},lc={class:"van-doc-markdown-body"},ec=[t('<h1>Dialog</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>A modal box pops up on the page, which is often used for message prompts, message confirmation, or to complete specific interactive operations in the current page. It supports two methods: function call and component call.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Dialog</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Dialog</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="alert-dialog" tabindex="-1">Alert dialog</h3><p>Used to prompt for some messages, only including one confirm button.</p><pre><code class="language-js"><span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">alert</span>({\n  <span class="hljs-attr">title</span>: <span class="hljs-string">&#39;Title&#39;</span>,\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Content&#39;</span>,\n}).<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n  <span class="hljs-comment">// on close</span>\n});\n\n<span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">alert</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Content&#39;</span>,\n}).<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n  <span class="hljs-comment">// on close</span>\n});\n</code></pre></div><div class="van-doc-card"><h3 id="confirm-dialog" tabindex="-1">Confirm dialog</h3><p>Used to confirm some messages, including a confirm button and a cancel button.</p><pre><code class="language-js"><span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">confirm</span>({\n  <span class="hljs-attr">title</span>: <span class="hljs-string">&#39;Title&#39;</span>,\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Content&#39;</span>,\n})\n  .<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n    <span class="hljs-comment">// on confirm</span>\n  })\n  .<span class="hljs-title function_">catch</span>(<span class="hljs-function">() =&gt;</span> {\n    <span class="hljs-comment">// on cancel</span>\n  });\n</code></pre></div><div class="van-doc-card"><h3 id="round-button-style" tabindex="-1">Round Button Style</h3><p>Use round button style.</p><pre><code class="language-js"><span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">alert</span>({\n  <span class="hljs-attr">title</span>: <span class="hljs-string">&#39;Title&#39;</span>,\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Content&#39;</span>,\n  <span class="hljs-attr">theme</span>: <span class="hljs-string">&#39;round-button&#39;</span>,\n}).<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n  <span class="hljs-comment">// on close</span>\n});\n\n<span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">alert</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Content&#39;</span>,\n  <span class="hljs-attr">theme</span>: <span class="hljs-string">&#39;round-button&#39;</span>,\n}).<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n  <span class="hljs-comment">// on close</span>\n});\n</code></pre></div><div class="van-doc-card"><h3 id="async-close" tabindex="-1">Async Close</h3><pre><code class="language-js"><span class="hljs-keyword">const</span> <span class="hljs-title function_">beforeClose</span> = (<span class="hljs-params">action</span>) =&gt;\n  <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-title function_">resolve</span>(action === <span class="hljs-string">&#39;confirm&#39;</span>);\n    }, <span class="hljs-number">1000</span>);\n  });\n\n<span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">confirm</span>({\n  <span class="hljs-attr">title</span>: <span class="hljs-string">&#39;Title&#39;</span>,\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Content&#39;</span>,\n  beforeClose,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="global-method" tabindex="-1">Global Method</h3><p>After registering the Dialog component through <code>app.use</code>, the <code>$dialog</code> method will be automatically mounted on all subComponents of the app.</p><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">$dialog</span>.<span class="hljs-title function_">alert</span>({\n      <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Content&#39;</span>,\n    });\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="advanced-usage" tabindex="-1">Advanced Usage</h3><p>If you need to render vue components within a dialog, you can use dialog component.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-dialog</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">show-cancel-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/apple-3.jpg&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-dialog</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">return</span> { show };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>Dialog</td><td>Show dialog</td><td><em>options: DialogOptions</em></td><td><code>Promise&lt;void&gt;</code></td></tr><tr><td>Dialog.alert</td><td>Show alert dialog</td><td><em>options: DialogOptions</em></td><td><code>Promise&lt;void&gt;</code></td></tr><tr><td>Dialog.confirm</td><td>Show confirm dialog</td><td><em>options: DialogOptions</em></td><td><code>Promise&lt;void&gt;</code></td></tr><tr><td>Dialog.setDefaultOptions</td><td>Set default options of all dialogs</td><td><em>options: DialogOptions</em></td><td><code>void</code></td></tr><tr><td>Dialog.resetDefaultOptions</td><td>Reset default options of all dialogs</td><td>-</td><td><code>void</code></td></tr><tr><td>Dialog.close</td><td>Close dialog</td><td>-</td><td><code>void</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="dialogoptions" tabindex="-1">DialogOptions</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>title</td><td>Title</td><td><em>string</em></td><td>-</td></tr><tr><td>width</td><td>Dialog width</td><td><em>number | string</em></td><td><code>320px</code></td></tr><tr><td>message</td><td>Message</td><td><em>string | () =&gt; JSX.ELement</em></td><td>-</td></tr><tr><td>messageAlign</td><td>Message text align，can be set to <code>left</code> <code>right</code></td><td><em>string</em></td><td><code>center</code></td></tr><tr><td>theme</td><td>Theme style，can be set to <code>round-button</code></td><td><em>string</em></td><td><code>default</code></td></tr><tr><td>className</td><td>Custom className</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>showConfirmButton</td><td>Whether to show confirm button</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>showCancelButton</td><td>Whether to show cancel button</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>cancelButtonText</td><td>Cancel button text</td><td><em>string</em></td><td><code>Cancel</code></td></tr><tr><td>cancelButtonColor</td><td>Cancel button color</td><td><em>string</em></td><td><code>black</code></td></tr><tr><td>confirmButtonText</td><td>Confirm button text</td><td><em>string</em></td><td><code>Confirm</code></td></tr><tr><td>confirmButtonColor</td><td>Confirm button color</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>overlay</td><td>Whether to show overlay</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>overlayClass</td><td>Custom overlay class</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>overlayStyle</td><td>Custom overlay style</td><td><em>object</em></td><td>-</td></tr><tr><td>closeOnPopstate</td><td>Whether to close when popstate</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>closeOnClickOverlay</td><td>Whether to close when overlay is clicked</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>lockScroll</td><td>Whether to lock body scroll</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>allowHtml</td><td>Whether to allow HTML rendering in message</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>beforeClose</td><td>Callback function before close</td><td><em>(action: string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr><tr><td>transition</td><td>Transition, equivalent to <code>name</code> prop of <a href="https://v3.vuejs.org/api/built-in-components.html#transition">transition</a></td><td><em>string</em></td><td>-</td></tr><tr><td>teleport</td><td>Specifies a target element where Dialog will be mounted</td><td><em>string | Element</em></td><td><code>body</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model:show</td><td>Whether to show dialog</td><td><em>boolean</em></td><td>-</td></tr><tr><td>title</td><td>Title</td><td><em>string</em></td><td>-</td></tr><tr><td>width</td><td>Width</td><td><em>number | string</em></td><td><code>320px</code></td></tr><tr><td>message</td><td>Message</td><td><em>string | () =&gt; JSX.ELement</em></td><td>-</td></tr><tr><td>message-align</td><td>Message align，can be set to <code>left</code> <code>right</code></td><td><em>string</em></td><td><code>center</code></td></tr><tr><td>theme</td><td>Theme style，can be set to <code>round-button</code></td><td><em>string</em></td><td><code>default</code></td></tr><tr><td>show-confirm-button</td><td>Whether to show confirm button</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-cancel-button</td><td>Whether to show cancel button</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>cancel-button-text</td><td>Cancel button text</td><td><em>string</em></td><td><code>Cancel</code></td></tr><tr><td>cancel-button-color</td><td>Cancel button color</td><td><em>string</em></td><td><code>black</code></td></tr><tr><td>confirm-button-text</td><td>Confirm button text</td><td><em>string</em></td><td><code>Confirm</code></td></tr><tr><td>confirm-button-color</td><td>Confirm button color</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>overlay</td><td>Whether to show overlay</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>overlay-class</td><td>Custom overlay class</td><td><em>string</em></td><td>-</td></tr><tr><td>overlay-style</td><td>Custom overlay style</td><td><em>object</em></td><td>-</td></tr><tr><td>close-on-popstate</td><td>Whether to close when popstate</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-overlay</td><td>Whether to close when overlay is clicked</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>lazy-render</td><td>Whether to lazy render util appeared</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>lock-scroll</td><td>Whether to lock background scroll</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>allow-html</td><td>Whether to allow HTML rendering in message</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>before-close</td><td>Callback function before close</td><td><em>(action: string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr><tr><td>transition</td><td>Transition, equivalent to <code>name</code> prop of <a href="https://v3.vuejs.org/api/built-in-components.html#transition">transition</a></td><td><em>string</em></td><td>-</td></tr><tr><td>teleport</td><td>Specifies a target element where Dialog will be mounted</td><td><em>string | Element</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>confirm</td><td>Emitted when the confirm button is clicked</td><td>-</td></tr><tr><td>cancel</td><td>Emitted when the cancel button is clicked</td><td>-</td></tr><tr><td>open</td><td>Emitted when opening Dialog</td><td>-</td></tr><tr><td>close</td><td>Emitted when closing Dialog</td><td>-</td></tr><tr><td>opened</td><td>Emitted when Dialog is opened</td><td>-</td></tr><tr><td>closed</td><td>Emitted when Dialog is closed</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Custom message</td></tr><tr><td>title</td><td>Custom title</td></tr><tr><td>footer <code>v3.0.10</code></td><td>Custom footer</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">DialogTheme</span>,\n  <span class="hljs-title class_">DialogMessage</span>,\n  <span class="hljs-title class_">DialogOptions</span>,\n  <span class="hljs-title class_">DialogMessageAlign</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-dialog-width</td><td><em>320px</em></td><td>-</td></tr><tr><td>–van-dialog-small-screen-width</td><td><em>90%</em></td><td>-</td></tr><tr><td>–van-dialog-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-dialog-transition</td><td><em>var(–van-animation-duration-base)</em></td><td>-</td></tr><tr><td>–van-dialog-border-radius</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-dialog-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-dialog-header-font-weight</td><td><em>var(–van-font-weight-bold)</em></td><td>-</td></tr><tr><td>–van-dialog-header-line-height</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-dialog-header-padding-top</td><td><em>26px</em></td><td>-</td></tr><tr><td>–van-dialog-header-isolated-padding</td><td><em>var(–van-padding-lg) 0</em></td><td>-</td></tr><tr><td>–van-dialog-message-padding</td><td><em>var(–van-padding-lg)</em></td><td>-</td></tr><tr><td>–van-dialog-message-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-dialog-message-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-dialog-message-max-height</td><td><em>60vh</em></td><td>-</td></tr><tr><td>–van-dialog-has-title-message-text-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-dialog-has-title-message-padding-top</td><td><em>var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-dialog-button-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-dialog-round-button-height</td><td><em>36px</em></td><td>-</td></tr><tr><td>–van-dialog-confirm-button-text-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr></tbody></table></div>',19)],dc={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",lc,ec)))},pc={class:"van-doc-markdown-body"},cc=[t('<h1>Divider</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Separate content into multiple areas.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Divider</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Divider</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-divider</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="with-text" tabindex="-1">With Text</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-divider</span>&gt;</span>Text<span class="hljs-tag">&lt;/<span class="hljs-name">van-divider</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="content-position" tabindex="-1">Content Position</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-divider</span> <span class="hljs-attr">content-position</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>Text<span class="hljs-tag">&lt;/<span class="hljs-name">van-divider</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-divider</span> <span class="hljs-attr">content-position</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>Text<span class="hljs-tag">&lt;/<span class="hljs-name">van-divider</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="dashed" tabindex="-1">Dashed</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-divider</span> <span class="hljs-attr">dashed</span>&gt;</span>Text<span class="hljs-tag">&lt;/<span class="hljs-name">van-divider</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-style" tabindex="-1">Custom Style</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-divider</span>\n  <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ color: &#39;#1989fa&#39;, borderColor: &#39;#1989fa&#39;, padding: &#39;0 16px&#39; }&quot;</span>\n&gt;</span>\n  Text\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-divider</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>dashed</td><td>Whether to use dashed border</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>hairline</td><td>Whether to use hairline</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>content-position</td><td>Content position，can be set to <code>left</code> <code>right</code></td><td><em>string</em></td><td><code>center</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>content</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">DividerContentPosition</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-divider-margin</td><td><em>var(–van-padding-md) 0</em></td><td>-</td></tr><tr><td>–van-divider-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-divider-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-divider-line-height</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-divider-border-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr><tr><td>–van-divider-content-padding</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-divider-content-left-width</td><td><em>10%</em></td><td>-</td></tr><tr><td>–van-divider-content-right-width</td><td><em>10%</em></td><td>-</td></tr></tbody></table></div>',15)],oc={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",pc,cc)))},rc={class:"van-doc-markdown-body"},ic=[t('<h1>DropdownMenu</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>The menu list that pops down downwards.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">DropdownMenu</span>, <span class="hljs-title class_">DropdownItem</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">DropdownMenu</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">DropdownItem</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option1&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option2&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value1 = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> value2 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;a&#39;</span>);\n    <span class="hljs-keyword">const</span> option1 = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option1&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">0</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option2&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">1</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option3&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">2</span> },\n    ];\n    <span class="hljs-keyword">const</span> option2 = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option A&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;a&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option B&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;b&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option C&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#39;c&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      value1,\n      value2,\n      option1,\n      option2,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-content" tabindex="-1">Custom Content</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">center</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right-icon</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;switch1&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">center</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right-icon</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;switch2&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;padding: 5px 16px;&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">block</span> <span class="hljs-attr">round</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onConfirm&quot;</span>&gt;</span>\n        Confirm\n      <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-dropdown-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> item = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>);\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> switch1 = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> switch2 = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> options = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option1&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">0</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option2&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">1</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option3&#39;</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">2</span> },\n    ];\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params"></span>) =&gt; {\n      item.<span class="hljs-property">value</span>.<span class="hljs-title function_">toggle</span>();\n    };\n\n    <span class="hljs-keyword">return</span> {\n      item,\n      value,\n      switch1,\n      switch2,\n      options,\n      onConfirm,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-active-color" tabindex="-1">Custom Active Color</h3><p>Use <code>active-color</code> prop to custom active color of the title and options.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-menu</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option1&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option2&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="expand-direction" tabindex="-1">Expand Direction</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-menu</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;up&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option1&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option2&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="disabled" tabindex="-1">Disabled</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option1&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-dropdown-item</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;option2&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-dropdown-menu</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="dropdownmenu-props" tabindex="-1">DropdownMenu Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>active-color</td><td>Active color of title and option</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>direction</td><td>Expand direction, can be set to <code>up</code></td><td><em>string</em></td><td><code>down</code></td></tr><tr><td>z-index</td><td>z-index of menu item</td><td><em>number | string</em></td><td><code>10</code></td></tr><tr><td>duration</td><td>Transition duration, unit second</td><td><em>number | string</em></td><td><code>0.2</code></td></tr><tr><td>overlay</td><td>Whether to show overlay</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-overlay</td><td>Whether to close when overlay is clicked</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-outside</td><td>Whether to close when outside is clicked</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="dropdownitem-props" tabindex="-1">DropdownItem Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Value of current option</td><td><em>number | string</em></td><td>-</td></tr><tr><td>title</td><td>Item title</td><td><em>string</em></td><td>Text of selected option</td></tr><tr><td>options</td><td>Options</td><td><em>Option[]</em></td><td><code>[]</code></td></tr><tr><td>disabled</td><td>Whether to disable dropdown item</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>lazy-render</td><td>Whether to lazy render util opened</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>title-class</td><td>Title class</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>teleport</td><td>Specifies a target element where DropdownItem will be mounted</td><td><em>string | Element</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="dropdownitem-events" tabindex="-1">DropdownItem Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>change</td><td>Emitted select option and value changed</td><td>value</td></tr><tr><td>open</td><td>Emitted when opening menu</td><td>-</td></tr><tr><td>close</td><td>Emitted when closing menu</td><td>-</td></tr><tr><td>opened</td><td>Emitted when menu is opened</td><td>-</td></tr><tr><td>closed</td><td>Emitted when menu is closed</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="dropdownitem-slots" tabindex="-1">DropdownItem Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Content</td></tr><tr><td>title</td><td>Custom title</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="dropdownitem-methods" tabindex="-1">DropdownItem Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get DropdownItem instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>toggle</td><td>Toggle display</td><td><em>show?: boolean</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">DropdownItemOption</span>,\n  <span class="hljs-title class_">DropdownItemInstance</span>,\n  <span class="hljs-title class_">DropdownMenuDirection</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>DropdownItemInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">DropdownItemInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> dropdownItemRef = ref&lt;<span class="hljs-title class_">DropdownItemInstance</span>&gt;();\n\ndropdownItemRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">toggle</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="data-structure-of-option" tabindex="-1">Data Structure of Option</h3><table><thead><tr><th>Key</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>text</td><td>Text</td><td><em>string</em></td></tr><tr><td>value</td><td>Value</td><td><em>number | string</em></td></tr><tr><td>icon</td><td>Left icon</td><td><em>string</em></td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-dropdown-menu-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-box-shadow</td><td><em>0 2px 12px fade(var(–van-gray-7), 12)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-title-font-size</td><td><em>15px</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-title-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-title-active-text-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-title-disabled-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-title-padding</td><td><em>0 var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-title-line-height</td><td><em>var(–van-line-height-lg)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-option-active-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-dropdown-menu-content-max-height</td><td><em>80%</em></td><td>-</td></tr><tr><td>–van-dropdown-item-z-index</td><td><em>10</em></td><td>-</td></tr></tbody></table></div>',19)],hc={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",rc,ic)))},jc={class:"van-doc-markdown-body"},uc=[t('<h1>Empty</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Occupation reminder when empty.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Empty</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Empty</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-empty</span> <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;Description&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="image-type" tabindex="-1">Image Type</h3><p>Use the image prop to display different placeholder images.</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- Error --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-empty</span> <span class="hljs-attr">image</span>=<span class="hljs-string">&quot;error&quot;</span> <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;Description&quot;</span> /&gt;</span>\n<span class="hljs-comment">&lt;!-- Network --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-empty</span> <span class="hljs-attr">image</span>=<span class="hljs-string">&quot;network&quot;</span> <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;Description&quot;</span> /&gt;</span>\n<span class="hljs-comment">&lt;!-- Search --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-empty</span> <span class="hljs-attr">image</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;Description&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-image" tabindex="-1">Custom Image</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-empty</span>\n  <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;custom-image&quot;</span>\n  <span class="hljs-attr">image</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/leaf.jpg&quot;</span>\n  <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;Description&quot;</span>\n/&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.custom-image</span> <span class="hljs-selector-tag">img</span> {\n    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">100%</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="bottom-content" tabindex="-1">Bottom Content</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-empty</span> <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;Description&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">round</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bottom-button&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-empty</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.bottom-button</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">160px</span>;\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>image</td><td>Image type，can be set to <code>error</code> <code>network</code> <code>search</code> or image URL</td><td><em>string</em></td><td><code>default</code></td></tr><tr><td>image-size</td><td>Image size</td><td><em>number | string</em></td><td>-</td></tr><tr><td>description</td><td>Description</td><td><em>string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Custom bottom content</td></tr><tr><td>image</td><td>Custom image</td></tr><tr><td>description</td><td>Custom description</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-empty-padding</td><td><em>var(–van-padding-xl) 0</em></td><td>-</td></tr><tr><td>–van-empty-image-size</td><td><em>160px</em></td><td>-</td></tr><tr><td>–van-empty-description-margin-top</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-empty-description-padding</td><td><em>0 60px</em></td><td>-</td></tr><tr><td>–van-empty-description-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-empty-description-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-empty-description-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-empty-bottom-margin-top</td><td><em>24px</em></td><td>-</td></tr></tbody></table></div>',13)],gc={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",jc,uc)))},mc={class:"van-doc-markdown-body"},vc=[t('<h1>Field</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Field component let users enter and edit text.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Field</span>, <span class="hljs-title class_">CellGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Field</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CellGroup</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><p>The value of field is bound with v-model.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Label&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-type" tabindex="-1">Custom Type</h3><p>Use <code>type</code> prop to custom different type fields.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;tel&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;tel&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Phone&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;digit&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;digit&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Digit&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Number&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Password&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> tel = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> text = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> digit = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> number = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> password = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n\n    <span class="hljs-keyword">return</span> { tel, text, digit, number, password };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="disabled" tabindex="-1">Disabled</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Text&quot;</span> <span class="hljs-attr">model-value</span>=<span class="hljs-string">&quot;Input Readonly&quot;</span> <span class="hljs-attr">readonly</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Text&quot;</span> <span class="hljs-attr">model-value</span>=<span class="hljs-string">&quot;Input Disabled&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="show-icon" tabindex="-1">Show Icon</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Text&quot;</span>\n    <span class="hljs-attr">left-icon</span>=<span class="hljs-string">&quot;smile-o&quot;</span>\n    <span class="hljs-attr">right-icon</span>=<span class="hljs-string">&quot;warning-o&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Show Icon&quot;</span>\n  /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span>\n    <span class="hljs-attr">clearable</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Text&quot;</span>\n    <span class="hljs-attr">left-icon</span>=<span class="hljs-string">&quot;music-o&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Show Clear Icon&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value1 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> value2 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;123&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      value1,\n      value2,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="error-info" tabindex="-1">Error Info</h3><p>Use <code>error</code> or <code>error-message</code> to show error info.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;username&quot;</span>\n    <span class="hljs-attr">error</span>\n    <span class="hljs-attr">required</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Username&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Username&quot;</span>\n  /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;phone&quot;</span>\n    <span class="hljs-attr">required</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Phone&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Phone&quot;</span>\n    <span class="hljs-attr">error-message</span>=<span class="hljs-string">&quot;Invalid phone&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="insert-button" tabindex="-1">Insert Button</h3><p>Use button slot to insert button.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;sms&quot;</span> <span class="hljs-attr">center</span> <span class="hljs-attr">clearable</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;SMS&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;SMS&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Send SMS<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="format-value" tabindex="-1">Format Value</h3><p>Use <code>formatter</code> prop to format the input value.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Text&quot;</span>\n    <span class="hljs-attr">:formatter</span>=<span class="hljs-string">&quot;formatter&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Format On Change&quot;</span>\n  /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Text&quot;</span>\n    <span class="hljs-attr">:formatter</span>=<span class="hljs-string">&quot;formatter&quot;</span>\n    <span class="hljs-attr">format-trigger</span>=<span class="hljs-string">&quot;onBlur&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Format On Blur&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value1 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> value2 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatter</span> = (<span class="hljs-params">value</span>) =&gt; value.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/\\d/g</span>, <span class="hljs-string">&#39;&#39;</span>);\n\n    <span class="hljs-keyword">return</span> {\n      value1,\n      value2,\n      formatter,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="auto-resize" tabindex="-1">Auto Resize</h3><p>Textarea Field can be auto resize when has <code>autosize</code> prop.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;message&quot;</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Message&quot;</span>\n    <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;textarea&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Message&quot;</span>\n    <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;1&quot;</span>\n    <span class="hljs-attr">autosize</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="show-word-limit" tabindex="-1">Show Word Limit</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;message&quot;</span>\n    <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;2&quot;</span>\n    <span class="hljs-attr">autosize</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Message&quot;</span>\n    <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;textarea&quot;</span>\n    <span class="hljs-attr">maxlength</span>=<span class="hljs-string">&quot;50&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Message&quot;</span>\n    <span class="hljs-attr">show-word-limit</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="input-align" tabindex="-1">Input Align</h3><p>Use <code>input-align</code> prop to align the input value.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n    <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Text&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Input Align Right&quot;</span>\n    <span class="hljs-attr">input-align</span>=<span class="hljs-string">&quot;right&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Field value</td><td><em>number | string</em></td><td>-</td></tr><tr><td>label</td><td>Field label</td><td><em>string</em></td><td>-</td></tr><tr><td>name</td><td>Field name</td><td><em>string</em></td><td>-</td></tr><tr><td>id <code>v3.2.2</code></td><td>Input id, the for attribute of the label also will be set</td><td><em>string</em></td><td>-</td></tr><tr><td>type</td><td>Input type, can be set to <code>tel</code> <code>digit</code><br><code>number</code> <code>textarea</code> <code>password</code></td><td><em>string</em></td><td><code>text</code></td></tr><tr><td>size</td><td>Size，can be set to <code>large</code></td><td><em>string</em></td><td>-</td></tr><tr><td>maxlength</td><td>Max length of value</td><td><em>number | string</em></td><td>-</td></tr><tr><td>placeholder</td><td>Input placeholder</td><td><em>string</em></td><td>-</td></tr><tr><td>border</td><td>Whether to show inner border</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>disabled</td><td>Whether to disable field</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly</td><td>Whether to be readonly</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>colon</td><td>Whether to display colon after label</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>required</td><td>Whether to show required mark</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>center</td><td>Whether to center content vertically</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>clearable</td><td>Whether to be clearable</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>clear-icon <code>v3.0.12</code></td><td>Clear icon name</td><td><em>string</em></td><td><code>clear</code></td></tr><tr><td>clear-trigger</td><td>When to display the clear icon, <code>always</code> means to display the icon when value is not empty, <code>focus</code> means to display the icon when input is focused</td><td><em>string</em></td><td><code>focus</code></td></tr><tr><td>clickable</td><td>Whether to show click feedback when clicked</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>is-link</td><td>Whether to show link icon</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>autofocus</td><td>Whether to auto focus, unsupported in iOS</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-word-limit</td><td>Whether to show word limit, need to set the <code>maxlength</code> prop</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>error</td><td>Whether to mark the input content in red</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>error-message</td><td>Error message</td><td><em>string</em></td><td>-</td></tr><tr><td>error-message-align</td><td>Error message align, can be set to <code>center</code> <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>formatter</td><td>Input value formatter</td><td><em>(val: string) =&gt; string</em></td><td>-</td></tr><tr><td>format-trigger</td><td>When to format value，can be set to <code>onBlur</code></td><td><em>string</em></td><td><code>onChange</code></td></tr><tr><td>arrow-direction</td><td>Can be set to <code>left</code> <code>up</code> <code>down</code></td><td><em>string</em></td><td><code>right</code></td></tr><tr><td>label-class</td><td>Label className</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>label-width</td><td>Label width</td><td><em>number | string</em></td><td><code>6.2em</code></td></tr><tr><td>label-align</td><td>Label align, can be set to <code>center</code> <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>input-align</td><td>Input align, can be set to <code>center</code> <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>autosize</td><td>Textarea auto resize，can accept an object,<br>e.g. { maxHeight: 100, minHeight: 50 }</td><td><em>boolean | object</em></td><td><code>false</code></td></tr><tr><td>left-icon</td><td>Left side icon name</td><td><em>string</em></td><td>-</td></tr><tr><td>right-icon</td><td>Right side icon name</td><td><em>string</em></td><td>-</td></tr><tr><td>icon-prefix</td><td>Icon className prefix</td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>rules</td><td>Form validation rules</td><td><em>Rule[]</em></td><td>-</td></tr><tr><td>autocomplete <code>v3.0.3</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete">autocomplete</a> attribute of native input element</td><td><em>string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>update:model-value</td><td>Emitted when input value changed</td><td><em>value: string</em></td></tr><tr><td>focus</td><td>Emitted when input is focused</td><td><em>event: Event</em></td></tr><tr><td>blur</td><td>Emitted when input is blurred</td><td><em>event: Event</em></td></tr><tr><td>clear</td><td>Emitted when the clear icon is clicked</td><td><em>event: MouseEvent</em></td></tr><tr><td>click</td><td>Emitted when component is clicked</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-input</td><td>Emitted when the input is clicked</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-left-icon</td><td>Emitted when the left icon is clicked</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-right-icon</td><td>Emitted when the right icon is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get Field instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>focus</td><td>Trigger input focus</td><td>-</td><td>-</td></tr><tr><td>blur</td><td>Trigger input blur</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">FieldType</span>,\n  <span class="hljs-title class_">FieldRule</span>,\n  <span class="hljs-title class_">FieldInstance</span>,\n  <span class="hljs-title class_">FieldTextAlign</span>,\n  <span class="hljs-title class_">FieldClearTrigger</span>,\n  <span class="hljs-title class_">FieldFormatTrigger</span>,\n  <span class="hljs-title class_">FieldValidateError</span>,\n  <span class="hljs-title class_">FieldAutosizeConfig</span>,\n  <span class="hljs-title class_">FieldValidateTrigger</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>FieldInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">FieldInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> fieldRef = ref&lt;<span class="hljs-title class_">FieldInstance</span>&gt;();\n\nfieldRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">focus</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>label</td><td>Custom label</td></tr><tr><td>input</td><td>Custom input</td></tr><tr><td>left-icon</td><td>Custom left icon</td></tr><tr><td>right-icon</td><td>Custom right icon</td></tr><tr><td>button</td><td>Insert button</td></tr><tr><td>extra</td><td>Custom content on the right</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-field-label-width</td><td><em>6.2em</em></td><td>-</td></tr><tr><td>–van-field-label-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-field-label-margin-right</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-field-input-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-field-input-error-text-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-field-input-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-field-placeholder-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-field-icon-size</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-field-clear-icon-size</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-field-clear-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-field-right-icon-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-field-error-message-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-field-error-message-font-size</td><td><em>12px</em></td><td>-</td></tr><tr><td>–van-field-text-area-min-height</td><td><em>60px</em></td><td>-</td></tr><tr><td>–van-field-word-limit-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-field-word-limit-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-field-word-limit-line-height</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-field-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-field-required-mark-color</td><td><em>var(–van-red)</em></td><td>-</td></tr></tbody></table></div>',22)],bc={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",mc,vc)))},fc={class:"van-doc-markdown-body"},yc=[t('<h1>Form</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used for data entry and verification, and supports input boxes, radio buttons, check boxes, file uploads and other types. Should be used with <a href="#/en-US/field">Field</a> component.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Form</span>, <span class="hljs-title class_">Field</span>, <span class="hljs-title class_">CellGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Form</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Field</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">CellGroup</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-form</span> @<span class="hljs-attr">submit</span>=<span class="hljs-string">&quot;onSubmit&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;username&quot;</span>\n      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Username&quot;</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Username&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Username&quot;</span>\n      <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;[{ required: true, message: &#39;Username is required&#39; }]&quot;</span>\n    /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;password&quot;</span>\n      <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span>\n      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Password&quot;</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Password&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Password&quot;</span>\n      <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;[{ required: true, message: &#39;Password is required&#39; }]&quot;</span>\n    /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin: 16px;&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">round</span> <span class="hljs-attr">block</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">native-type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>\n      Submit\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-form</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> username = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> password = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSubmit</span> = (<span class="hljs-params">values</span>) =&gt; {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;submit&#39;</span>, values);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      username,\n      password,\n      onSubmit,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="validate-rules" tabindex="-1">Validate Rules</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-form</span> @<span class="hljs-attr">failed</span>=<span class="hljs-string">&quot;onFailed&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span> <span class="hljs-attr">inset</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value1&quot;</span>\n      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pattern&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Use pattern&quot;</span>\n      <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;[{ pattern, message: &#39;Error message&#39; }]&quot;</span>\n    /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span>\n      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;validator&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Use validator&quot;</span>\n      <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;[{ validator, message: &#39;Error message&#39; }]&quot;</span>\n    /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value3&quot;</span>\n      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;validatorMessage&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Use validator to return message&quot;</span>\n      <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;[{ validator: validatorMessage }]&quot;</span>\n    /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value4&quot;</span>\n      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;asyncValidator&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Use async validator&quot;</span>\n      <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;[{ validator: asyncValidator, message: &#39;Error message&#39; }]&quot;</span>\n    /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin: 16px;&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">round</span> <span class="hljs-attr">block</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">native-type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>\n      Submit\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-form</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value1 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> value2 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> value3 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> value4 = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> pattern = <span class="hljs-regexp">/\\d{6}/</span>;\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">validator</span> = (<span class="hljs-params">val</span>) =&gt; <span class="hljs-regexp">/1\\d{10}/</span>.<span class="hljs-title function_">test</span>(val);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">validatorMessage</span> = (<span class="hljs-params">val</span>) =&gt; <span class="hljs-string">`<span class="hljs-subst">${val}</span> is invalid`</span>;\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">asyncValidator</span> = (<span class="hljs-params">val</span>) =&gt;\n      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n        <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">loading</span>(<span class="hljs-string">&#39;Validating...&#39;</span>);\n\n        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">clear</span>();\n          <span class="hljs-title function_">resolve</span>(<span class="hljs-regexp">/\\d{6}/</span>.<span class="hljs-title function_">test</span>(val));\n        }, <span class="hljs-number">1000</span>);\n      });\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onFailed</span> = (<span class="hljs-params">errorInfo</span>) =&gt; {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;failed&#39;</span>, errorInfo);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      value1,\n      value2,\n      value3,\n      value4,\n      pattern,\n      onFailed,\n      validator,\n      asyncValidator,\n      validatorMessage,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="field-type---switch" tabindex="-1">Field Type - Switch</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;switch&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Switch&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;20&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">return</span> { checked };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="field-type---checkbox" tabindex="-1">Field Type - Checkbox</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Checkbox&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;checkboxGroup&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;CheckboxGroup&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;groupChecked&quot;</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;horizontal&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span>&gt;</span>Checkbox 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span>&gt;</span>Checkbox 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> groupChecked = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">return</span> {\n      checked,\n      groupChecked,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="field-type---radio" tabindex="-1">Field Type - Radio</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Radio&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;horizontal&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>Radio 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>Radio 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;1&#39;</span>);\n    <span class="hljs-keyword">return</span> { checked };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="field-type---stepper" tabindex="-1">Field Type - Stepper</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;stepper&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Stepper&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="field-type---rate" tabindex="-1">Field Type - Rate</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;rate&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Rate&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">3</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="field-type---slider" tabindex="-1">Field Type - Slider</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;slider&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Slider&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">50</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="field-type---uploader" tabindex="-1">Field Type - Uploader</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;uploader&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Uploader&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-field</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>([{ <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/leaf.jpg&#39;</span> }]);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="field-type---picker" tabindex="-1">Field Type - Picker</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;result&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;picker&quot;</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Picker&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Select city&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showPicker = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPicker&quot;</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span>\n    <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span>\n    @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span>\n    @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;showPicker = false&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> result = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> showPicker = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> columns = [<span class="hljs-string">&#39;Delaware&#39;</span>, <span class="hljs-string">&#39;Florida&#39;</span>, <span class="hljs-string">&#39;Georqia&#39;</span>, <span class="hljs-string">&#39;Indiana&#39;</span>, <span class="hljs-string">&#39;Maine&#39;</span>];\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">value</span>) =&gt; {\n      result.<span class="hljs-property">value</span> = value;\n      showPicker.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      result,\n      columns,\n      onConfirm,\n      showPicker,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="field-type---datetimepicker" tabindex="-1">Field Type - DatetimePicker</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;result&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;datetimePicker&quot;</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Datetime Picker&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Select time&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showPicker = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPicker&quot;</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-datetime-picker</span>\n    <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;time&quot;</span>\n    @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span>\n    @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;showPicker = false&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> result = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> showPicker = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">value</span>) =&gt; {\n      result.<span class="hljs-property">value</span> = value;\n      showPicker.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      result,\n      onConfirm,\n      showPicker,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="field-type---area" tabindex="-1">Field Type - Area</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;result&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;area&quot;</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Area Picker&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Select area&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showArea = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showArea&quot;</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-area</span>\n    <span class="hljs-attr">:area-list</span>=<span class="hljs-string">&quot;areaList&quot;</span>\n    @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span>\n    @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;showArea = false&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { areaList } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/area-data&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> result = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> showArea = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">value</span>) =&gt; {\n      showArea.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      result.<span class="hljs-property">value</span> = values\n        .<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> !!item)\n        .<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> item.<span class="hljs-property">name</span>)\n        .<span class="hljs-title function_">join</span>(<span class="hljs-string">&#39;/&#39;</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      result,\n      areaList,\n      showArea,\n      onConfirm,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="field-type---calendar" tabindex="-1">Field Type - Calendar</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;result&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;calendar&quot;</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Calendar&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Select date&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showCalendar = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-calendar</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showCalendar&quot;</span> @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> result = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> showCalendar = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">date</span>) =&gt; {\n      result.<span class="hljs-property">value</span> = <span class="hljs-string">`<span class="hljs-subst">${date.getMonth() + <span class="hljs-number">1</span>}</span>/<span class="hljs-subst">${date.getDate()}</span>`</span>;\n      showCalendar.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      result,\n      onConfirm,\n      showCalendar,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>label-width</td><td>Field label width</td><td><em>number | string</em></td><td><code>6.2em</code></td></tr><tr><td>label-align</td><td>\bField label align, can be set to <code>center</code> <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>input-align</td><td>Field input align, can be set to <code>center</code> <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>error-message-align</td><td>Error message align, can be set to <code>center</code> <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>validate-trigger</td><td>When to validate the form，can be set to <code>onChange</code>、<code>onSubmit</code></td><td><em>string</em></td><td><code>onBlur</code></td></tr><tr><td>colon</td><td>Whether to display colon after label</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disabled</td><td>Whether to disable form</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly</td><td>Whether to be readonly</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>validate-first</td><td>Whether to stop the validation when a rule fails</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>scroll-to-error</td><td>Whether to scroll to the error field when validation failed</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-error</td><td>Whether to highlight input when validation failed</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-error-message</td><td>Whether to show error message when validation failed</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>submit-on-enter</td><td>Whether to submit form on enter</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="data-structure-of-rule" tabindex="-1">Data Structure of Rule</h3><table><thead><tr><th>Key</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>required</td><td>Whether to be a required field</td><td><em>boolean</em></td></tr><tr><td>message</td><td>Error message</td><td><em>string | (value, rule) =&gt; string</em></td></tr><tr><td>validator</td><td>Custom validator</td><td><em>(value, rule) =&gt; boolean | string | Promise</em></td></tr><tr><td>pattern</td><td>Regex pattern</td><td><em>RegExp</em></td></tr><tr><td>trigger</td><td>When to validate the form，can be set to <code>onChange</code>、<code>onBlur</code></td><td><em>string</em></td></tr><tr><td>formatter</td><td>Format value before validate</td><td><em>(value, rule) =&gt; any</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="validate-trigger" tabindex="-1">validate-trigger</h3><table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>onSubmit</td><td>Trigger validation after submitting form</td></tr><tr><td>onBlur</td><td>Trigger validation after submitting form or blurring input</td></tr><tr><td>onChange</td><td>Trigger validation after submitting form or changing input value</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>submit</td><td>Emitted after submitting the form and validation passed</td><td><em>values: object</em></td></tr><tr><td>failed</td><td>Emitted after submitting the form and validation failed</td><td><em>errorInfo: { values: object, errors: object[] }</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get Form instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>submit</td><td>Submit form</td><td>-</td><td>-</td></tr><tr><td>validate</td><td>Validate form</td><td><em>name?: string | string[]</em></td><td><em>Promise</em></td></tr><tr><td>resetValidation</td><td>Reset validation</td><td><em>name?: string | string[]</em></td><td>-</td></tr><tr><td>scrollToField</td><td>Scroll to field</td><td><em>name: string, alignToTop: boolean</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">FormInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>FormInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">FormInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> formRef = ref&lt;<span class="hljs-title class_">FormInstance</span>&gt;();\n\nformRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">submit</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Form content</td></tr></tbody></table></div>',25)],wc={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",fc,yc)))},qc={class:"van-doc-markdown-body"},xc=[t('<h1>Grid</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to divide the page into blocks of equal width in the horizontal direction for displaying content or page navigation.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Grid</span>, <span class="hljs-title class_">GridItem</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Grid</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">GridItem</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="column-num" tabindex="-1">Column Num</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">:column-num</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;value in 6&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-content" tabindex="-1">Custom Content</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">:border</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">:column-num</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/apple-1.jpg&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-grid-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/apple-2.jpg&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-grid-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/apple-3.jpg&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-grid-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="square" tabindex="-1">Square</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">square</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;value in 8&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="gutter" tabindex="-1">Gutter</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">:gutter</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;value in 8&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="horizontal" tabindex="-1">Horizontal</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;horizontal&quot;</span> <span class="hljs-attr">:column-num</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;文字&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;文字&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;文字&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="route" tabindex="-1">Route</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">clickable</span> <span class="hljs-attr">:column-num</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Vue Router&quot;</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;URL&quot;</span> <span class="hljs-attr">url</span>=<span class="hljs-string">&quot;/vant/mobile.html&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="show-badge" tabindex="-1">Show Badge</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span> <span class="hljs-attr">:column-num</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Text&quot;</span> <span class="hljs-attr">dot</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Text&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;99+&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="grid-props" tabindex="-1">Grid Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>column-num</td><td>Column Num</td><td><em>number | string</em></td><td><code>4</code></td></tr><tr><td>icon-size</td><td>Icon size</td><td><em>number | string</em></td><td><code>28px</code></td></tr><tr><td>gutter</td><td>Gutter</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>border</td><td>Whether to show border</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>center</td><td>Whether to center content</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>square</td><td>Whether to be square shape</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>clickable</td><td>Whether to show click feedback when clicked</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>direction</td><td>Content arrangement direction, can be set to <code>horizontal</code></td><td><em>string</em></td><td><code>vertical</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="griditem-props" tabindex="-1">GridItem Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>text</td><td>Text</td><td><em>string</em></td><td>-</td></tr><tr><td>icon</td><td>Icon name or URL</td><td><em>string</em></td><td>-</td></tr><tr><td>icon-prefix</td><td>Icon className prefix</td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>icon-color</td><td>Icon color</td><td><em>string</em></td><td>-</td></tr><tr><td>reverse <code>v3.1.0</code></td><td>Whether to reverse the position of icon and text</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>dot</td><td>Whether to show red dot</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>badge</td><td>Content of the badge</td><td><em>number | string</em></td><td>-</td></tr><tr><td>url</td><td>Link URL</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>Target route of the link, same as to of vue-router</td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>If true, the navigation will not leave a history record</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="griditem-events" tabindex="-1">GridItem Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when component is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="griditem-slots" tabindex="-1">GridItem Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Custom content</td></tr><tr><td>icon</td><td>Custom icon</td></tr><tr><td>text</td><td>Custom text</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">GridDirection</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-grid-item-content-padding</td><td><em>var(–van-padding-md) var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-grid-item-content-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-grid-item-content-active-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-grid-item-icon-size</td><td><em>28px</em></td><td>-</td></tr><tr><td>–van-grid-item-text-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-grid-item-text-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr></tbody></table></div>',20)],kc={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",qc,xc)))},zc={class:"van-doc-markdown-body"},_c=[t('<h1>Icon</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>The font-based icon set that can be used via the Icon component or referenced in other components via the <code>icon</code> attribute.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Icon</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Icon</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><p>Use <code>name</code> prop to set icon name or icon URL.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chat-o&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="using-url" tabindex="-1">Using URL</h3><p>You can directly passing an image URL to the <code>name</code> props.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;https://b.yzcdn.cn/vant/icon-demo-1126.png&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="show-badge" tabindex="-1">Show Badge</h3><p>Use <code>dot</code> prop, a small red dot will be displayed in the upper right corner of the icon.</p><p>Use <code>badge</code> prop, the badge will be displayed in the upper right corner of the icon.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">dot</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;9&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;99+&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="icon-color" tabindex="-1">Icon Color</h3><p>Use <code>color</code> prop to set icon color.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;cart-o&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;fire-o&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="icon-size" tabindex="-1">Icon Size</h3><p>Use <code>size</code> prop to set icon size.</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- Using px unit by default --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;40&quot;</span> /&gt;</span>\n<span class="hljs-comment">&lt;!-- Using rem unit --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;chat-o&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;3rem&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="add-custom-iconfont" tabindex="-1">Add custom iconfont</h3><pre><code class="language-css"><span class="hljs-keyword">@font-face</span> {\n  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#39;my-icon&#39;</span>;\n  <span class="hljs-attribute">src</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#39;./my-icon.ttf&#39;</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">&#39;truetype&#39;</span>);\n}\n\n<span class="hljs-selector-class">.my-icon</span> {\n  <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#39;my-icon&#39;</span>;\n}\n\n<span class="hljs-selector-class">.my-icon-extra</span><span class="hljs-selector-pseudo">::before</span> {\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#39;\\e626&#39;</span>;\n}\n</code></pre><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">class-prefix</span>=<span class="hljs-string">&quot;my-icon&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;extra&quot;</span> /&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>name</td><td>Icon name or URL</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>dot</td><td>Whether to show red dot</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>badge</td><td>Content of the badge</td><td><em>number | string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>color</td><td>Icon color</td><td><em>string</em></td><td><code>inherit</code></td></tr><tr><td>size</td><td>Icon size</td><td><em>number | string</em></td><td><code>inherit</code></td></tr><tr><td>class-prefix</td><td>ClassName prefix</td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>tag</td><td>HTML Tag of root element</td><td><em>string</em></td><td><code>i</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when icon is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div>',13)],Cc={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",zc,_c)))},Sc={class:"van-doc-markdown-body"},Tc=[t('<h1>Image</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Enhanced img tag with multiple image fill modes, support for image lazy loading, loading hint, loading failure hint.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Image</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanImage</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">VanImage</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/cat.jpeg&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="fit-mode" tabindex="-1">Fit Mode</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span>\n  <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;10rem&quot;</span>\n  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;10rem&quot;</span>\n  <span class="hljs-attr">fit</span>=<span class="hljs-string">&quot;contain&quot;</span>\n  <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/cat.jpeg&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="round" tabindex="-1">Round</h3><p>Show round image, it may not works at <code>fit=contain</code> and <code>fit=scale-down</code>.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span>\n  <span class="hljs-attr">round</span>\n  <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;10rem&quot;</span>\n  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;10rem&quot;</span>\n  <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/cat.jpeg&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="lazy-load" tabindex="-1">Lazy Load</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span>\n  <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100&quot;</span>\n  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100&quot;</span>\n  <span class="hljs-attr">lazy-load</span>\n  <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/cat.jpeg&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Lazyload</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Lazyload</span>);\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>src</td><td>Src</td><td><em>string</em></td><td>-</td></tr><tr><td>fit</td><td>Fit mode</td><td><em>string</em></td><td><code>fill</code></td></tr><tr><td>alt</td><td>Alt</td><td><em>string</em></td><td>-</td></tr><tr><td>width</td><td>Width</td><td><em>number | string</em></td><td>-</td></tr><tr><td>height</td><td>Height</td><td><em>number | string</em></td><td>-</td></tr><tr><td>radius</td><td>Border Radius</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>round</td><td>Whether to be round</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>lazy-load</td><td>Whether to enable lazy load，should register <a href="#/en-US/lazyload">Lazyload</a> component</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-error</td><td>Whether to show error placeholder</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-loading</td><td>Whether to show loading placeholder</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>error-icon</td><td>Error icon</td><td><em>string</em></td><td><code>photo-fail</code></td></tr><tr><td>loading-icon</td><td>Loading icon</td><td><em>string</em></td><td><code>photo</code></td></tr><tr><td>icon-size <code>v3.0.11</code></td><td>Icon size</td><td><em>number | string</em></td><td><code>32px</code></td></tr><tr><td>icon-prefix</td><td>Icon className prefix</td><td><em>string</em></td><td><code>van-icon</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="fit-optional-value" tabindex="-1">fit optional value</h3><table><thead><tr><th>name</th><th>description</th></tr></thead><tbody><tr><td>contain</td><td>Keep aspect ratio, fully display the long side of the image</td></tr><tr><td>cover</td><td>Keep aspect ratio, fully display the short side of the image, cutting the long side</td></tr><tr><td>fill</td><td>Stretch and resize image to fill the content box</td></tr><tr><td>none</td><td>Not resize image</td></tr><tr><td>scale-down</td><td>Take the smaller of <code>none</code> or <code>contain</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when image is clicked</td><td><em>event: MouseEvent</em></td></tr><tr><td>load</td><td>Emitted when image loaded</td><td>-</td></tr><tr><td>error</td><td>Emitted when image load failed</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Custom the content below the image</td></tr><tr><td>loading</td><td>Custom loading placeholder</td></tr><tr><td>error</td><td>Custom error placeholder</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ImageFit</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-image-placeholder-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-image-placeholder-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-image-placeholder-background-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-image-loading-icon-size</td><td><em>32px</em></td><td>-</td></tr><tr><td>–van-image-loading-icon-color</td><td><em>var(–van-gray-4)</em></td><td>-</td></tr><tr><td>–van-image-error-icon-size</td><td><em>32px</em></td><td>-</td></tr><tr><td>–van-image-error-icon-color</td><td><em>var(–van-gray-4)</em></td><td>-</td></tr></tbody></table></div>',16)],Ic={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Sc,Tc)))},Pc={class:"van-doc-markdown-body"},Dc=[t('<h1>ImagePreview</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to zoom in and preview the picture, and it supports two methods: function call and component call.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ImagePreview</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ImagePreview</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-js"><span class="hljs-title class_">ImagePreview</span>([\n  <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n  <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n]);\n</code></pre></div><div class="van-doc-card"><h3 id="set-start-position" tabindex="-1">Set Start Position</h3><pre><code class="language-js"><span class="hljs-title class_">ImagePreview</span>({\n  <span class="hljs-attr">images</span>: [\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n  ],\n  <span class="hljs-attr">startPosition</span>: <span class="hljs-number">1</span>,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="show-close-icon" tabindex="-1">Show Close Icon</h3><p>After setting the <code>closeable</code> attribute, the close icon will be displayed in the upper right corner of the pop-up layer, and the icon can be customized through the <code>close-icon</code> attribute, and the icon location can be customized by using the <code>close-icon-position</code> attribute.</p><pre><code class="language-js"><span class="hljs-title class_">ImagePreview</span>({\n  <span class="hljs-attr">images</span>: [\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n  ],\n  <span class="hljs-attr">closeable</span>: <span class="hljs-literal">true</span>,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="close-event" tabindex="-1">Close Event</h3><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-title class_">ImagePreview</span>({\n  <span class="hljs-attr">images</span>: [\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n  ],\n  <span class="hljs-title function_">onClose</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;closed&#39;</span>);\n  },\n});\n</code></pre></div><div class="van-doc-card"><h3 id="before-close" tabindex="-1">Before Close</h3><pre><code class="language-js"><span class="hljs-keyword">const</span> instance = <span class="hljs-title class_">ImagePreview</span>({\n  <span class="hljs-attr">images</span>: [\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n    <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n  ],\n  <span class="hljs-attr">beforeClose</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-literal">false</span>,\n});\n\n<span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n  instance.<span class="hljs-title function_">close</span>();\n}, <span class="hljs-number">2000</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="component-call" tabindex="-1">Component Call</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image-preview</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">:images</span>=<span class="hljs-string">&quot;images&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:index</span>&gt;</span>Page: {{ index }}<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-image-preview</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> index = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> images = [\n      <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n      <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n    ];\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">newIndex</span>) =&gt; {\n      index.<span class="hljs-property">value</span> = newIndex;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      index,\n      images,\n      onChange,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="options" tabindex="-1">Options</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>images</td><td>Images URL list</td><td><em>string[]</em></td><td><code>[]</code></td></tr><tr><td>startPosition</td><td>Start position</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>showIndex</td><td>Whether to show index</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>showIndicators</td><td>Whether to show indicators</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loop</td><td>Whether to enable loop</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>swipeDuration</td><td>Animation duration (ms)</td><td><em>number | string</em></td><td><code>300</code></td></tr><tr><td>onClose</td><td>Emitted when ImagePreview is closed</td><td><em>Function</em></td><td>-</td></tr><tr><td>onChange</td><td>Emitted when current image changed</td><td><em>Function</em></td><td>-</td></tr><tr><td>onScale</td><td>Emitted when scaling current image</td><td><em>Function</em></td><td>-</td></tr><tr><td>closeOnPopstate</td><td>Whether to close when popstate</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>beforeClose</td><td>Callback function before close</td><td><em>(action) =&gt; boolean | Promise</em></td><td>-</td></tr><tr><td>className</td><td>Custom className</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>maxZoom</td><td>Max zoom</td><td><em>number | string</em></td><td><code>3</code></td></tr><tr><td>minZoom</td><td>Min zoom</td><td><em>number | string</em></td><td><code>1/3</code></td></tr><tr><td>closeable</td><td>Whether to show close icon</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>closeIcon</td><td>Close icon name</td><td><em>string</em></td><td><code>clear</code></td></tr><tr><td>closeIconPosition</td><td>Close icon position，can be set to <code>top-left</code> <code>bottom-left</code> <code>bottom-right</code></td><td><em>string</em></td><td><code>top-right</code></td></tr><tr><td>transition <code>v3.0.8</code></td><td>Transition, equivalent to <code>name</code> prop of <a href="https://v3.vuejs.org/api/built-in-components.html#transition">transition</a></td><td><em>string</em></td><td><code>van-fade</code></td></tr><tr><td>overlay-style <code>v3.0.8</code></td><td>Custom overlay style</td><td><em>object</em></td><td>-</td></tr><tr><td>teleport</td><td>Specifies a target element where ImagePreview will be mounted</td><td><em>string | Element</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model:show</td><td>Whether to show ImagePreview</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>images</td><td>Images URL list</td><td><em>string[]</em></td><td><code>[]</code></td></tr><tr><td>start-position</td><td>Start position</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>swipe-duration</td><td>Animation duration (ms)</td><td><em>number | string</em></td><td><code>300</code></td></tr><tr><td>show-index</td><td>Whether to show index</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-indicators</td><td>Whether to show indicators</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loop</td><td>Whether to enable loop</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>before-close</td><td>Callback function before close</td><td><em>(action: number) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr><tr><td>close-on-popstate</td><td>Whether to close when popstate</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>class-name</td><td>Custom className</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>max-zoom</td><td>Max zoom</td><td><em>number | string</em></td><td><code>3</code></td></tr><tr><td>min-zoom</td><td>Min zoom</td><td><em>number | string</em></td><td><code>1/3</code></td></tr><tr><td>closeable</td><td>Whether to show close icon</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>close-icon</td><td>Close icon name</td><td><em>string</em></td><td><code>clear</code></td></tr><tr><td>close-icon-position</td><td>Close icon position，can be set to <code>top-left</code> <code>bottom-left</code> <code>bottom-right</code></td><td><em>string</em></td><td><code>top-right</code></td></tr><tr><td>transition <code>v3.0.8</code></td><td>Transition, equivalent to <code>name</code> prop of <a href="https://v3.vuejs.org/api/built-in-components.html#transition">transition</a></td><td><em>string</em></td><td><code>van-fade</code></td></tr><tr><td>overlay-style <code>v3.0.8</code></td><td>Custom overlay style</td><td><em>object</em></td><td>-</td></tr><tr><td>teleport</td><td>Specifies a target element where ImagePreview will be mounted</td><td><em>string | Element</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>close</td><td>Emitted when closing ImagePreview</td><td>{ index, url }</td></tr><tr><td>closed</td><td>Emitted when ImagePreview is closed</td><td>-</td></tr><tr><td>change</td><td>Emitted when current image changed</td><td>index: index of current image</td></tr><tr><td>scale</td><td>Emitted when scaling current image</td><td>{ index: index of current image, scale: scale of current image}</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><p>Use <a href="https://vuejs.org/v2/api/#ref">ref</a> to get ImagePreview instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>swipeTo <code>2.9.0</code></td><td>Swipe to target index</td><td><em>index: number, options?: SwipeToOptions</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">ImagePreviewOptions</span>,\n  <span class="hljs-title class_">ImagePreviewInstance</span>,\n  <span class="hljs-title class_">ImagePreviewScaleEventParams</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>ImagePreviewInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ImagePreviewInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> imagePreviewRef = ref&lt;<span class="hljs-title class_">ImagePreviewInstance</span>&gt;();\n\nimagePreviewRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">swipeTo</span>(<span class="hljs-number">1</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>index</td><td>Custom index</td><td>{ index: index of current image }</td></tr><tr><td>cover</td><td>Custom content that covers the image preview</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="onclose-parameters" tabindex="-1">onClose Parameters</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>url</td><td>Url of current image</td><td><em>number</em></td></tr><tr><td>index</td><td>Index of current image</td><td><em>number</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="onscale-parameters" tabindex="-1">onScale Parameters</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>index</td><td>Index of current image</td><td><em>number</em></td></tr><tr><td>scale</td><td>scale of current image</td><td><em>number</em></td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-image-preview-index-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-image-preview-index-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-image-preview-index-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-image-preview-index-text-shadow</td><td><em>0 1px 1px var(–van-gray-8)</em></td><td>-</td></tr><tr><td>–van-image-preview-overlay-background-color</td><td><em>rgba(0, 0, 0, 0.9)</em></td><td>-</td></tr><tr><td>–van-image-preview-close-icon-size</td><td><em>22px</em></td><td>-</td></tr><tr><td>–van-image-preview-close-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-image-preview-close-icon-active-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-image-preview-close-icon-margin</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-image-preview-close-icon-z-index</td><td><em>1</em></td><td>-</td></tr></tbody></table></div>',21)],Ac={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Pc,Dc)))},Nc={class:"van-doc-markdown-body"},Ec=[t('<h1>IndexBar</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used for indexed sorting display and quick positioning of lists.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">IndexBar</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">IndexBar</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">IndexAnchor</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-index-bar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-index-anchor</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;A&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-index-anchor</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;B&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n\n  ...\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-index-bar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-index-list" tabindex="-1">Custom Index List</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-index-bar</span> <span class="hljs-attr">:index-list</span>=<span class="hljs-string">&quot;indexList&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-index-anchor</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>Title 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-index-anchor</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-index-anchor</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>Title 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-index-anchor</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Text&quot;</span> /&gt;</span>\n\n  ...\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-index-bar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">indexList</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>],\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="indexbar-props" tabindex="-1">IndexBar Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>index-list</td><td>Index List</td><td><em>string[] | number[]</em></td><td><code>A-Z</code></td></tr><tr><td>z-index</td><td>z-index</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>sticky</td><td>Whether to enable anchor sticky top</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>sticky-offset-top</td><td>Anchor offset top when sticky</td><td><em>number</em></td><td><code>0</code></td></tr><tr><td>highlight-color</td><td>Index character highlight color</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>teleport <code>v3.0.19</code></td><td>Specifies a target element where IndexBar will be mounted</td><td><em>string | Element</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="indexanchor-props" tabindex="-1">IndexAnchor Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>index</td><td>Index</td><td><em>number | string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="indexbar-events" tabindex="-1">IndexBar Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>select</td><td>Emitted when an index is selected</td><td><em>index: number | string</em></td></tr><tr><td>change</td><td>Emitted when active index changed</td><td><em>index: number | string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="indexbar-methods" tabindex="-1">IndexBar Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get IndexBar instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>scrollTo</td><td>scroll to target element</td><td><em>index: number | string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">IndexBarInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>IndexBarInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">IndexBarInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> indexBarRef = ref&lt;<span class="hljs-title class_">IndexBarInstance</span>&gt;();\n\nindexBarRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">scrollTo</span>(<span class="hljs-string">&#39;B&#39;</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="indexanchor-slots" tabindex="-1">IndexAnchor Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Anchor content, show index by default</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-index-bar-sidebar-z-index</td><td><em>2</em></td><td>-</td></tr><tr><td>–van-index-bar-index-font-size</td><td><em>var(–van-font-size-xs)</em></td><td>-</td></tr><tr><td>–van-index-bar-index-line-height</td><td><em>var(–van-line-height-xs)</em></td><td>-</td></tr><tr><td>–van-index-bar-index-active-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-index-anchor-z-index</td><td><em>1</em></td><td>-</td></tr><tr><td>–van-index-anchor-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-index-anchor-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-index-anchor-font-weight</td><td><em>var(–van-font-weight-bold)</em></td><td>-</td></tr><tr><td>–van-index-anchor-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-index-anchor-line-height</td><td><em>32px</em></td><td>-</td></tr><tr><td>–van-index-anchor-background-color</td><td><em>transparent</em></td><td>-</td></tr><tr><td>–van-index-anchor-sticky-text-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-index-anchor-sticky-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr></tbody></table></div>',15)],Rc={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Nc,Ec)))},Uc={class:"van-doc-markdown-body"},Bc=[t('<h1>Lazyload</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>When the page needs to load a large amount of content, delay loading the content outside the visible area of the page to make the page load smoother.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Lazyload</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Lazyload</span>);\n\n<span class="hljs-comment">// with options</span>\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Lazyload</span>, {\n  <span class="hljs-attr">lazyComponent</span>: <span class="hljs-literal">true</span>,\n});\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;img in imageList&quot;</span> <span class="hljs-attr">v-lazy</span>=<span class="hljs-string">&quot;img&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">imageList</span>: [\n        <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n        <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n      ],\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="lazyload-background-image" tabindex="-1">Lazyload Background Image</h3><p>Use <code>v-lazy:background-image</code> to set background url, and declare the height of the container.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;img in imageList&quot;</span> <span class="hljs-attr">v-lazy:background-image</span>=<span class="hljs-string">&quot;img&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="lazyload-component" tabindex="-1">Lazyload Component</h3><pre><code class="language-js"><span class="hljs-comment">// set `lazyComponent` option</span>\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Lazyload</span>, {\n  <span class="hljs-attr">lazyComponent</span>: <span class="hljs-literal">true</span>,\n});\n</code></pre><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">lazy-component</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;img in imageList&quot;</span> <span class="hljs-attr">v-lazy</span>=<span class="hljs-string">&quot;img&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">lazy-component</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="options" tabindex="-1">Options</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>loading</td><td>Src of the image while loading</td><td><em>string</em></td><td>-</td></tr><tr><td>error</td><td>Src of the image upon load fail</td><td><em>string</em></td><td>-</td></tr><tr><td>preload</td><td>Proportion of pre-loading height</td><td><em>string</em></td><td>-</td></tr><tr><td>attempt</td><td>Attempts count</td><td><em>number</em></td><td><code>3</code></td></tr><tr><td>listenEvents</td><td>Events that you want vue listen for</td><td><em>string[]</em></td><td><code>scroll</code>…</td></tr><tr><td>adapter</td><td>Dynamically modify the attribute of element</td><td><em>object</em></td><td>-</td></tr><tr><td>filter</td><td>The image’s listener filter</td><td><em>object</em></td><td>-</td></tr><tr><td>lazyComponent</td><td>Lazyload component</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table><blockquote><p>See more：<a href="https://github.com/hilongjw/vue-lazyload"> vue-lazyload </a></p></blockquote></div>',9)],Vc={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Uc,Bc)))},Lc={class:"van-doc-markdown-body"},Fc=[t('<h1>List</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>A list component to show items and control loading status.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">List</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">List</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-list</span>\n  <span class="hljs-attr">v-model:loading</span>=<span class="hljs-string">&quot;loading&quot;</span>\n  <span class="hljs-attr">:finished</span>=<span class="hljs-string">&quot;finished&quot;</span>\n  <span class="hljs-attr">finished-text</span>=<span class="hljs-string">&quot;Finished&quot;</span>\n  @<span class="hljs-attr">load</span>=<span class="hljs-string">&quot;onLoad&quot;</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in list&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;item&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-list</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> list = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> finished = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onLoad</span> = (<span class="hljs-params"></span>) =&gt; {\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) {\n          list.<span class="hljs-property">value</span>.<span class="hljs-title function_">push</span>(list.<span class="hljs-property">value</span>.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);\n        }\n        loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n\n        <span class="hljs-keyword">if</span> (list.<span class="hljs-property">value</span>.<span class="hljs-property">length</span> &gt;= <span class="hljs-number">40</span>) {\n          finished.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;\n        }\n      }, <span class="hljs-number">1000</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      list,\n      onLoad,\n      loading,\n      finished,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="error-info" tabindex="-1">Error Info</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-list</span>\n  <span class="hljs-attr">v-model:loading</span>=<span class="hljs-string">&quot;loading&quot;</span>\n  <span class="hljs-attr">v-model:error</span>=<span class="hljs-string">&quot;error&quot;</span>\n  <span class="hljs-attr">error-text</span>=<span class="hljs-string">&quot;Request failed. Click to reload&quot;</span>\n  @<span class="hljs-attr">load</span>=<span class="hljs-string">&quot;onLoad&quot;</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in list&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;item&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-list</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> list = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">const</span> error = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onLoad</span> = (<span class="hljs-params"></span>) =&gt; {\n      <span class="hljs-title function_">fetchSomeThing</span>().<span class="hljs-title function_">catch</span>(<span class="hljs-function">() =&gt;</span> {\n        error.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;\n      });\n    };\n\n    <span class="hljs-keyword">return</span> {\n      list,\n      error,\n      onLoad,\n      loading,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="pullrefresh" tabindex="-1">PullRefresh</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pull-refresh</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;refreshing&quot;</span> @<span class="hljs-attr">refresh</span>=<span class="hljs-string">&quot;onRefresh&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-list</span>\n    <span class="hljs-attr">v-model:loading</span>=<span class="hljs-string">&quot;loading&quot;</span>\n    <span class="hljs-attr">:finished</span>=<span class="hljs-string">&quot;finished&quot;</span>\n    <span class="hljs-attr">finished-text</span>=<span class="hljs-string">&quot;Finished&quot;</span>\n    @<span class="hljs-attr">load</span>=<span class="hljs-string">&quot;onLoad&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in list&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;item&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-list</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-pull-refresh</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> list = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> finished = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> refreshing = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onLoad</span> = (<span class="hljs-params"></span>) =&gt; {\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-keyword">if</span> (refreshing.<span class="hljs-property">value</span>) {\n          list.<span class="hljs-property">value</span> = [];\n          refreshing.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n        }\n\n        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) {\n          list.<span class="hljs-property">value</span>.<span class="hljs-title function_">push</span>(list.<span class="hljs-property">value</span>.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>);\n        }\n        loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n\n        <span class="hljs-keyword">if</span> (list.<span class="hljs-property">value</span>.<span class="hljs-property">length</span> &gt;= <span class="hljs-number">40</span>) {\n          finished.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;\n        }\n      }, <span class="hljs-number">1000</span>);\n    };\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onRefresh</span> = (<span class="hljs-params"></span>) =&gt; {\n      finished.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;\n      <span class="hljs-title function_">onLoad</span>();\n    };\n\n    <span class="hljs-keyword">return</span> {\n      list,\n      onLoad,\n      loading,\n      finished,\n      onRefresh,\n      refreshing,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model:loading</td><td>Whether to show loading info，the <code>load</code> event will not be Emitted when loading</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>v-model:error</td><td>Whether loading is error，the <code>load</code> event will be Emitted only when error text clicked</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>finished</td><td>Whether loading is finished，the <code>load</code> event will not be Emitted when finished</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>offset</td><td>The load event will be Emitted when the distance between the scrollbar and the bottom is less than offset</td><td><em>number | string</em></td><td><code>300</code></td></tr><tr><td>loading-text</td><td>Loading text</td><td><em>string</em></td><td><code>Loading...</code></td></tr><tr><td>finished-text</td><td>Finished text</td><td><em>string</em></td><td>-</td></tr><tr><td>error-text</td><td>Error loaded text</td><td><em>string</em></td><td>-</td></tr><tr><td>immediate-check</td><td>Whether to check loading position immediately after mounted</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>direction</td><td>Scroll direction，can be set to <code>up</code></td><td><em>string</em></td><td><code>down</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>load</td><td>Emitted when the distance between the scrollbar and the bottom is less than offset</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get List instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>check</td><td>Check scroll position</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ListInstance</span>, <span class="hljs-title class_">ListDirection</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>ListInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ListInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> listRef = ref&lt;<span class="hljs-title class_">ListInstance</span>&gt;();\n\nlistRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">check</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>List content</td></tr><tr><td>loading</td><td>Custom loading tips</td></tr><tr><td>finished</td><td>Custom finished tips</td></tr><tr><td>error</td><td>Custom error tips</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-list-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-list-text-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-list-text-line-height</td><td><em>50px</em></td><td>-</td></tr><tr><td>–van-list-loading-icon-size</td><td><em>16px</em></td><td>-</td></tr></tbody></table></div>',15)],Wc={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Lc,Fc)))},Mc={class:"van-doc-markdown-body"},Oc=[t('<h1>Loading</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to indicate the transition state during loading.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Loading</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Loading</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="type" tabindex="-1">Type</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> /&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;spinner&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="color" tabindex="-1">Color</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span> /&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;spinner&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="size" tabindex="-1">Size</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24&quot;</span> /&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;spinner&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24px&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="text" tabindex="-1">Text</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24px&quot;</span>&gt;</span>Loading...<span class="hljs-tag">&lt;/<span class="hljs-name">van-loading</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="vertical" tabindex="-1">Vertical</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24px&quot;</span> <span class="hljs-attr">vertical</span>&gt;</span>Loading...<span class="hljs-tag">&lt;/<span class="hljs-name">van-loading</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="text-color" tabindex="-1">Text Color</h3><p>use <code>color</code> or <code>text-color</code> to change text color.</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- the color of text and icon will be changed --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#0094ff&quot;</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- only change text color --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">text-color</span>=<span class="hljs-string">&quot;#0094ff&quot;</span> /&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>color</td><td>Loading color</td><td><em>string</em></td><td><code>#c9c9c9</code></td></tr><tr><td>type</td><td>Can be set to <code>spinner</code></td><td><em>string</em></td><td><code>circular</code></td></tr><tr><td>size</td><td>Icon size</td><td><em>number | string</em></td><td><code>30px</code></td></tr><tr><td>text-size</td><td>Text font size</td><td><em>number | string</em></td><td><code>14px</code></td></tr><tr><td>text-color</td><td>Text color</td><td><em>string</em></td><td><code>#c9c9c9</code></td></tr><tr><td>vertical</td><td>Whether to arrange icons and text content vertically</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Loading text</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">LoadingType</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-loading-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-loading-text-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-loading-spinner-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-loading-spinner-size</td><td><em>30px</em></td><td>-</td></tr><tr><td>–van-loading-spinner-animation-duration</td><td><em>0.8s</em></td><td>-</td></tr></tbody></table></div>',16)],Gc={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Mc,Oc)))},Hc={class:"van-doc-markdown-body"},Kc=[t('<h1>Internationalization</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Vant uses Chinese as the default language. If you want to use other languages, please follow the instructions below.</p></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="switch-languages" tabindex="-1">Switch languages</h3><p>Vant supports multiple languages with the Locale component, and the <code>Locale.use</code> method allows you to switch to different languages.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Locale</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n<span class="hljs-keyword">import</span> enUS <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant/es/locale/lang/en-US&#39;</span>;\n\n<span class="hljs-title class_">Locale</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&#39;en-US&#39;</span>, enUS);\n</code></pre></div><div class="van-doc-card"><h3 id="override-default-configs" tabindex="-1">Override default configs</h3><p>Use <code>Locale.add</code> method to modify the default configs.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Locale</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> messages = {\n  <span class="hljs-string">&#39;en-US&#39;</span>: {\n    <span class="hljs-attr">vanPicker</span>: {\n      <span class="hljs-attr">confirm</span>: <span class="hljs-string">&#39;Close&#39;</span>,\n    },\n  },\n};\n\n<span class="hljs-title class_">Locale</span>.<span class="hljs-title function_">add</span>(messages);\n</code></pre></div><div class="van-doc-card"><h3 id="config-files" tabindex="-1">Config files</h3><p>Current supported languages:</p><table><thead><tr><th>Language</th><th>Filename</th></tr></thead><tbody><tr><td>Chinese</td><td>zh-CN</td></tr><tr><td>Traditional Chinese (HK)</td><td>zh-HK</td></tr><tr><td>Traditional Chinese (TW)</td><td>zh-TW</td></tr><tr><td>German</td><td>de-DE</td></tr><tr><td>German (formal)</td><td>de-DE-formal</td></tr><tr><td>English</td><td>en-US</td></tr><tr><td>Spanish (Spain)</td><td>es-ES</td></tr><tr><td>Japanese</td><td>ja-JP</td></tr><tr><td>Norwegian</td><td>nb-NO</td></tr><tr><td>Romanian</td><td>ro-RO</td></tr><tr><td>Russian</td><td>ru-RU</td></tr><tr><td>Turkish</td><td>tr-TR</td></tr><tr><td>Thai</td><td>th-TH</td></tr><tr><td>French</td><td>fr-FR</td></tr></tbody></table><blockquote><p>View all language configs <a href="https://github.com/youzan/vant/tree/dev/packages/vant/src/locale/lang">Here</a>.</p></blockquote></div><div class="van-doc-card"><h3 id="add-new-language" tabindex="-1">Add new language</h3><p>If you can’t find the language you need, please send us a Pull Request to add the new language pack, you can refer to <a href="https://github.com/youzan/vant/pull/7245">Add German language pack</a> PR.</p></div>',7)],$c={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Hc,Kc)))},Jc={class:"van-doc-markdown-body"},Xc=[t('<h1>NavBar</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Provide navigation function for the page, often used at the top of the page.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NavBar</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">NavBar</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-nav-bar</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span>\n  <span class="hljs-attr">left-text</span>=<span class="hljs-string">&quot;Back&quot;</span>\n  <span class="hljs-attr">right-text</span>=<span class="hljs-string">&quot;Button&quot;</span>\n  <span class="hljs-attr">left-arrow</span>\n  @<span class="hljs-attr">click-left</span>=<span class="hljs-string">&quot;onClickLeft&quot;</span>\n  @<span class="hljs-attr">click-right</span>=<span class="hljs-string">&quot;onClickRight&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickLeft</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Back&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickRight</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Button&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      onClickLeft,\n      onClickRight,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="use-slot" tabindex="-1">Use Slot</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-nav-bar</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">left-text</span>=<span class="hljs-string">&quot;Back&quot;</span> <span class="hljs-attr">left-arrow</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;search&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-nav-bar</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>title</td><td>Title</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>left-text</td><td>Left Text</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>right-text</td><td>Right Text</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>left-arrow</td><td>Whether to show left arrow</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>border</td><td>Whether to show bottom border</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>fixed</td><td>Whether to fixed top</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>placeholder</td><td>Whether to generate a placeholder element when fixed</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>z-index</td><td>Z-index</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>safe-area-inset-top</td><td>Whether to enable top safe area adaptation</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>title</td><td>Custom title</td></tr><tr><td>left</td><td>Custom left side content</td></tr><tr><td>right</td><td>Custom right side content</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click-left</td><td>Emitted when the left button is clicked</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-right</td><td>Emitted when the right button is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-nav-bar-height</td><td><em>46px</em></td><td>-</td></tr><tr><td>–van-nav-bar-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-nav-bar-arrow-size</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-nav-bar-icon-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-nav-bar-text-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-nav-bar-title-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-nav-bar-title-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-nav-bar-z-index</td><td><em>1</em></td><td>-</td></tr></tbody></table></div>',12)],Yc={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Jc,Xc)))},Zc={class:"van-doc-markdown-body"},Qc=[t('<h1>NoticeBar</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to display a group of message notifications in a continuons loop.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NoticeBar</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">NoticeBar</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Notice Content&quot;</span> <span class="hljs-attr">left-icon</span>=<span class="hljs-string">&quot;volume-o&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="scrollable" tabindex="-1">Scrollable</h3><pre><code class="language-html"><span class="hljs-comment">&lt;!-- Enable scroll when text is short --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">scrollable</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Notice Content&quot;</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Disable scroll when text is long --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span>\n  <span class="hljs-attr">:scrollable</span>=<span class="hljs-string">&quot;false&quot;</span>\n  <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Technology is the common soul of the people who developed it.&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="wrapable" tabindex="-1">Wrapable</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">wrapable</span> <span class="hljs-attr">:scrollable</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>Notice Content<span class="hljs-tag">&lt;/<span class="hljs-name">van-notice-bar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="mode" tabindex="-1">Mode</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;closeable&quot;</span>&gt;</span>Notice Content<span class="hljs-tag">&lt;/<span class="hljs-name">van-notice-bar</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;link&quot;</span>&gt;</span>Notice Content<span class="hljs-tag">&lt;/<span class="hljs-name">van-notice-bar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-style" tabindex="-1">Custom Style</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#1989fa&quot;</span> <span class="hljs-attr">background</span>=<span class="hljs-string">&quot;#ecf9ff&quot;</span> <span class="hljs-attr">left-icon</span>=<span class="hljs-string">&quot;info-o&quot;</span>&gt;</span>\n  Notice Content\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-notice-bar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="vertical-scroll" tabindex="-1">Vertical Scroll</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-notice-bar</span> <span class="hljs-attr">left-icon</span>=<span class="hljs-string">&quot;volume-o&quot;</span> <span class="hljs-attr">:scrollable</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span>\n    <span class="hljs-attr">vertical</span>\n    <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;notice-swipe&quot;</span>\n    <span class="hljs-attr">:autoplay</span>=<span class="hljs-string">&quot;3000&quot;</span>\n    <span class="hljs-attr">:show-indicators</span>=<span class="hljs-string">&quot;false&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>Content 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>Content 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>Content 3<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-notice-bar</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.notice-swipe</span> {\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">40px</span>;\n    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">40px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>mode</td><td>Mode, can be set to <code>closeable</code> <code>link</code></td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>text</td><td>Notice text content</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>color</td><td>Text color</td><td><em>string</em></td><td><code>#f60</code></td></tr><tr><td>background</td><td>Background color</td><td><em>string</em></td><td><code>#fff7cc</code></td></tr><tr><td>left-icon</td><td>Left Icon</td><td><em>string</em></td><td>-</td></tr><tr><td>delay</td><td>Animation delay (s)</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>speed</td><td>Scroll speed (px/s)</td><td><em>number | string</em></td><td><code>60</code></td></tr><tr><td>scrollable</td><td>Whether to scroll content</td><td><em>boolean</em></td><td>-</td></tr><tr><td>wrapable</td><td>Whether to enable text wrap</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when NoticeBar is clicked</td><td><em>event: MouseEvent</em></td></tr><tr><td>close</td><td>Emitted when NoticeBar is closed</td><td><em>event: MouseEvent</em></td></tr><tr><td>replay</td><td>Emitted when NoticeBar is replayed</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get NoticeBar instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>reset <code>v3.1.1</code></td><td>Reset NoticeBar</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">NoticeBarMode</span>, <span class="hljs-title class_">NoticeBarInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>NoticeBarInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">NoticeBarInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> noticeBarRef = ref&lt;<span class="hljs-title class_">NoticeBarInstance</span>&gt;();\n\nnoticeBarRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">reset</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Notice text content</td></tr><tr><td>left-icon</td><td>Custom left icon</td></tr><tr><td>right-icon</td><td>Custom right icon</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-notice-bar-height</td><td><em>40px</em></td><td>-</td></tr><tr><td>–van-notice-bar-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-notice-bar-wrapable-padding</td><td><em>var(–van-padding-xs) var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-notice-bar-text-color</td><td><em>var(–van-orange-dark)</em></td><td>-</td></tr><tr><td>–van-notice-bar-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-notice-bar-line-height</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-notice-bar-background-color</td><td><em>var(–van-orange-light)</em></td><td>-</td></tr><tr><td>–van-notice-bar-icon-size</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-notice-bar-icon-min-width</td><td><em>24px</em></td><td>-</td></tr></tbody></table></div>',18)],so={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Zc,Qc)))},ao={class:"van-doc-markdown-body"},to=[t('<h1>Notify</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>The display message prompt is at the top of the page, and supports two methods: function call and component call.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Notify</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Notify</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-js"><span class="hljs-title class_">Notify</span>(<span class="hljs-string">&#39;Notify Message&#39;</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="notify-type" tabindex="-1">Notify Type</h3><pre><code class="language-js"><span class="hljs-title class_">Notify</span>({ <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;primary&#39;</span>, <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Notify Message&#39;</span> });\n<span class="hljs-title class_">Notify</span>({ <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;success&#39;</span>, <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Notify Message&#39;</span> });\n<span class="hljs-title class_">Notify</span>({ <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;danger&#39;</span>, <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Notify Message&#39;</span> });\n<span class="hljs-title class_">Notify</span>({ <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;warning&#39;</span>, <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Notify Message&#39;</span> });\n</code></pre></div><div class="van-doc-card"><h3 id="custom-notify" tabindex="-1">Custom Notify</h3><pre><code class="language-js"><span class="hljs-title class_">Notify</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Custom Color&#39;</span>,\n  <span class="hljs-attr">color</span>: <span class="hljs-string">&#39;#ad0000&#39;</span>,\n  <span class="hljs-attr">background</span>: <span class="hljs-string">&#39;#ffe1e1&#39;</span>,\n});\n\n<span class="hljs-title class_">Notify</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Custom Duration&#39;</span>,\n  <span class="hljs-attr">duration</span>: <span class="hljs-number">1000</span>,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="global-method" tabindex="-1">Global Method</h3><p>After registering the Notify component through <code>app.use</code>, the <code>$notify</code> method will be automatically mounted on all subcomponents of the app.</p><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.$notify(<span class="hljs-string">&#39;Notify Message&#39;</span>);\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="component-call" tabindex="-1">Component Call</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Component Call&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showNotify&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-notify</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;bell&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-right: 4px;&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-notify</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">showNotify</span> = (<span class="hljs-params"></span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n      }, <span class="hljs-number">2000</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      showNotify,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><table><thead><tr><th>Methods</th><th>Attribute</th><th>Return value</th><th>Description</th></tr></thead><tbody><tr><td>Notify</td><td><code>options | message</code></td><td>notify instance</td><td>Show notify</td></tr><tr><td>Notify.clear</td><td>-</td><td><code>void</code></td><td>Close notify</td></tr><tr><td>Notify.setDefaultOptions</td><td><code>options</code></td><td><code>void</code></td><td>Set default options of all notifies</td></tr><tr><td>Notify.resetDefaultOptions</td><td>-</td><td><code>void</code></td><td>Reset default options of all notifies</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="options" tabindex="-1">Options</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>type</td><td>Can be set to <code>primary</code> <code>success</code> <code>warning</code></td><td><em>string</em></td><td><code>danger</code></td></tr><tr><td>message</td><td>Message</td><td><em>string</em></td><td>-</td></tr><tr><td>duration</td><td>Duration(ms), won’t disappear if value is 0</td><td><em>number | string</em></td><td><code>3000</code></td></tr><tr><td>color</td><td>Message color</td><td><em>string</em></td><td><code>white</code></td></tr><tr><td>background</td><td>Background color</td><td><em>string</em></td><td>-</td></tr><tr><td>className</td><td>Custom className</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>lockScroll <code>v3.0.7</code></td><td>Whether to lock background scroll</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>onClick</td><td>Callback function after click</td><td><em>(event: MouseEvent) =&gt; void</em></td><td>-</td></tr><tr><td>onOpened</td><td>Callback function after opened</td><td><em>() =&gt; void</em></td><td>-</td></tr><tr><td>onClose</td><td>Callback function after close</td><td><em>() =&gt; void</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">NotifyType</span>, <span class="hljs-title class_">NotifyOptions</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-notify-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-notify-padding</td><td><em>var(–van-padding-xs) var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-notify-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-notify-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-notify-primary-background-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-notify-success-background-color</td><td><em>var(–van-success-color)</em></td><td>-</td></tr><tr><td>–van-notify-danger-background-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-notify-warning-background-color</td><td><em>var(–van-warning-color)</em></td><td>-</td></tr></tbody></table></div>',15)],no={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",ao,to)))},lo={class:"van-doc-markdown-body"},eo=[t('<h1>NumberKeyboard</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>The NumberKeyboard component can be used with <a href="#/en-US/password-input">PasswordInput</a> component or custom input box components.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NumberKeyboard</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">NumberKeyboard</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="default-keyboard" tabindex="-1">Default Keyboard</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> @<span class="hljs-attr">touchstart.stop</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span>Show Keyboard<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n  @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onInput</span> = (<span class="hljs-params">value</span>) =&gt; <span class="hljs-title class_">Toast</span>(value);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onDelete</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;delete&#39;</span>);\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      onInput,\n      onDelete,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="keyboard-with-sidebar" tabindex="-1">Keyboard With Sidebar</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;custom&quot;</span>\n  <span class="hljs-attr">extra-key</span>=<span class="hljs-string">&quot;.&quot;</span>\n  <span class="hljs-attr">close-button-text</span>=<span class="hljs-string">&quot;Close&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n  @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="idnumber-keyboard" tabindex="-1">IdNumber Keyboard</h3><p>Use <code>extra-key</code> prop to set the content of bottom left button.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">touchstart.stop</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span>\n  Show IdNumber Keyboard\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">extra-key</span>=<span class="hljs-string">&quot;X&quot;</span>\n  <span class="hljs-attr">close-button-text</span>=<span class="hljs-string">&quot;Close&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n  @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="keyboard-with-title" tabindex="-1">Keyboard With Title</h3><p>Use <code>title</code> prop to set keyboard title.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">touchstart.stop</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span>\n  Show Keyboard With Title\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Keyboard Title&quot;</span>\n  <span class="hljs-attr">extra-key</span>=<span class="hljs-string">&quot;.&quot;</span>\n  <span class="hljs-attr">close-button-text</span>=<span class="hljs-string">&quot;Close&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n  @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="multiple-extrakey" tabindex="-1">Multiple ExtraKey</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">touchstart.stop</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span>\n  Show Keyboard With Multiple ExtraKey\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">:extra-key</span>=<span class="hljs-string">&quot;[&#39;00&#39;, &#39;.&#39;]&quot;</span>\n  <span class="hljs-attr">close-button-text</span>=<span class="hljs-string">&quot;Close&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n  @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="random-key-order" tabindex="-1">Random Key Order</h3><p>Use <code>random-key-order</code> prop to shuffle the order of keys.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> @<span class="hljs-attr">touchstart.stop</span>=<span class="hljs-string">&quot;show = true&quot;</span>&gt;</span>\n  Show Keyboard With Random Key Order\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">random-key-order</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n  @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n  @<span class="hljs-attr">delete</span>=<span class="hljs-string">&quot;onDelete&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="bind-value" tabindex="-1">Bind Value</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">readonly</span> <span class="hljs-attr">clickable</span> @<span class="hljs-attr">touchstart.stop</span>=<span class="hljs-string">&quot;show = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">:maxlength</span>=<span class="hljs-string">&quot;6&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;show = false&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      show,\n      value,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Current value</td><td><em>string</em></td><td>-</td></tr><tr><td>show</td><td>Whether to show keyboard</td><td><em>boolean</em></td><td>-</td></tr><tr><td>title</td><td>Keyboard title</td><td><em>string</em></td><td>-</td></tr><tr><td>theme</td><td>Keyboard theme，can be set to <code>custom</code></td><td><em>string</em></td><td><code>default</code></td></tr><tr><td>maxlength</td><td>Value maxlength</td><td><em>number | string</em></td><td>-</td></tr><tr><td>transition</td><td>Whether to show transition animation</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>z-index</td><td>Keyboard z-index</td><td><em>number | string</em></td><td><code>100</code></td></tr><tr><td>extra-key</td><td>Content of bottom left key</td><td><em>string | string[]</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>close-button-text</td><td>Close button text</td><td><em>string</em></td><td>-</td></tr><tr><td>delete-button-text</td><td>Delete button text</td><td><em>string</em></td><td>Delete Icon</td></tr><tr><td>close-button-loading</td><td>Whether to show loading close button in custom theme</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-delete-key</td><td>Whether to show delete button</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>blur-on-close <code>v3.0.6</code></td><td>Whether to emit blur event when clicking close button</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>hide-on-click-outside</td><td>Whether to hide keyboard when outside is clicked</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>teleport</td><td>Specifies a target element where NumberKeyboard will be mounted</td><td><em>string | Element</em></td><td>-</td></tr><tr><td>safe-area-inset-bottom</td><td>Whether to enable bottom safe area adaptation</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>random-key-order</td><td>Whether to shuffle the order of keys</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>input</td><td>Emitted when a key is pressed</td><td>key: Content of the key</td></tr><tr><td>delete</td><td>Emitted when the delete key is pressed</td><td>-</td></tr><tr><td>close</td><td>Emitted when the close button is clicked</td><td>-</td></tr><tr><td>blur</td><td>Emitted when the close button is clicked or the keyboard is blurred</td><td>-</td></tr><tr><td>show</td><td>Emitted when keyboard is fully displayed</td><td>-</td></tr><tr><td>hide</td><td>Emitted when keyboard is fully hidden</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>delete</td><td>Custom delete key content</td></tr><tr><td>extra-key</td><td>Custom extra key content</td></tr><tr><td>title-left</td><td>Custom title left content</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">NumberKeyboardTheme</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-number-keyboard-background-color</td><td><em>var(–van-gray-2)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-key-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-number-keyboard-key-font-size</td><td><em>28px</em></td><td>-</td></tr><tr><td>–van-number-keyboard-key-active-color</td><td><em>var(–van-gray-3)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-key-background-color</td><td><em>van(–van-white)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-delete-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-title-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-title-height</td><td><em>34px</em></td><td>-</td></tr><tr><td>–van-number-keyboard-title-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-close-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-close-color</td><td><em>var(–van-text-link-color)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-close-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-button-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-button-background-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-number-keyboard-z-index</td><td><em>100</em></td><td>-</td></tr></tbody></table></div>',18)],po={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",lo,eo)))},co={class:"van-doc-markdown-body"},oo=[t('<h1>Overlay</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Create a mask layer to emphasize specific page elements and prevent users from performing other operations.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Overlay</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Overlay</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Show Overlay&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-overlay</span> <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = false&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">return</span> { show };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="embedded-content" tabindex="-1">Embedded Content</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-overlay</span> <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show = false&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;wrapper&quot;</span> @<span class="hljs-attr">click.stop</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;block&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-overlay</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.wrapper</span> {\n    <span class="hljs-attribute">display</span>: flex;\n    <span class="hljs-attribute">align-items</span>: center;\n    <span class="hljs-attribute">justify-content</span>: center;\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;\n  }\n\n  <span class="hljs-selector-class">.block</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">120px</span>;\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">120px</span>;\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#fff</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>show</td><td>Whether to show overlay</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>z-index</td><td>z-index</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>duration</td><td>Animation duration</td><td><em>number | string</em></td><td><code>0.3</code></td></tr><tr><td>class-name</td><td>ClassName</td><td><em>string</em></td><td>-</td></tr><tr><td>custom-class</td><td>Custom style</td><td><em>object</em></td><td>-</td></tr><tr><td>lock-scroll</td><td>Whether to lock background scroll</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when component is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Default slot</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-overlay-z-index</td><td><em>1</em></td><td>-</td></tr><tr><td>–van-overlay-background-color</td><td><em>rgba(0, 0, 0, 0.7)</em></td><td>-</td></tr></tbody></table></div>',12)],ro={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",co,oo)))},io={class:"van-doc-markdown-body"},ho=[t('<h1>Pagination</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>When the amount of data is too much, use pagination to separate the data, and load only one page at a time.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Pagination</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Pagination</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pagination</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span> <span class="hljs-attr">:total-items</span>=<span class="hljs-string">&quot;24&quot;</span> <span class="hljs-attr">:items-per-page</span>=<span class="hljs-string">&quot;5&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> currentPage = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>);\n    <span class="hljs-keyword">return</span> { currentPage };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="simple-mode" tabindex="-1">Simple mode</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pagination</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span> <span class="hljs-attr">:page-count</span>=<span class="hljs-string">&quot;12&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;simple&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="show-ellipses" tabindex="-1">Show ellipses</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pagination</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span>\n  <span class="hljs-attr">:total-items</span>=<span class="hljs-string">&quot;125&quot;</span>\n  <span class="hljs-attr">:show-page-size</span>=<span class="hljs-string">&quot;3&quot;</span>\n  <span class="hljs-attr">force-ellipses</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-button" tabindex="-1">Custom Button</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pagination</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span> <span class="hljs-attr">:total-items</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">:show-page-size</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">prev-text</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;arrow-left&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">next-text</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;arrow&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">page</span>=<span class="hljs-string">&quot;{ text }&quot;</span>&gt;</span>{{ text }}<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-pagination</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Current page number</td><td><em>number</em></td><td>-</td></tr><tr><td>mode</td><td>Mode, can be set to <code>simple</code> <code>multi</code></td><td><em>string</em></td><td><code>multi</code></td></tr><tr><td>prev-text</td><td>Previous text</td><td><em>string</em></td><td><code>Previous</code></td></tr><tr><td>next-text</td><td>Next text</td><td><em>string</em></td><td><code>Next</code></td></tr><tr><td>total-items</td><td>Total items</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>items-per-page</td><td>Item number per page</td><td><em>number | string</em></td><td><code>10</code></td></tr><tr><td>page-count</td><td>The total number of pages, if not set, will be calculated based on <code>total-items</code> and <code>items-per-page</code></td><td><em>number | string</em></td><td><code>-</code></td></tr><tr><td>show-page-size</td><td>Count of page size to show</td><td><em>number | string</em></td><td><code>5</code></td></tr><tr><td>force-ellipses</td><td>Whether to show ellipses</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>change</td><td>Emitted when current page changed</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>page</td><td>Custom pagination item</td><td><em>{ number: number, text: string, active: boolean }</em></td></tr><tr><td>prev-text</td><td>Custom prev text</td><td>-</td></tr><tr><td>next-text</td><td>Custom next text</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">PaginationMode</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-pagination-height</td><td><em>40px</em></td><td>-</td></tr><tr><td>–van-pagination-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-pagination-item-width</td><td><em>36px</em></td><td>-</td></tr><tr><td>–van-pagination-item-default-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-pagination-item-disabled-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-pagination-item-disabled-background-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-pagination-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-pagination-desc-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-pagination-disabled-opacity</td><td><em>var(–van-disabled-opacity)</em></td><td>-</td></tr></tbody></table></div>',15)],jo={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",io,ho)))},uo={class:"van-doc-markdown-body"},go=[t('<h1>PasswordInput</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>The passwordinput component is usually used with <a href="#/en-US/number-keyboard">NumberKeyboard</a> Component.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">PasswordInput</span>, <span class="hljs-title class_">NumberKeyboard</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">PasswordInput</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">NumberKeyboard</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-password-input</span>\n  <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:focused</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n  @<span class="hljs-attr">focus</span>=<span class="hljs-string">&quot;showKeyboard = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;showKeyboard = false&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;123&#39;</span>);\n    <span class="hljs-keyword">const</span> showKeyboard = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n\n    <span class="hljs-keyword">return</span> {\n      value,\n      showKeyboard,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-length" tabindex="-1">Custom Length</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-password-input</span>\n  <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:gutter</span>=<span class="hljs-string">&quot;15&quot;</span>\n  <span class="hljs-attr">:focused</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n  @<span class="hljs-attr">focus</span>=<span class="hljs-string">&quot;showKeyboard = true&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="add-gutter" tabindex="-1">Add Gutter</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-password-input</span>\n  <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:gutter</span>=<span class="hljs-string">&quot;10&quot;</span>\n  <span class="hljs-attr">:focused</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n  @<span class="hljs-attr">focus</span>=<span class="hljs-string">&quot;showKeyboard = true&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="without-mask" tabindex="-1">Without Mask</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-password-input</span>\n  <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:mask</span>=<span class="hljs-string">&quot;false&quot;</span>\n  <span class="hljs-attr">:focused</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n  @<span class="hljs-attr">focus</span>=<span class="hljs-string">&quot;showKeyboard = true&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="hint-error" tabindex="-1">Hint Error</h3><p>Use <code>info</code> to set info message, use <code>error-info</code> prop to set error message.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-password-input</span>\n  <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">info</span>=<span class="hljs-string">&quot;Some tips&quot;</span>\n  <span class="hljs-attr">:error-info</span>=<span class="hljs-string">&quot;errorInfo&quot;</span>\n  <span class="hljs-attr">:focused</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n  @<span class="hljs-attr">focus</span>=<span class="hljs-string">&quot;showKeyboard = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-number-keyboard</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;showKeyboard&quot;</span>\n  @<span class="hljs-attr">blur</span>=<span class="hljs-string">&quot;showKeyboard = false&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref, watch } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;123&#39;</span>);\n    <span class="hljs-keyword">const</span> errorInfo = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> showKeyboard = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n\n    <span class="hljs-title function_">watch</span>(value, <span class="hljs-function">(<span class="hljs-params">newVal</span>) =&gt;</span> {\n      <span class="hljs-keyword">if</span> (newVal.<span class="hljs-property">length</span> === <span class="hljs-number">6</span> &amp;&amp; newVal !== <span class="hljs-string">&#39;123456&#39;</span>) {\n        errorInfo.<span class="hljs-property">value</span> = <span class="hljs-string">&#39;Password Mistake&#39;</span>;\n      } <span class="hljs-keyword">else</span> {\n        errorInfo.<span class="hljs-property">value</span> = <span class="hljs-string">&#39;&#39;</span>;\n      }\n    });\n\n    <span class="hljs-keyword">return</span> {\n      value,\n      errorInfo,\n      showKeyboard,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>value</td><td>Password value</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>info</td><td>Bottom info</td><td><em>string</em></td><td>-</td></tr><tr><td>error-info</td><td>Bottom error info</td><td><em>string</em></td><td>-</td></tr><tr><td>length</td><td>Maxlength of password</td><td><em>number | string</em></td><td><code>6</code></td></tr><tr><td>gutter</td><td>Gutter of input</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>mask</td><td>Whether to mask value</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>focused</td><td>Whether to show focused cursor</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>focus</td><td>Emitted when input is focused</td><td>-</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-password-input-height</td><td><em>50px</em></td><td>-</td></tr><tr><td>–van-password-input-margin</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-password-input-font-size</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-password-input-border-radius</td><td><em>6px</em></td><td>-</td></tr><tr><td>–van-password-input-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-password-input-info-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-password-input-info-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-password-input-error-info-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-password-input-dot-size</td><td><em>10px</em></td><td>-</td></tr><tr><td>–van-password-input-dot-color</td><td><em>var(–van-black)</em></td><td>-</td></tr><tr><td>–van-password-input-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-password-input-cursor-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-password-input-cursor-width</td><td><em>1px</em></td><td>-</td></tr><tr><td>–van-password-input-cursor-height</td><td><em>40%</em></td><td>-</td></tr><tr><td>–van-password-input-cursor-animation-duration</td><td><em>1s</em></td><td>-</td></tr></tbody></table></div>',14)],mo={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",uo,go)))},vo={class:"van-doc-markdown-body"},bo=[t('<h1>Picker</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>The picker component is usually used with <a href="#/en-US/popup">Popup</a> Component.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Picker</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Picker</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span>\n  <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span>\n  @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span>\n  @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;onCancel&quot;</span>\n  @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> columns = [<span class="hljs-string">&#39;Delaware&#39;</span>, <span class="hljs-string">&#39;Florida&#39;</span>, <span class="hljs-string">&#39;Georqia&#39;</span>, <span class="hljs-string">&#39;Indiana&#39;</span>, <span class="hljs-string">&#39;Maine&#39;</span>];\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">value, index</span>) =&gt; {\n      <span class="hljs-title class_">Toast</span>(<span class="hljs-string">`Value: <span class="hljs-subst">${value}</span>, Index: <span class="hljs-subst">${index}</span>`</span>);\n    };\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">value, index</span>) =&gt; {\n      <span class="hljs-title class_">Toast</span>(<span class="hljs-string">`Value: <span class="hljs-subst">${value}</span>, Index: <span class="hljs-subst">${index}</span>`</span>);\n    };\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onCancel</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Cancel&#39;</span>);\n\n    <span class="hljs-keyword">return</span> {\n      columns,\n      onChange,\n      onCancel,\n      onConfirm,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="default-index" tabindex="-1">Default Index</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> <span class="hljs-attr">:default-index</span>=<span class="hljs-string">&quot;2&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="multiple-columns" tabindex="-1">Multiple Columns</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> columns = [\n      {\n        <span class="hljs-attr">values</span>: [<span class="hljs-string">&#39;Monday&#39;</span>, <span class="hljs-string">&#39;Tuesday&#39;</span>, <span class="hljs-string">&#39;Wednesday&#39;</span>, <span class="hljs-string">&#39;Thursday&#39;</span>, <span class="hljs-string">&#39;Friday&#39;</span>],\n        <span class="hljs-attr">defaultIndex</span>: <span class="hljs-number">2</span>,\n      },\n      {\n        <span class="hljs-attr">values</span>: [<span class="hljs-string">&#39;Morning&#39;</span>, <span class="hljs-string">&#39;Afternoon&#39;</span>, <span class="hljs-string">&#39;Evening&#39;</span>],\n        <span class="hljs-attr">defaultIndex</span>: <span class="hljs-number">1</span>,\n      },\n    ];\n\n    <span class="hljs-keyword">return</span> { columns };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="cascade" tabindex="-1">Cascade</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> columns = [\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Zhejiang&#39;</span>,\n        <span class="hljs-attr">children</span>: [\n          {\n            <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Hangzhou&#39;</span>,\n            <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Xihu&#39;</span> }, { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Yuhang&#39;</span> }],\n          },\n          {\n            <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Wenzhou&#39;</span>,\n            <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Lucheng&#39;</span> }, { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Ouhai&#39;</span> }],\n          },\n        ],\n      },\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Fujian&#39;</span>,\n        <span class="hljs-attr">children</span>: [\n          {\n            <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Fuzhou&#39;</span>,\n            <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Gulou&#39;</span> }, { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Taijiang&#39;</span> }],\n          },\n          {\n            <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Xiamen&#39;</span>,\n            <span class="hljs-attr">children</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Siming&#39;</span> }, { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Haicang&#39;</span> }],\n          },\n        ],\n      },\n    ];\n\n    <span class="hljs-keyword">return</span> { columns };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="disable-option" tabindex="-1">Disable option</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> columns = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Delaware&#39;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Florida&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Georqia&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> { columns };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="set-column-values" tabindex="-1">Set Column Values</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;picker&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> picker = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>);\n\n    <span class="hljs-keyword">const</span> states = {\n      <span class="hljs-title class_">Group</span>1: [<span class="hljs-string">&#39;Delaware&#39;</span>, <span class="hljs-string">&#39;Florida&#39;</span>, <span class="hljs-string">&#39;Georqia&#39;</span>, <span class="hljs-string">&#39;Indiana&#39;</span>, <span class="hljs-string">&#39;Maine&#39;</span>],\n      <span class="hljs-title class_">Group</span>2: [<span class="hljs-string">&#39;Alabama&#39;</span>, <span class="hljs-string">&#39;Kansas&#39;</span>, <span class="hljs-string">&#39;Louisiana&#39;</span>, <span class="hljs-string">&#39;Texas&#39;</span>],\n    };\n    <span class="hljs-keyword">const</span> columns = [\n      { <span class="hljs-attr">values</span>: <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(states) },\n      { <span class="hljs-attr">values</span>: states.<span class="hljs-property">Group1</span> },\n    ];\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">values</span>) =&gt; {\n      picker.<span class="hljs-property">value</span>.<span class="hljs-title function_">setColumnValues</span>(<span class="hljs-number">1</span>, states[values[<span class="hljs-number">0</span>]]);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      picker,\n      columns,\n      onChange,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="loading" tabindex="-1">Loading</h3><p>When Picker columns data is acquired asynchronously, use <code>loading</code> prop to show loading prompt.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span> <span class="hljs-attr">:loading</span>=<span class="hljs-string">&quot;loading&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> columns = <span class="hljs-title function_">ref</span>([]);\n    <span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n\n    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n      columns.<span class="hljs-property">value</span> = [<span class="hljs-string">&#39;Option&#39;</span>];\n      loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    }, <span class="hljs-number">1000</span>);\n\n    <span class="hljs-keyword">return</span> { columns, loading };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="with-popup" tabindex="-1">With Popup</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-field</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;result&quot;</span>\n  <span class="hljs-attr">is-link</span>\n  <span class="hljs-attr">readonly</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;City&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Choose City&quot;</span>\n  @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showPicker = true&quot;</span>\n/&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPicker&quot;</span> <span class="hljs-attr">round</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span>\n    <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span>\n    @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;showPicker = false&quot;</span>\n    @<span class="hljs-attr">confirm</span>=<span class="hljs-string">&quot;onConfirm&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> columns = [<span class="hljs-string">&#39;Delaware&#39;</span>, <span class="hljs-string">&#39;Florida&#39;</span>, <span class="hljs-string">&#39;Georqia&#39;</span>, <span class="hljs-string">&#39;Indiana&#39;</span>, <span class="hljs-string">&#39;Maine&#39;</span>];\n    <span class="hljs-keyword">const</span> result = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> showPicker = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onConfirm</span> = (<span class="hljs-params">value</span>) =&gt; {\n      result.<span class="hljs-property">value</span> = value;\n      showPicker.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      result,\n      columns,\n      onConfirm,\n      showPicker,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-columns-field" tabindex="-1">Custom Columns Field</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-picker</span>\n  <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;Title&quot;</span>\n  <span class="hljs-attr">:columns</span>=<span class="hljs-string">&quot;columns&quot;</span>\n  <span class="hljs-attr">:columns-field-names</span>=<span class="hljs-string">&quot;customFieldName&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> columns = [\n      {\n        <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;Zhejiang&#39;</span>,\n        <span class="hljs-attr">cities</span>: [\n          {\n            <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;Hangzhou&#39;</span>,\n            <span class="hljs-attr">cities</span>: [{ <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;Xihu&#39;</span> }, { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;Yuhang&#39;</span> }],\n          },\n          {\n            <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;Wenzhou&#39;</span>,\n            <span class="hljs-attr">cities</span>: [{ <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;Lucheng&#39;</span> }, { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;Ouhai&#39;</span> }],\n          },\n        ],\n      },\n      {\n        <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;Fujian&#39;</span>,\n        <span class="hljs-attr">cities</span>: [\n          {\n            <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;Fuzhou&#39;</span>,\n            <span class="hljs-attr">cities</span>: [{ <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;Gulou&#39;</span> }, { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;Taijiang&#39;</span> }],\n          },\n          {\n            <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;Xiamen&#39;</span>,\n            <span class="hljs-attr">cities</span>: [{ <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;Siming&#39;</span> }, { <span class="hljs-attr">cityName</span>: <span class="hljs-string">&#39;Haicang&#39;</span> }],\n          },\n        ],\n      },\n    ];\n\n    <span class="hljs-keyword">const</span> customFieldName = {\n      <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;cityName&#39;</span>,\n      <span class="hljs-attr">children</span>: <span class="hljs-string">&#39;cities&#39;</span>,\n    };\n\n    <span class="hljs-keyword">return</span> {\n      columns,\n      customFieldName,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>columns</td><td>Columns data</td><td><em>Column[]</em></td><td><code>[]</code></td></tr><tr><td>columns-field-names</td><td>custom columns field</td><td><em>object</em></td><td><code>{ text: &#39;text&#39;, values: &#39;values&#39;, children: &#39;children&#39; }</code></td></tr><tr><td>title</td><td>Toolbar title</td><td><em>string</em></td><td>-</td></tr><tr><td>confirm-button-text</td><td>Text of confirm button</td><td><em>string</em></td><td><code>Confirm</code></td></tr><tr><td>cancel-button-text</td><td>Text of cancel button</td><td><em>string</em></td><td><code>Cancel</code></td></tr><tr><td>toolbar-position</td><td>Toolbar position, cat be set to <code>bottom</code></td><td><em>string</em></td><td><code>top</code></td></tr><tr><td>loading</td><td>Whether to show loading prompt</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-toolbar</td><td>Whether to show toolbar</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>allow-html</td><td>Whether to allow HTML in option text</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>default-index</td><td>Default value index of single column picker</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>item-height</td><td>Option height, supports <code>px</code> <code>vw</code> <code>vh</code> <code>rem</code> unit, default <code>px</code></td><td><em>number | string</em></td><td><code>44</code></td></tr><tr><td>visible-item-count</td><td>Count of visible columns</td><td><em>number | string</em></td><td><code>6</code></td></tr><tr><td>swipe-duration</td><td>Duration of the momentum animation，unit <code>ms</code></td><td><em>number | string</em></td><td><code>1000</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><p>Picker events will pass different parameters according to the columns are single or multiple</p><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>confirm</td><td>Emitted when click confirm button</td><td>Single column：current value，current index<br>Multiple columns：current values，current indexes</td></tr><tr><td>cancel</td><td>Emitted when click cancel button</td><td>Single column：current value，current index<br>Multiple columns：current values，current indexes</td></tr><tr><td>change</td><td>Emitted when current option changed</td><td>Single column：Picker instance, current value，current index<br>Multiple columns：Picker instance, current values，column index</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>toolbar <code>3.1.2</code></td><td>Custom toolbar content</td><td>-</td></tr><tr><td>title</td><td>Custom title</td><td>-</td></tr><tr><td>confirm</td><td>Custom confirm button text</td><td>-</td></tr><tr><td>cancel</td><td>Custom cancel button text</td><td>-</td></tr><tr><td>option</td><td>Custom option content</td><td><em>option: string | object</em></td></tr><tr><td>columns-top</td><td>Custom content above columns</td><td>-</td></tr><tr><td>columns-bottom</td><td>Custom content below columns</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="data-structure-of-column" tabindex="-1">Data Structure of Column</h3><table><thead><tr><th>Key</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>values</td><td>Value of column</td><td><em>Array&lt;string | number&gt;</em></td></tr><tr><td>defaultIndex</td><td>Default value index</td><td><em>number</em></td></tr><tr><td>className</td><td>ClassName for this column</td><td><em>string | Array | object</em></td></tr><tr><td>children</td><td>Cascade children</td><td><em>Column</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get Picker instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>getValues</td><td>Get current values of all columns</td><td>-</td><td>values</td></tr><tr><td>setValues</td><td>Set current values of all columns</td><td>values</td><td>-</td></tr><tr><td>getIndexes</td><td>Get current indexes of all columns</td><td>-</td><td>indexes</td></tr><tr><td>setIndexes</td><td>Set current indexes of all columns</td><td>indexes</td><td>-</td></tr><tr><td>getColumnValue</td><td>Get current value of the column</td><td>columnIndex</td><td>value</td></tr><tr><td>setColumnValue</td><td>Set current value of the column</td><td>columnIndex, value</td><td>-</td></tr><tr><td>getColumnIndex</td><td>Get current index of the column</td><td>columnIndex</td><td>optionIndex</td></tr><tr><td>setColumnIndex</td><td>Set current index of the column</td><td>columnIndex, optionIndex</td><td>-</td></tr><tr><td>getColumnValues</td><td>Get columns data of the column</td><td>columnIndex</td><td>values</td></tr><tr><td>setColumnValues</td><td>Set columns data of the column</td><td>columnIndex, values</td><td>-</td></tr><tr><td>confirm</td><td>Stop scrolling and emit confirm event</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">PickerColumn</span>,\n  <span class="hljs-title class_">PickerOption</span>,\n  <span class="hljs-title class_">PickerInstance</span>,\n  <span class="hljs-title class_">PickerFieldNames</span>,\n  <span class="hljs-title class_">PickerObjectColumn</span>,\n  <span class="hljs-title class_">PickerObjectOption</span>,\n  <span class="hljs-title class_">PickerToolbarPosition</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>PickerInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">PickerInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> pickerRef = ref&lt;<span class="hljs-title class_">PickerInstance</span>&gt;();\n\npickerRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">confirm</span>();\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-picker-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-picker-toolbar-height</td><td><em>44px</em></td><td>-</td></tr><tr><td>–van-picker-title-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-picker-title-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-picker-action-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-picker-action-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-picker-confirm-action-color</td><td><em>var(–van-text-link-color)</em></td><td>-</td></tr><tr><td>–van-picker-cancel-action-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-picker-option-padding</td><td><em>0 var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-picker-option-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-picker-option-text-color</td><td><em>var(–van-black)</em></td><td>-</td></tr><tr><td>–van-picker-option-disabled-opacity</td><td><em>0.3</em></td><td>-</td></tr><tr><td>–van-picker-loading-icon-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-picker-loading-mask-color</td><td><em>rgba(255, 255, 255, 0.9)</em></td><td>-</td></tr></tbody></table></div>',22)],fo={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",vo,bo)))},yo={class:"van-doc-markdown-body"},wo=[t('<h1>Popover</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to display some content on top of another.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Popover</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Popover</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popover</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPopover&quot;</span> <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span> @<span class="hljs-attr">select</span>=<span class="hljs-string">&quot;onSelect&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">reference</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Light Theme<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popover</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showPopover = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option 1&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option 2&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option 3&#39;</span> },\n    ];\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSelect</span> = (<span class="hljs-params">action</span>) =&gt; <span class="hljs-title class_">Toast</span>(action.<span class="hljs-property">text</span>);\n\n    <span class="hljs-keyword">return</span> {\n      actions,\n      onSelect,\n      showPopover,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="dark-theme" tabindex="-1">Dark theme</h3><p>Using the <code>theme</code> prop to change the style of Popover.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popover</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPopover&quot;</span> <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;dark&quot;</span> <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">reference</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Dark Theme<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popover</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showPopover = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option 1&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option 2&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option 3&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      actions,\n      showPopover,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="placement" tabindex="-1">Placement</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popover</span> <span class="hljs-attr">placement</span>=<span class="hljs-string">&quot;top&quot;</span> /&gt;</span>\n</code></pre><p><code>placement</code> supports the following values:</p><pre><code class="language-bash">top           <span class="hljs-comment"># Top middle</span>\ntop-start     <span class="hljs-comment"># Top left</span>\ntop-end       <span class="hljs-comment"># Top right</span>\nleft          <span class="hljs-comment"># Left middle</span>\nleft-start    <span class="hljs-comment"># Left top</span>\nleft-end      <span class="hljs-comment"># Left bottom</span>\nright         <span class="hljs-comment"># Right middle</span>\nright-start   <span class="hljs-comment"># Right top</span>\nright-end     <span class="hljs-comment"># Right bottom</span>\nbottom        <span class="hljs-comment"># Bottom middle</span>\nbottom-start  <span class="hljs-comment"># Bottom left</span>\nbottom-end    <span class="hljs-comment"># Bottom right</span>\n</code></pre></div><div class="van-doc-card"><h3 id="show-icon" tabindex="-1">Show Icon</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popover</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPopover&quot;</span> <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">reference</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Show Icon<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popover</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showPopover = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option 1&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;add-o&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option 2&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;music-o&#39;</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option 3&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;more-o&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      actions,\n      showPopover,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="disable-action" tabindex="-1">Disable Action</h3><p>Using the <code>disabled</code> option to disable an action.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popover</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPopover&quot;</span> <span class="hljs-attr">:actions</span>=<span class="hljs-string">&quot;actions&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">reference</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Disable Action<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popover</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showPopover = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> actions = [\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option 1&#39;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option 2&#39;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n      { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Option 3&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      actions,\n      showPopover,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-content" tabindex="-1">Custom Content</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popover</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showPopover&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-grid</span>\n    <span class="hljs-attr">square</span>\n    <span class="hljs-attr">clickable</span>\n    <span class="hljs-attr">:border</span>=<span class="hljs-string">&quot;false&quot;</span>\n    <span class="hljs-attr">column-num</span>=<span class="hljs-string">&quot;3&quot;</span>\n    <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 240px;&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-grid-item</span>\n      <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;i in 6&quot;</span>\n      <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;i&quot;</span>\n      <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Option&quot;</span>\n      <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;photo-o&quot;</span>\n      @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showPopover = false&quot;</span>\n    /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-grid</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">reference</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Custom Content<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-popover</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showPopover = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">return</span> { showPopover };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model:show</td><td>Whether to show Popover</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>actions</td><td>Actions</td><td><em>PopoverAction[]</em></td><td><code>[]</code></td></tr><tr><td>placement</td><td>Placement</td><td><em>PopoverPlacement</em></td><td><code>bottom</code></td></tr><tr><td>theme</td><td>Theme，can be set to <code>dark</code></td><td><em>PopoverTheme</em></td><td><code>light</code></td></tr><tr><td>trigger</td><td>Trigger mode，can be set to <code>manual</code></td><td><em>PopoverTrigger</em></td><td><code>click</code></td></tr><tr><td>duration</td><td>Transition duration, unit second</td><td><em>number | string</em></td><td><code>0.3</code></td></tr><tr><td>offset</td><td>Distance to reference</td><td><em>[number, number]</em></td><td><code>[0, 8]</code></td></tr><tr><td>overlay</td><td>Whether to show overlay</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>overlay-class <code>v3.0.10</code></td><td>Custom overlay class</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>overlay-style <code>v3.0.10</code></td><td>Custom overlay style</td><td><em>object</em></td><td>-</td></tr><tr><td>show-arrow <code>v3.2.2</code></td><td>Whether to show arrow</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-action</td><td>Whether to close when clicking action</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-outside</td><td>Whether to close when clicking outside</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-overlay <code>v3.0.10</code></td><td>Whether to close when clicking overlay</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>teleport</td><td>Specifies a target element where Popover will be mounted</td><td><em>string | Element</em></td><td><code>body</code></td></tr><tr><td>icon-prefix <code>v3.0.17</code></td><td>Icon className prefix</td><td><em>string</em></td><td><code>van-icon</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="data-structure-of-popoveraction" tabindex="-1">Data Structure of PopoverAction</h3><table><thead><tr><th>Key</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>text</td><td>Action Text</td><td><em>string</em></td></tr><tr><td>icon</td><td>Icon</td><td><em>string</em></td></tr><tr><td>color</td><td>Action Color</td><td><em>string</em></td></tr><tr><td>disabled</td><td>Whether to be disabled</td><td><em>boolean</em></td></tr><tr><td>className</td><td>className of the option</td><td><em>string | Array | object</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>select</td><td>Emitted when an action is clicked</td><td><em>action: Action, index: number</em></td></tr><tr><td>open</td><td>Emitted when opening Popover</td><td>-</td></tr><tr><td>close</td><td>Emitted when closing Popover</td><td>-</td></tr><tr><td>opened</td><td>Emitted when Popover is opened</td><td>-</td></tr><tr><td>closed</td><td>Emitted when Popover is closed</td><td>-</td></tr><tr><td>click-overlay</td><td>Emitted when overlay is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Custom content</td></tr><tr><td>reference</td><td>Reference Element</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">PopoverTheme</span>,\n  <span class="hljs-title class_">PopoverAction</span>,\n  <span class="hljs-title class_">PopoverTrigger</span>,\n  <span class="hljs-title class_">PopoverPlacement</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-popover-arrow-size</td><td><em>6px</em></td><td>-</td></tr><tr><td>–van-popover-border-radius</td><td><em>var(–van-border-radius-lg)</em></td><td>-</td></tr><tr><td>–van-popover-action-width</td><td><em>128px</em></td><td>-</td></tr><tr><td>–van-popover-action-height</td><td><em>44px</em></td><td>-</td></tr><tr><td>–van-popover-action-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-popover-action-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-popover-action-icon-size</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-popover-light-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-popover-light-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-popover-light-action-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-popover-dark-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-popover-dark-background-color</td><td><em>#4a4a4a</em></td><td>-</td></tr><tr><td>–van-popover-dark-action-disabled-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr></tbody></table></div>',18)],qo={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",yo,wo)))},xo={class:"van-doc-markdown-body"},ko=[t('<h1>Popup</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to display pop-up windows, information prompts, etc., and supports multiple pop-up layers to display.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Popup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Popup</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">is-link</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showPopup&quot;</span>&gt;</span>Show Popup<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">van-popup</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">showPopup</span> = (<span class="hljs-params"></span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;\n    };\n    <span class="hljs-keyword">return</span> {\n      show,\n      showPopup,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="position" tabindex="-1">Position</h3><p>Use <code>position</code> prop to set popup display position.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;top&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;30%&#39; }&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="close-icon" tabindex="-1">Close Icon</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">closeable</span>\n  <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>\n  <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;30%&#39; }&quot;</span>\n/&gt;</span>\n<span class="hljs-comment">&lt;!-- Custom Icon --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">closeable</span>\n  <span class="hljs-attr">close-icon</span>=<span class="hljs-string">&quot;close&quot;</span>\n  <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>\n  <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;30%&#39; }&quot;</span>\n/&gt;</span>\n<span class="hljs-comment">&lt;!-- Icon Position --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">closeable</span>\n  <span class="hljs-attr">close-icon-position</span>=<span class="hljs-string">&quot;top-left&quot;</span>\n  <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>\n  <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;30%&#39; }&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="round-corner" tabindex="-1">Round Corner</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span>\n  <span class="hljs-attr">round</span>\n  <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>\n  <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;30%&#39; }&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="get-container" tabindex="-1">Get Container</h3><p>Use <code>teleport</code> prop to specify mount location.</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- teleport to body --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">teleport</span>=<span class="hljs-string">&quot;body&quot;</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- teleport to #app --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-popup</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">teleport</span>=<span class="hljs-string">&quot;#app&quot;</span> /&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model:show</td><td>Whether to show popup</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>overlay</td><td>Whether to show overlay</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>position</td><td>Can be set to <code>top</code> <code>bottom</code> <code>right</code> <code>left</code></td><td><em>string</em></td><td><code>center</code></td></tr><tr><td>overlay-class</td><td>Custom overlay class</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>overlay-style</td><td>Custom overlay style</td><td><em>object</em></td><td>-</td></tr><tr><td>duration</td><td>Transition duration, unit second</td><td><em>number | string</em></td><td><code>0.3</code></td></tr><tr><td>round</td><td>Whether to show round corner</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>lock-scroll</td><td>Whether to lock background scroll</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>lazy-render</td><td>Whether to lazy render util appeared</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-popstate</td><td>Whether to close when popstate</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>close-on-click-overlay</td><td>Whether to close when overlay is clicked</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>closeable</td><td>Whether to show close icon</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>close-icon</td><td>Close icon name</td><td><em>string</em></td><td><code>cross</code></td></tr><tr><td>close-icon-position</td><td>Close Icon Position，can be set to <code>top-left</code> <code>bottom-left</code> <code>bottom-right</code></td><td><em>string</em></td><td><code>top-right</code></td></tr><tr><td>before-close <code>v3.1.4</code></td><td>Callback function before close</td><td><em>(action: string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr><tr><td>icon-prefix <code>v3.0.18</code></td><td>Icon className prefix</td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>transition</td><td>Transition, equivalent to <code>name</code> prop of <a href="https://v3.vuejs.org/api/built-in-components.html#transition">transition</a></td><td><em>string</em></td><td>-</td></tr><tr><td>transition-appear</td><td>Whether to apply transition on initial render</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>teleport</td><td>Specifies a target element where Popup will be mounted</td><td><em>string | Element</em></td><td>-</td></tr><tr><td>safe-area-inset-bottom</td><td>Whether to enable bottom safe area adaptation</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when Popup is clicked</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-overlay</td><td>Emitted when overlay is clicked</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-close-icon</td><td>Emitted when close icon is clicked</td><td><em>event: MouseEvent</em></td></tr><tr><td>open</td><td>Emitted when opening Popup</td><td>-</td></tr><tr><td>close</td><td>Emitted when closing Popup</td><td>-</td></tr><tr><td>opened</td><td>Emitted when Popup is opened</td><td>-</td></tr><tr><td>closed</td><td>Emitted when Popup is closed</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Content of Popup</td></tr><tr><td>overlay-content <code>v3.0.18</code></td><td>Content of Popup overlay</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">PopupPosition</span>, <span class="hljs-title class_">PopupCloseIconPosition</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-popup-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-popup-transition</td><td><em>transform var(–van-animation-duration-base)</em></td><td>-</td></tr><tr><td>–van-popup-round-border-radius</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-popup-close-icon-size</td><td><em>22px</em></td><td>-</td></tr><tr><td>–van-popup-close-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-popup-close-icon-active-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-popup-close-icon-margin</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-popup-close-icon-z-index</td><td><em>1</em></td><td>-</td></tr></tbody></table></div>',16)],zo={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",xo,ko)))},_o={class:"van-doc-markdown-body"},Co=[t('<h1>Progress</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to show the current progress of the operation.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Progress</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Progress</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><p>Use <code>percentage</code> prop to set current progress.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-progress</span> <span class="hljs-attr">:percentage</span>=<span class="hljs-string">&quot;50&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="stroke-width" tabindex="-1">Stroke Width</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-progress</span> <span class="hljs-attr">:percentage</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">&quot;8&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="inactive" tabindex="-1">Inactive</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-progress</span> <span class="hljs-attr">inactive</span> <span class="hljs-attr">:percentage</span>=<span class="hljs-string">&quot;50&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-style" tabindex="-1">Custom Style</h3><p>Use <code>pivot-text</code> to custom text，use <code>color</code> to custom bar color.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-progress</span> <span class="hljs-attr">pivot-text</span>=<span class="hljs-string">&quot;Orange&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#f2826a&quot;</span> <span class="hljs-attr">:percentage</span>=<span class="hljs-string">&quot;25&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-progress</span> <span class="hljs-attr">pivot-text</span>=<span class="hljs-string">&quot;Red&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> <span class="hljs-attr">:percentage</span>=<span class="hljs-string">&quot;50&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-progress</span>\n  <span class="hljs-attr">:percentage</span>=<span class="hljs-string">&quot;75&quot;</span>\n  <span class="hljs-attr">pivot-text</span>=<span class="hljs-string">&quot;Purple&quot;</span>\n  <span class="hljs-attr">pivot-color</span>=<span class="hljs-string">&quot;#7232dd&quot;</span>\n  <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;linear-gradient(to right, #be99ff, #7232dd)&quot;</span>\n/&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>percentage</td><td>Percentage</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>stroke-width</td><td>Stroke width</td><td><em>number | string</em></td><td><code>4px</code></td></tr><tr><td>color</td><td>Color</td><td><em>string</em></td><td><code>#1989fa</code></td></tr><tr><td>track-color</td><td>Track color</td><td><em>string</em></td><td><code>#e5e5e5</code></td></tr><tr><td>pivot-text</td><td>Pivot text</td><td><em>string</em></td><td>percentage</td></tr><tr><td>pivot-color</td><td>Pivot text background color</td><td><em>string</em></td><td>inherit progress color</td></tr><tr><td>text-color</td><td>Pivot text color</td><td><em>string</em></td><td><code>white</code></td></tr><tr><td>inactive</td><td>Whether to be gray</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-pivot</td><td>Whether to show text</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ProgressInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>ProgressInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ProgressInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> progressRef = ref&lt;<span class="hljs-title class_">ProgressInstance</span>&gt;();\n\nprogressRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">resize</span>();\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-progress-height</td><td><em>4px</em></td><td>-</td></tr><tr><td>–van-progress-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-progress-background-color</td><td><em>var(–van-gray-3)</em></td><td>-</td></tr><tr><td>–van-progress-pivot-padding</td><td><em>0 5px</em></td><td>-</td></tr><tr><td>–van-progress-pivot-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-progress-pivot-font-size</td><td><em>var(–van-font-size-xs)</em></td><td>-</td></tr><tr><td>–van-progress-pivot-line-height</td><td><em>1.6</em></td><td>-</td></tr><tr><td>–van-progress-pivot-background-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr></tbody></table></div>',13)],So={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",_o,Co)))},To={class:"van-doc-markdown-body"},Io=[t('<h1>PullRefresh</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to provide interactive operations for pull-down refresh.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">PullRefresh</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">PullRefresh</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><p>The <code>refresh</code> event will be Emitted when pull refresh, you should set <code>v-model</code> to <code>false</code> to reset loading status after process refresh event.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pull-refresh</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;loading&quot;</span> @<span class="hljs-attr">refresh</span>=<span class="hljs-string">&quot;onRefresh&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Refresh Count: {{ count }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-pull-refresh</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> count = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onRefresh</span> = (<span class="hljs-params"></span>) =&gt; {\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Refresh Success&#39;</span>);\n        loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n        count.<span class="hljs-property">value</span>++;\n      }, <span class="hljs-number">1000</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      count,\n      loading,\n      onRefresh,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="success-tip" tabindex="-1">Success Tip</h3><p>Use <code>success-text</code> to set the success prompt after the refresh is successful</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pull-refresh</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;isLoading&quot;</span>\n  <span class="hljs-attr">success-text</span>=<span class="hljs-string">&quot;Refresh success&quot;</span>\n  @<span class="hljs-attr">refresh</span>=<span class="hljs-string">&quot;onRefresh&quot;</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Refresh Count: {{ count }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-pull-refresh</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-tips" tabindex="-1">Custom Tips</h3><p>Use slots to custom tips.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pull-refresh</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;isLoading&quot;</span> <span class="hljs-attr">:head-height</span>=<span class="hljs-string">&quot;80&quot;</span> @<span class="hljs-attr">refresh</span>=<span class="hljs-string">&quot;onRefresh&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">pulling</span>=<span class="hljs-string">&quot;props&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span>\n      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;doge&quot;</span>\n      <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/doge.png&quot;</span>\n      <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ transform: `scale(${props.distance / 80})` }&quot;</span>\n    /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">loosing</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;doge&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/doge.png&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">loading</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;doge&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/doge-fire.jpg&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Refresh Count: {{ count }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-pull-refresh</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.doge</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">140px</span>;\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">72px</span>;\n    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">8px</span>;\n    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Loading status</td><td><em>boolean</em></td><td>-</td></tr><tr><td>pulling-text</td><td>Text to show when pulling</td><td><em>string</em></td><td><code>Pull to refresh...</code></td></tr><tr><td>loosing-text</td><td>Text to show when loosing</td><td><em>string</em></td><td><code>Loose to refresh...</code></td></tr><tr><td>loading-text</td><td>Text to show when loading</td><td><em>string</em></td><td><code>Loading...</code></td></tr><tr><td>success-text</td><td>Text to show when loading success</td><td><em>string</em></td><td>-</td></tr><tr><td>success-duration</td><td>Success text display duration(ms)</td><td><em>number | string</em></td><td><code>500</code></td></tr><tr><td>animation-duration</td><td>Animation duration</td><td><em>number | string</em></td><td><code>300</code></td></tr><tr><td>head-height</td><td>Height of head</td><td><em>number | string</em></td><td><code>50</code></td></tr><tr><td>pull-distance <code>v3.0.8</code></td><td>The distance to trigger the pull refresh</td><td><em>number | string</em></td><td>same as <code>head-height</code></td></tr><tr><td>disabled</td><td>Whether to disable pull refresh</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>refresh</td><td>Emitted after pulling refresh</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>default</td><td>Default slot</td><td>-</td></tr><tr><td>normal</td><td>Content of head when at normal status</td><td>-</td></tr><tr><td>pulling</td><td>Content of head when at pulling</td><td>{ distance }</td></tr><tr><td>loosing</td><td>Content of head when at loosing</td><td>{ distance }</td></tr><tr><td>loading</td><td>Content of head when at loading</td><td>{ distance }</td></tr><tr><td>success</td><td>Content of head when succeed</td><td>-</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-pull-refresh-head-height</td><td><em>50px</em></td><td>-</td></tr><tr><td>–van-pull-refresh-head-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-pull-refresh-head-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-pull-refresh-loading-icon-size</td><td><em>16px</em></td><td>-</td></tr></tbody></table></div>',13)],Po={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",To,Io)))},Do={class:"van-doc-markdown-body"},Ao=[t('<h1>Radio</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Single selection among multiple options.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">RadioGroup</span>, <span class="hljs-title class_">Radio</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Radio</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">RadioGroup</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><p>Use <code>v-model</code> to bind the name of checked radio.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>Radio 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>Radio 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;1&#39;</span>);\n    <span class="hljs-keyword">return</span> { checked };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="horizontal" tabindex="-1">Horizontal</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;horizontal&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>Radio 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>Radio 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="disabled" tabindex="-1">Disabled</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>Radio 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>Radio 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-shape" tabindex="-1">Custom Shape</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span>&gt;</span>Radio 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span>&gt;</span>Radio 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-color" tabindex="-1">Custom Color</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">checked-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span>&gt;</span>Radio 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">checked-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span>&gt;</span>Radio 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-icon-size" tabindex="-1">Custom Icon Size</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">icon-size</span>=<span class="hljs-string">&quot;24px&quot;</span>&gt;</span>Radio 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">icon-size</span>=<span class="hljs-string">&quot;24px&quot;</span>&gt;</span>Radio 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-icon" tabindex="-1">Custom Icon</h3><p>Use icon slot to custom icon</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>\n    Radio 1\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;props&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;img-icon&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;props.checked ? activeIcon : inactiveIcon&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>\n    Radio 2\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;props&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;img-icon&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;props.checked ? activeIcon : inactiveIcon&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.img-icon</span> {\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;1&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      checked,\n      <span class="hljs-attr">activeIcon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/user-active.png&#39;</span>,\n      <span class="hljs-attr">inactiveIcon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/user-inactive.png&#39;</span>,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="disable-label-click" tabindex="-1">Disable Label Click</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">label-disabled</span>&gt;</span>Radio 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">label-disabled</span>&gt;</span>Radio 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="inside-a-cell" tabindex="-1">Inside a Cell</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Radio 1&quot;</span> <span class="hljs-attr">clickable</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;checked = &#39;1&#39;&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right-icon</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Radio 2&quot;</span> <span class="hljs-attr">clickable</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;checked = &#39;2&#39;&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right-icon</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">van-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-cell-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-radio-group</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="radio-props" tabindex="-1">Radio Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>name</td><td>Radio name</td><td><em>any</em></td><td>-</td></tr><tr><td>shape</td><td>Can be set to <code>square</code></td><td><em>string</em></td><td><code>round</code></td></tr><tr><td>disabled</td><td>Whether to disable radio</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>label-disabled</td><td>Whether to disable label click</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>label-position</td><td>Can be set to <code>left</code></td><td><em>string</em></td><td><code>right</code></td></tr><tr><td>icon-size</td><td>Icon size</td><td><em>number | string</em></td><td><code>20px</code></td></tr><tr><td>checked-color</td><td>Checked color</td><td><em>string</em></td><td><code>#1989fa</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="radiogroup-props" tabindex="-1">RadioGroup Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Name of checked radio</td><td><em>any</em></td><td>-</td></tr><tr><td>disabled</td><td>Disable all radios</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>direction</td><td>Direction, can be set to <code>horizontal</code></td><td><em>string</em></td><td><code>vertical</code></td></tr><tr><td>icon-size</td><td>Icon size of all radios</td><td><em>number | string</em></td><td><code>20px</code></td></tr><tr><td>checked-color</td><td>Checked color of all radios</td><td><em>string</em></td><td><code>#1989fa</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="radio-events" tabindex="-1">Radio Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>click</td><td>Emitted when radio is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="radiogroup-events" tabindex="-1">RadioGroup Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>change</td><td>Emitted when value changed</td><td><em>name: string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="radio-slots" tabindex="-1">Radio Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>default</td><td>Custom label</td><td>-</td></tr><tr><td>icon</td><td>Custom icon</td><td><em>{ checked: boolean, disabled: boolean }</em></td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-radio-size</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-radio-border-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-radio-transition-duration</td><td><em>var(–van-animation-duration-fast)</em></td><td>-</td></tr><tr><td>–van-radio-label-margin</td><td><em>var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-radio-label-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-radio-checked-icon-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-radio-disabled-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-radio-disabled-label-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-radio-disabled-background-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr></tbody></table></div>',21)],No={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Do,Ao)))},Eo={class:"van-doc-markdown-body"},Ro=[t('<h1>Rate</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>The rate component is used for rating things.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Rate</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Rate</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">3</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-icon" tabindex="-1">Custom Icon</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;like&quot;</span> <span class="hljs-attr">void-icon</span>=<span class="hljs-string">&quot;like-o&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-style" tabindex="-1">Custom Style</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">:size</span>=<span class="hljs-string">&quot;25&quot;</span>\n  <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#ffd21e&quot;</span>\n  <span class="hljs-attr">void-icon</span>=<span class="hljs-string">&quot;star&quot;</span>\n  <span class="hljs-attr">void-color</span>=<span class="hljs-string">&quot;#eee&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="half-star" tabindex="-1">Half Star</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">allow-half</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">2.5</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-count" tabindex="-1">Custom Count</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">:count</span>=<span class="hljs-string">&quot;6&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="disabled" tabindex="-1">Disabled</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="readonly" tabindex="-1">Readonly</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">readonly</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="readonly-half-star" tabindex="-1">Readonly Half Star</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">readonly</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">3.3</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="change-event" tabindex="-1">Change Event</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-rate</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-javascript"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">3</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">value</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;current value:&#39;</span> + value);\n    <span class="hljs-keyword">return</span> {\n      value,\n      onChange,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Current rate</td><td><em>number</em></td><td>-</td></tr><tr><td>count</td><td>Count</td><td><em>number | string</em></td><td><code>5</code></td></tr><tr><td>size</td><td>Icon size</td><td><em>number | string</em></td><td><code>20px</code></td></tr><tr><td>gutter</td><td>Icon gutter</td><td><em>number | string</em></td><td><code>4px</code></td></tr><tr><td>color</td><td>Selected color</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>void-color</td><td>Void color</td><td><em>string</em></td><td><code>#c8c9cc</code></td></tr><tr><td>disabled-color</td><td>Disabled color</td><td><em>string</em></td><td><code>#c8c9cc</code></td></tr><tr><td>icon</td><td>Selected icon</td><td><em>string</em></td><td><code>star</code></td></tr><tr><td>void-icon</td><td>Void icon</td><td><em>string</em></td><td><code>star-o</code></td></tr><tr><td>icon-prefix</td><td>Icon className prefix</td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>allow-half</td><td>Whether to allow half star</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly</td><td>Whether to be readonly</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disabled</td><td>Whether to disable rate</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>touchable</td><td>Whether to allow select rate by touch gesture</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>change</td><td>Emitted when rate changed</td><td>current rate</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-rate-icon-size</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-rate-icon-gutter</td><td><em>var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-rate-icon-void-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-rate-icon-full-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-rate-icon-disabled-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr></tbody></table></div>',18)],Uo={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Eo,Ro)))},Bo={class:"van-doc-markdown-body"},Vo=[t('<h1>Search</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Input box component for search scenarios.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Search</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Search</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-search</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Placeholder&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="listen-to-events" tabindex="-1">Listen to Events</h3><p><code>search</code> event will be Emitted when click the search button on the keyboard, <code>cancel</code> event will be Emitted when click the cancel button.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-search</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n    <span class="hljs-attr">show-action</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Placeholder&quot;</span>\n    @<span class="hljs-attr">search</span>=<span class="hljs-string">&quot;onSearch&quot;</span>\n    @<span class="hljs-attr">cancel</span>=<span class="hljs-string">&quot;onCancel&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSearch</span> = (<span class="hljs-params">val</span>) =&gt; <span class="hljs-title class_">Toast</span>(val);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onCancel</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Cancel&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      value,\n      onSearch,\n      onCancel,\n    };\n  },\n};\n</code></pre><blockquote><p>Tips: There will be a search button on the keyboard when Search is inside a form in iOS.</p></blockquote></div><div class="van-doc-card"><h3 id="input-align" tabindex="-1">Input Align</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-search</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">input-align</span>=<span class="hljs-string">&quot;center&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Placeholder&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="disabled" tabindex="-1">Disabled</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-search</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Placeholder&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-background-color" tabindex="-1">Custom Background Color</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-search</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;round&quot;</span>\n  <span class="hljs-attr">background</span>=<span class="hljs-string">&quot;#4fc08d&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Placeholder&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-action-button" tabindex="-1">Custom Action Button</h3><p>Use <code>action</code> slot to custom right button, <code>cancel</code> event will no longer be Emitted when use this slot.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-search</span>\n  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n  <span class="hljs-attr">show-action</span>\n  <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Address&quot;</span>\n  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Placeholder&quot;</span>\n  @<span class="hljs-attr">search</span>=<span class="hljs-string">&quot;onSearch&quot;</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">action</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onSearch&quot;</span>&gt;</span>Search<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-search</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>label</td><td>Left side label</td><td><em>string</em></td><td>-</td></tr><tr><td>shape</td><td>Shape of field, can be set to <code>round</code></td><td><em>string</em></td><td><code>square</code></td></tr><tr><td>id <code>v3.2.2</code></td><td>Input id, the for attribute of the label also will be set</td><td><em>string</em></td><td>-</td></tr><tr><td>background</td><td>Background color of field</td><td><em>string</em></td><td><code>#f2f2f2</code></td></tr><tr><td>maxlength</td><td>Max length of value</td><td><em>number | string</em></td><td>-</td></tr><tr><td>placeholder</td><td>Placeholder</td><td><em>string</em></td><td>-</td></tr><tr><td>clearable</td><td>Whether to be clearable</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>clear-icon <code>v3.0.12</code></td><td>Clear icon name</td><td><em>string</em></td><td><code>clear</code></td></tr><tr><td>clear-trigger</td><td>When to display the clear icon, <code>always</code> means to display the icon when value is not empty, <code>focus</code> means to display the icon when input is focused</td><td><em>string</em></td><td><code>focus</code></td></tr><tr><td>autofocus</td><td>Whether to auto focus, unsupported in iOS</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-action</td><td>Whether to show right action button</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>action-text</td><td>Text of action button</td><td><em>boolean</em></td><td><code>Cancel</code></td></tr><tr><td>disabled</td><td>Whether to disable field</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly</td><td>Whether to be readonly</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>error</td><td>Whether to mark the input content in red</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>error-message <code>v3.0.12</code></td><td>Error message</td><td><em>string</em></td><td>-</td></tr><tr><td>formatter <code>v3.0.12</code></td><td>Input value formatter</td><td><em>(val: string) =&gt; string</em></td><td>-</td></tr><tr><td>format-trigger <code>v3.0.12</code></td><td>When to format value，can be set to <code>onBlur</code></td><td><em>string</em></td><td><code>onChange</code></td></tr><tr><td>input-align</td><td>Text align of field, can be set to <code>center</code> <code>right</code></td><td><em>string</em></td><td><code>left</code></td></tr><tr><td>left-icon</td><td>Left icon name</td><td><em>string</em></td><td><code>search</code></td></tr><tr><td>right-icon</td><td>Right icon name</td><td><em>string</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>search</td><td>Emitted when confirming search</td><td><em>value: string</em></td></tr><tr><td>update:model-value</td><td>Emitted when input value changed</td><td><em>value: string</em></td></tr><tr><td>focus</td><td>Emitted when input is focused</td><td><em>event: Event</em></td></tr><tr><td>blur</td><td>Emitted when input is blurred</td><td><em>event: Event</em></td></tr><tr><td>click-input</td><td>Emitted when the input is clicked</td><td><em>event: MouseEvent</em></td></tr><tr><td>clear</td><td>Emitted when the clear icon is clicked</td><td><em>event: MouseEvent</em></td></tr><tr><td>cancel</td><td>Emitted when the cancel button is clicked</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get Search instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>focus</td><td>Trigger input focus</td><td>-</td><td>-</td></tr><tr><td>blur</td><td>Trigger input blur</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">SearchShape</span>, <span class="hljs-title class_">SearchInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>SearchInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">SearchInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> searchRef = ref&lt;<span class="hljs-title class_">SearchInstance</span>&gt;();\n\nsearchRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">focus</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>left</td><td>Custom left side content</td></tr><tr><td>action</td><td>Custom right button, displayed when <code>show-action</code> is <code>true</code></td></tr><tr><td>label</td><td>Custom Search label</td></tr><tr><td>left-icon</td><td>Custom left icon</td></tr><tr><td>right-icon</td><td>Custom right icon</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-search-padding</td><td><em>10px var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-search-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-search-content-background-color</td><td><em>var(–van-gray-1)</em></td><td>-</td></tr><tr><td>–van-search-input-height</td><td><em>34px</em></td><td>-</td></tr><tr><td>–van-search-label-padding</td><td><em>0 5px</em></td><td>-</td></tr><tr><td>–van-search-label-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-search-label-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-search-left-icon-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-search-action-padding</td><td><em>0 var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-search-action-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-search-action-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr></tbody></table></div>',18)],Lo={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Bo,Vo)))},Fo={class:"van-doc-markdown-body"},Wo=[t('<h1>ShareSheet</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>A pop-up sharing panel at the bottom for displaying the action buttons corresponding to each sharing channel, without specific sharing logic.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">ShareSheet</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ShareSheet</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Show ShareSheet&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showShare = true&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-share-sheet</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showShare&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Share&quot;</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n  @<span class="hljs-attr">select</span>=<span class="hljs-string">&quot;onSelect&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showShare = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> options = [\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Wechat&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;wechat&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Weibo&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;weibo&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Link&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;link&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Poster&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;poster&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Qrcode&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;qrcode&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSelect</span> = (<span class="hljs-params">option</span>) =&gt; {\n      <span class="hljs-title class_">Toast</span>(option.<span class="hljs-property">name</span>);\n      showShare.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      options,\n      onSelect,\n      showShare,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="multi-line" tabindex="-1">Multi Line</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-share-sheet</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showShare&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Share&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showShare = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> options = [\n      [\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Wechat&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;wechat&#39;</span> },\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Wechat Moments&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;wechat-moments&#39;</span> },\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Weibo&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;weibo&#39;</span> },\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;QQ&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;qq&#39;</span> },\n      ],\n      [\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Link&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;link&#39;</span> },\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Poster&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;poster&#39;</span> },\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Qrcode&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;qrcode&#39;</span> },\n        { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Weapp Qrcode&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;weapp-qrcode&#39;</span> },\n      ],\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      options,\n      showShare,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-icon" tabindex="-1">Custom Icon</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-share-sheet</span> <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showShare&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showShare = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> options = [\n      {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Name&#39;</span>,\n        <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/custom-icon-fire.png&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Name&#39;</span>,\n        <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/custom-icon-light.png&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Name&#39;</span>,\n        <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/custom-icon-water.png&#39;</span>,\n      },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      options,\n      showShare,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="show-description" tabindex="-1">Show Description</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-share-sheet</span>\n  <span class="hljs-attr">v-model:show</span>=<span class="hljs-string">&quot;showShare&quot;</span>\n  <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Share&quot;</span>\n  <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;Description&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> showShare = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>);\n    <span class="hljs-keyword">const</span> options = [\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Wechat&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;wechat&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Weibo&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;weibo&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Link&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;link&#39;</span>, <span class="hljs-attr">description</span>: <span class="hljs-string">&#39;Description&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Poster&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;poster&#39;</span> },\n      { <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;Qrcode&#39;</span>, <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;qrcode&#39;</span> },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      options,\n      showShare,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model:show</td><td>Whether to show ShareSheet</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>options</td><td>Share options</td><td><em>Option[]</em></td><td><code>[]</code></td></tr><tr><td>title</td><td>Title</td><td><em>string</em></td><td>-</td></tr><tr><td>cancel-text</td><td>Cancel button text</td><td><em>string</em></td><td><code>&#39;Cancel&#39;</code></td></tr><tr><td>description</td><td>Description</td><td><em>string</em></td><td>-</td></tr><tr><td>duration</td><td>Transition duration, unit second</td><td><em>number | string</em></td><td><code>0.3</code></td></tr><tr><td>overlay</td><td>Whether to show overlay</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>overlay-class</td><td>Custom overlay class</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>overlay-style</td><td>Custom overlay style</td><td><em>object</em></td><td>-</td></tr><tr><td>lock-scroll</td><td>Whether to lock background scroll</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>lazy-render</td><td>Whether to lazy render util appeared</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-popstate</td><td>Whether to close when popstate</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>close-on-click-overlay</td><td>Whether to close when overlay is clicked</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>safe-area-inset-bottom</td><td>Whether to enable bottom safe area adaptation</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>teleport</td><td>Specifies a target element where ShareSheet will be mounted</td><td><em>string | Element</em></td><td>-</td></tr><tr><td>before-close <code>v3.1.4</code></td><td>Callback function before close</td><td><em>(action: string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="data-structure-of-option" tabindex="-1">Data Structure of Option</h3><table><thead><tr><th>Key</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>name</td><td>Option name</td><td><em>string</em></td></tr><tr><td>description</td><td>Option description</td><td><em>string</em></td></tr><tr><td>icon</td><td>Option icon，can be set to <code>wechat</code> <code>weibo</code> <code>qq</code> <code>link</code> <code>qrcode</code> <code>poster</code> <code>weapp-qrcode</code> <code>wechat-moments</code> or image URL</td><td><em>string</em></td></tr><tr><td>className</td><td>Option className is used to set the class props to the share item</td><td><em>string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>select</td><td>Emitted when an option is clicked</td><td><em>option: Option, index: number</em></td></tr><tr><td>cancel</td><td>Emitted when the cancel button is clicked</td><td>-</td></tr><tr><td>open</td><td>Emitted when opening ShareSheet</td><td>-</td></tr><tr><td>close</td><td>Emitted when closing ShareSheet</td><td>-</td></tr><tr><td>opened</td><td>Emitted when ShareSheet is opened</td><td>-</td></tr><tr><td>closed</td><td>Emitted when ShareSheet is closed</td><td>-</td></tr><tr><td>click-overlay</td><td>Emitted when overlay is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>title</td><td>Custom title</td></tr><tr><td>description</td><td>Custom description</td></tr><tr><td>cancel <code>v3.0.10</code></td><td>Custom the content of cancel button</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ShareSheetOption</span>, <span class="hljs-title class_">ShareSheetOptions</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-share-sheet-header-padding</td><td><em>var(–van-padding-sm) var(–van-padding-md) var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-share-sheet-title-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-share-sheet-title-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-share-sheet-title-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-share-sheet-description-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-share-sheet-description-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-share-sheet-description-line-height</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-share-sheet-icon-size</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-share-sheet-option-name-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-share-sheet-option-name-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-share-sheet-option-description-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-share-sheet-option-description-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-share-sheet-cancel-button-font-size</td><td><em>var(–van-font-size-lg)</em></td><td>-</td></tr><tr><td>–van-share-sheet-cancel-button-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-share-sheet-cancel-button-background</td><td><em>var(–van-white)</em></td><td>-</td></tr></tbody></table></div>',16)],Mo={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Fo,Wo)))},Oo={class:"van-doc-markdown-body"},Go=[t('<h1>Sidebar</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>The vertically displayed navigation bar is used to switch between different content areas.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Sidebar</span>, <span class="hljs-title class_">SidebarItem</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Sidebar</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SidebarItem</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-sidebar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">return</span> { active };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="show-badge" tabindex="-1">Show Badge</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">dot</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;5&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;20&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-sidebar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="disabled" tabindex="-1">Disabled</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-sidebar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="change-event" tabindex="-1">Change Event</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title 1&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title 2&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sidebar-item</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title 3&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-sidebar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">index</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">`Title <span class="hljs-subst">${index + <span class="hljs-number">1</span>}</span>`</span>);\n    <span class="hljs-keyword">return</span> {\n      active,\n      onChange,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="sidebar-props" tabindex="-1">Sidebar Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Index of chosen item</td><td><em>number | string</em></td><td><code>0</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="sidebar-events" tabindex="-1">Sidebar Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>change</td><td>Emitted when chosen item changed</td><td><em>index: number</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="sidebaritem-props" tabindex="-1">SidebarItem Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>title</td><td>Content</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>dot</td><td>Whether to show red dot</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>badge</td><td>Content of the badge</td><td><em>number | string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>disabled</td><td>Whether to be disabled</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>url</td><td>Link</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>Target route of the link, same as to of vue-router</td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>If true, the navigation will not leave a history record</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="sidebaritem-events" tabindex="-1">SidebarItem Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when an item is clicked</td><td><em>index: number</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="sidebaritem-slots" tabindex="-1">SidebarItem Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>title</td><td>Custom item title</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-sidebar-width</td><td><em>80px</em></td><td>-</td></tr><tr><td>–van-sidebar-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-sidebar-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-sidebar-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-sidebar-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-sidebar-padding</td><td><em>20px var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-sidebar-active-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-sidebar-background-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-sidebar-selected-font-weight</td><td><em>var(–van-font-weight-bold)</em></td><td>-</td></tr><tr><td>–van-sidebar-selected-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-sidebar-selected-border-width</td><td><em>4px</em></td><td>-</td></tr><tr><td>–van-sidebar-selected-border-height</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-sidebar-selected-border-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-sidebar-selected-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr></tbody></table></div>',16)],Ho={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Oo,Go)))},Ko={class:"van-doc-markdown-body"},$o=[t('<h1>Skeleton</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to display a set of placeholder graphics during the content loading process.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Skeleton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Skeleton</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-skeleton</span> <span class="hljs-attr">title</span> <span class="hljs-attr">:row</span>=<span class="hljs-string">&quot;3&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="show-avatar" tabindex="-1">Show Avatar</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-skeleton</span> <span class="hljs-attr">title</span> <span class="hljs-attr">avatar</span> <span class="hljs-attr">:row</span>=<span class="hljs-string">&quot;3&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="show-children" tabindex="-1">Show Children</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-skeleton</span> <span class="hljs-attr">title</span> <span class="hljs-attr">avatar</span> <span class="hljs-attr">:row</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">:loading</span>=<span class="hljs-string">&quot;loading&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-skeleton</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref, onMounted } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n\n    <span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> {\n      loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    });\n\n    <span class="hljs-keyword">return</span> {\n      loading,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>row</td><td>Row count</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>row-width</td><td>Row width, can be array</td><td><em>number | string |<br>(number | string)[]</em></td><td><code>100%</code></td></tr><tr><td>title</td><td>Whether to show title placeholder</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>avatar</td><td>Whether to show avatar placeholder</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loading</td><td>Whether to show skeleton，pass <code>false</code> to show child component</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>animate</td><td>Whether to enable animation</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>round</td><td>Whether to show round title and row</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>title-width</td><td>Title width</td><td><em>number | string</em></td><td><code>40%</code></td></tr><tr><td>avatar-size</td><td>Size of avatar placeholder</td><td><em>number | string</em></td><td><code>32px</code></td></tr><tr><td>avatar-shape</td><td>Shape of avatar placeholder，can be set to <code>square</code></td><td><em>string</em></td><td><code>round</code></td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-skeleton-row-height</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-skeleton-row-background-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-skeleton-row-margin-top</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-skeleton-title-width</td><td><em>40%</em></td><td>-</td></tr><tr><td>–van-skeleton-avatar-size</td><td><em>32px</em></td><td>-</td></tr><tr><td>–van-skeleton-avatar-background-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-skeleton-animation-duration</td><td><em>1.2s</em></td><td>-</td></tr></tbody></table></div>',11)],Jo={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Ko,$o)))},Xo={class:"van-doc-markdown-body"},Yo=[t('<h1>Slider</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to select a value within a given range.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Slider</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Slider</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">50</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">value</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Current value: &#39;</span> + value);\n    <span class="hljs-keyword">return</span> {\n      value,\n      onChange,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="dual-thumb" tabindex="-1">Dual thumb</h3><p>Add <code>range</code> attribute to open dual thumb mode.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">range</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-comment">// value must be an Array</span>\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>([<span class="hljs-number">10</span>, <span class="hljs-number">50</span>]);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">value</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Current value: &#39;</span> + value);\n    <span class="hljs-keyword">return</span> {\n      value,\n      onChange,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="range" tabindex="-1">Range</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">:min</span>=<span class="hljs-string">&quot;-50&quot;</span> <span class="hljs-attr">:max</span>=<span class="hljs-string">&quot;50&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="disabled" tabindex="-1">Disabled</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="step-size" tabindex="-1">Step size</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">:step</span>=<span class="hljs-string">&quot;10&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-style" tabindex="-1">Custom style</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">bar-height</span>=<span class="hljs-string">&quot;4px&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-button" tabindex="-1">Custom button</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;custom-button&quot;</span>&gt;</span>{{ value }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-slider</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.custom-button</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">26px</span>;\n    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;\n    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">10px</span>;\n    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">18px</span>;\n    <span class="hljs-attribute">text-align</span>: center;\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ee0a24</span>;\n    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">100px</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="vertical" tabindex="-1">Vertical</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ height: &#39;150px&#39; }&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">vertical</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-slider</span>\n    <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value2&quot;</span>\n    <span class="hljs-attr">range</span>\n    <span class="hljs-attr">vertical</span>\n    <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-left: 100px;&quot;</span>\n    @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>\n  /&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">50</span>);\n    <span class="hljs-keyword">const</span> value2 = <span class="hljs-title function_">ref</span>([<span class="hljs-number">10</span>, <span class="hljs-number">50</span>]);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">value</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Current value: &#39;</span> + value);\n    <span class="hljs-keyword">return</span> {\n      value,\n      value2,\n      onChange,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Current value</td><td><em>number | [number, number]</em></td><td><code>0</code></td></tr><tr><td>max</td><td>Max value</td><td><em>number | string</em></td><td><code>100</code></td></tr><tr><td>min</td><td>Min value</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>step</td><td>Step size</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>bar-height</td><td>Height of bar</td><td><em>number | string</em></td><td><code>2px</code></td></tr><tr><td>button-size</td><td>Button size</td><td><em>number | string</em></td><td><code>24px</code></td></tr><tr><td>active-color</td><td>Active color of bar</td><td><em>string</em></td><td><code>#1989fa</code></td></tr><tr><td>inactive-color</td><td>Inactive color of bar</td><td><em>string</em></td><td><code>#e5e5e5</code></td></tr><tr><td>range</td><td>Whether to enable dual thumb mode</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>reverse <code>v3.2.1</code></td><td>Whether to reverse slider</td><td><code>false</code></td><td></td></tr><tr><td>disabled</td><td>Whether to disable slider</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly <code>v3.0.5</code></td><td>Whether to be readonly</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>vertical</td><td>Whether to display slider vertically</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>update:model-value</td><td>Emitted when value is changing</td><td><em>value: number</em></td></tr><tr><td>change</td><td>Emitted after value changed</td><td><em>value: number</em></td></tr><tr><td>drag-start</td><td>Emitted when start dragging</td><td><em>event: TouchEvent</em></td></tr><tr><td>drag-end</td><td>Emitted when end dragging</td><td><em>event: TouchEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>button</td><td>Custom button</td><td><em>{ value: number }</em></td></tr><tr><td>left-button <code>v3.1.3</code></td><td>Custom left button in range mode</td><td><em>{ value: number }</em></td></tr><tr><td>right-button <code>v3.1.3</code></td><td>Custom right button in range mode</td><td><em>{ value: number }</em></td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-slider-active-background-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-slider-inactive-background-color</td><td><em>var(–van-gray-3)</em></td><td>-</td></tr><tr><td>–van-slider-disabled-opacity</td><td><em>var(–van-disabled-opacity)</em></td><td>-</td></tr><tr><td>–van-slider-bar-height</td><td><em>2px</em></td><td>-</td></tr><tr><td>–van-slider-button-width</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-slider-button-height</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-slider-button-border-radius</td><td><em>50%</em></td><td>-</td></tr><tr><td>–van-slider-button-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-slider-button-box-shadow</td><td><em>0 1px 2px rgba(0, 0, 0, 0.5)</em></td><td>-</td></tr></tbody></table></div>',18)],Zo={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Xo,Yo)))},Qo={class:"van-doc-markdown-body"},sr=[t('<h1>Stepper</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>The stepper component consists of an increase button, a decrease button and an input box, which are used to input and adjust numbers within a certain range.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Stepper</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Stepper</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>);\n    <span class="hljs-keyword">return</span> { value };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="step" tabindex="-1">Step</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;2&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="range" tabindex="-1">Range</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;5&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;8&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="integer" tabindex="-1">Integer</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">integer</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="disabled" tabindex="-1">Disabled</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="disable-input" tabindex="-1">Disable Input</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">disable-input</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="decimal-length" tabindex="-1">Decimal Length</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">step</span>=<span class="hljs-string">&quot;0.2&quot;</span> <span class="hljs-attr">:decimal-length</span>=<span class="hljs-string">&quot;1&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-size" tabindex="-1">Custom Size</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">input-width</span>=<span class="hljs-string">&quot;40px&quot;</span> <span class="hljs-attr">button-size</span>=<span class="hljs-string">&quot;32px&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="before-change" tabindex="-1">Before Change</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">:before-change</span>=<span class="hljs-string">&quot;beforeChange&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> value = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">beforeChange</span> = (<span class="hljs-params">value</span>) =&gt; {\n      <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">loading</span>({ <span class="hljs-attr">forbidClick</span>: <span class="hljs-literal">true</span> });\n\n      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">clear</span>();\n          <span class="hljs-comment">// resolve &#39;true&#39; or &#39;false&#39;</span>\n          <span class="hljs-title function_">resolve</span>(<span class="hljs-literal">true</span>);\n        }, <span class="hljs-number">500</span>);\n      });\n    };\n\n    <span class="hljs-keyword">return</span> {\n      value,\n      beforeChange,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="round-theme" tabindex="-1">Round Theme</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-stepper</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;round&quot;</span> <span class="hljs-attr">button-size</span>=<span class="hljs-string">&quot;22&quot;</span> <span class="hljs-attr">disable-input</span> /&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Current value</td><td><em>number | string</em></td><td>-</td></tr><tr><td>min</td><td>Min value</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>max</td><td>Max value</td><td><em>number | string</em></td><td>-</td></tr><tr><td>default-value</td><td>Default value, valid when v-model is empty</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>step</td><td>Value change step</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>name</td><td>Stepper name</td><td><em>number | string</em></td><td>-</td></tr><tr><td>input-width</td><td>Input width</td><td><em>number | string</em></td><td><code>32px</code></td></tr><tr><td>button-size</td><td>Button size</td><td><em>number | string</em></td><td><code>28px</code></td></tr><tr><td>decimal-length</td><td>Decimal length</td><td><em>number | string</em></td><td>-</td></tr><tr><td>theme</td><td>Theme, can be set to <code>round</code></td><td><em>string</em></td><td>-</td></tr><tr><td>placeholder</td><td>Input placeholder</td><td><em>string</em></td><td>-</td></tr><tr><td>integer</td><td>Whether to allow only integers</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disabled</td><td>Whether to disable value change</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disable-plus</td><td>Whether to disable plus button</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disable-minus</td><td>Whether to disable minus button</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disable-input</td><td>Whether to disable input</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>before-change</td><td>Callback function before changing，return <code>false</code> to prevent change，support return Promise</td><td><em>(value: number | string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td><code>false</code></td></tr><tr><td>show-plus</td><td>Whether to show plus button</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-minus</td><td>Whether to show minus button</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-input</td><td>Whether to show input</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>long-press</td><td>Whether to allow long press</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>allow-empty</td><td>Whether to allow the input to be empty</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>change</td><td>Emitted when value changed</td><td><em>value: string, detail: { name: string }</em></td></tr><tr><td>overlimit</td><td>Emitted when a disabled button is clicked</td><td>-</td></tr><tr><td>plus</td><td>Emitted when the plus button is clicked</td><td>-</td></tr><tr><td>minus</td><td>Emitted when the minus button is clicked</td><td>-</td></tr><tr><td>focus</td><td>Emitted when the input is focused</td><td><em>event: Event</em></td></tr><tr><td>blur</td><td>Emitted when the input is blurred</td><td><em>event: Event</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">StepperTheme</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-stepper-active-color</td><td><em>#e8e8e8</em></td><td>-</td></tr><tr><td>–van-stepper-background-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-stepper-button-icon-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-stepper-button-disabled-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-stepper-button-disabled-icon-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-stepper-button-round-theme-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-stepper-input-width</td><td><em>32px</em></td><td>-</td></tr><tr><td>–van-stepper-input-height</td><td><em>28px</em></td><td>-</td></tr><tr><td>–van-stepper-input-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-stepper-input-line-height</td><td><em>normal</em></td><td>-</td></tr><tr><td>–van-stepper-input-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-stepper-input-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-stepper-input-disabled-background-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-stepper-border-radius</td><td><em>var(–van-border-radius-md)</em></td><td>-</td></tr></tbody></table></div>',20)],ar={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Qo,sr)))},tr={class:"van-doc-markdown-body"},nr=[t('<h1>Steps</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to show the various parts of the action flow and let the user know where the current action fits into the overall flow.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Step</span>, <span class="hljs-title class_">Steps</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Step</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Steps</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-steps</span> <span class="hljs-attr">:active</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>Step1<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>Step2<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>Step3<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>Step4<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-steps</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>);\n    <span class="hljs-keyword">return</span> { active };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-style" tabindex="-1">Custom Style</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-steps</span> <span class="hljs-attr">:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">active-icon</span>=<span class="hljs-string">&quot;success&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#38f&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>Step1<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>Step2<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>Step3<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>Step4<span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-steps</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="vertical-steps" tabindex="-1">Vertical Steps</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-steps</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;vertical&quot;</span> <span class="hljs-attr">:active</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>【City】Status1<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>2016-07-12 12:40<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>【City】Status2<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>2016-07-11 10:00<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-step</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>【City】Status3<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>2016-07-10 09:30<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-step</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-steps</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="steps-props" tabindex="-1">Steps Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>active</td><td>Active step</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>direction</td><td>Can be set to <code>vertical</code></td><td><em>string</em></td><td><code>horizontal</code></td></tr><tr><td>active-color</td><td>Active step color</td><td><em>string</em></td><td><code>#07c160</code></td></tr><tr><td>inactive-color</td><td>Inactive step color</td><td><em>string</em></td><td><code>#969799</code></td></tr><tr><td>active-icon</td><td>Active icon name</td><td><em>string</em></td><td><code>checked</code></td></tr><tr><td>inactive-icon</td><td>Inactive icon name</td><td><em>string</em></td><td>-</td></tr><tr><td>finish-icon <code>v3.0.7</code></td><td>Finish icon name</td><td><em>string</em></td><td>-</td></tr><tr><td>icon-prefix <code>v3.0.15</code></td><td>Icon className prefix</td><td><em>string</em></td><td><code>van-icon</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="step-slots" tabindex="-1">Step Slots</h3><p>| Name | Description | | -------------------- | -------------------- | -------- | — | | active-icon | Custom active icon | | inactive-icon | Custom inactive icon | | finish-icon <code>v3.0.7</code> | Custom finish icon | <em>string</em> | - |</p></div><div class="van-doc-card"><h3 id="steps-events" tabindex="-1">Steps Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click-step</td><td>Emitted when a step’s title or icon is clicked</td><td><em>index: number</em></td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-step-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-step-active-color</td><td><em>var(–van-success-color)</em></td><td>-</td></tr><tr><td>–van-step-process-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-step-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-step-line-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr><tr><td>–van-step-finish-line-color</td><td><em>var(–van-success-color)</em></td><td>-</td></tr><tr><td>–van-step-finish-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-step-icon-size</td><td><em>12px</em></td><td>-</td></tr><tr><td>–van-step-circle-size</td><td><em>5px</em></td><td>-</td></tr><tr><td>–van-step-circle-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-step-horizontal-title-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-steps-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr></tbody></table></div>',13)],lr={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",tr,nr)))},er={class:"van-doc-markdown-body"},dr=[t('<h1>Sticky</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>The sticky component is consistent with the effect achieved by the <code>position: sticky</code> property in CSS, in that when the component is within screen range, it will follow the normal layout arrangement, and when the component rolls out of screen range, it will always be fixed at the top of the screen.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Sticky</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Sticky</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-sticky</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Basic Usage<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-sticky</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="offset-top" tabindex="-1">Offset Top</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-sticky</span> <span class="hljs-attr">:offset-top</span>=<span class="hljs-string">&quot;50&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Offset Top<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-sticky</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="set-container" tabindex="-1">Set Container</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;container&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 150px;&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-sticky</span> <span class="hljs-attr">:container</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span>&gt;</span>Set Container<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-sticky</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> container = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>);\n    <span class="hljs-keyword">return</span> { container };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="offset-bottom" tabindex="-1">Offset Bottom</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-sticky</span> <span class="hljs-attr">:offset-bottom</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Offset Bottom<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-sticky</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>position <code>v3.0.6</code></td><td>Offset position, can be set to <code>bottom</code></td><td><em>string</em></td><td><code>top</code></td></tr><tr><td>offset-top</td><td>Offset top, supports <code>px</code> <code>vw</code> <code>vh</code> <code>rem</code> unit, default <code>px</code></td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>offset-bottom <code>v3.0.6</code></td><td>Offset bottom, supports <code>px</code> <code>vw</code> <code>vh</code> <code>rem</code> unit, default <code>px</code></td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>z-index</td><td>z-index when sticky</td><td><em>number | string</em></td><td><code>99</code></td></tr><tr><td>container</td><td>Container DOM</td><td><em>Element</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>change <code>v3.0.10</code></td><td>Emitted when sticky status changed</td><td><em>isFixed: boolean</em></td></tr><tr><td>scroll</td><td>Emitted when scrolling</td><td><em>{ scrollTop: number, isFixed: boolean }</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">StickyPosition</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-sticky-z-index</td><td><em>99</em></td><td>-</td></tr></tbody></table></div>',14)],pr={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",er,dr)))},cr={class:"van-doc-markdown-body"},or=[t('<h1>Built-in Style</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Vant contains some common styles that can be used directly by the className.</p></div><div class="van-doc-card"><h3 id="text-ellipsis" tabindex="-1">Text ellipsis</h3><p>When the text content length exceeds the maximum container width, the excess text is automatically omitted.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-ellipsis&quot;</span>&gt;</span>\n  This is a paragraph that displays up to one line of text, and the rest of the\n  text will be omitted.\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-multi-ellipsis--l2&quot;</span>&gt;</span>\n  This is a paragraph that displays up to two lines of text, and the rest of the\n  text will be omitted.\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-multi-ellipsis--l3&quot;</span>&gt;</span>\n  This is a paragraph that displays up to three lines of text, and the rest of\n  the text will be omitted.\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="hairline" tabindex="-1">Hairline</h3><p>Add 1px border under the Retina screen for the element, based on a pseudo element.</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- border top --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-hairline--top&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- border bottom --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-hairline--bottom&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- border left --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-hairline--left&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- border right --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-hairline--right&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- border top &amp; bottom --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-hairline--top-bottom&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- full border --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-hairline--surround&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="safe-area-bottom" tabindex="-1">Safe Area Bottom</h3><p>Enable safe area inset bottom.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;van-safe-area-bottom&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="animation" tabindex="-1">Animation</h3><pre><code class="language-html"><span class="hljs-comment">&lt;!-- fade in  --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;van-fade&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;visible&quot;</span>&gt;</span>Fade<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- slide up --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;van-slide-up&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;visible&quot;</span>&gt;</span>Slide Up<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- slide down --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;van-slide-down&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;visible&quot;</span>&gt;</span>Slide Down<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- slide left --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;van-slide-left&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;visible&quot;</span>&gt;</span>Slide Left<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- slide right --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;van-slide-right&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&quot;visible&quot;</span>&gt;</span>Slide Right<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span>\n</code></pre></div>',6)],rr={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",cr,or)))},ir={class:"van-doc-markdown-body"},hr=[t('<h1>SubmitBar</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to display the order amount and submit the order.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">SubmitBar</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SubmitBar</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-submit-bar</span> <span class="hljs-attr">:price</span>=<span class="hljs-string">&quot;3050&quot;</span> <span class="hljs-attr">button-text</span>=<span class="hljs-string">&quot;Submit&quot;</span> @<span class="hljs-attr">submit</span>=<span class="hljs-string">&quot;onSubmit&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSubmit</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Submit&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      onSubmit,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="disabled" tabindex="-1">Disabled</h3><p><code>submit</code> event will not triggered when disabled.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-submit-bar</span>\n  <span class="hljs-attr">disabled</span>\n  <span class="hljs-attr">:price</span>=<span class="hljs-string">&quot;3050&quot;</span>\n  <span class="hljs-attr">button-text</span>=<span class="hljs-string">&quot;Submit&quot;</span>\n  <span class="hljs-attr">tip</span>=<span class="hljs-string">&quot;Some tips&quot;</span>\n  <span class="hljs-attr">tip-icon</span>=<span class="hljs-string">&quot;info-o&quot;</span>\n  @<span class="hljs-attr">submit</span>=<span class="hljs-string">&quot;onSubmit&quot;</span>\n/&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="loading" tabindex="-1">Loading</h3><p><code>submit</code> event will not triggered when loading.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-submit-bar</span> <span class="hljs-attr">loading</span> <span class="hljs-attr">:price</span>=<span class="hljs-string">&quot;3050&quot;</span> <span class="hljs-attr">button-text</span>=<span class="hljs-string">&quot;Submit&quot;</span> @<span class="hljs-attr">submit</span>=<span class="hljs-string">&quot;onSubmit&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="advanced-usage" tabindex="-1">Advanced Usage</h3><p>Use slot to add custom contents.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-submit-bar</span> <span class="hljs-attr">:price</span>=<span class="hljs-string">&quot;3050&quot;</span> <span class="hljs-attr">button-text</span>=<span class="hljs-string">&quot;Submit&quot;</span> @<span class="hljs-attr">submit</span>=<span class="hljs-string">&quot;onSubmit&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>Check<span class="hljs-tag">&lt;/<span class="hljs-name">van-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">tip</span>&gt;</span> Some tips, <span class="hljs-tag">&lt;<span class="hljs-name">span</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onClickLink&quot;</span>&gt;</span>Link<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-submit-bar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onSubmit</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Submit&#39;</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickLink</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Click Link&#39;</span>);\n    <span class="hljs-keyword">return</span> {\n      onSubmit,\n      onClickLink,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>price</td><td>Price</td><td><em>number</em></td><td>-</td></tr><tr><td>decimal-length</td><td>Price decimal length</td><td><em>number | string</em></td><td><code>2</code></td></tr><tr><td>label</td><td>Price left label</td><td><em>string</em></td><td><code>Total：</code></td></tr><tr><td>suffix-label</td><td>Price right label</td><td><em>string</em></td><td>-</td></tr><tr><td>text-align</td><td>Price label text align can be set to <code>left</code></td><td><em>string</em></td><td><code>right</code></td></tr><tr><td>button-text</td><td>Button text</td><td><em>string</em></td><td>-</td></tr><tr><td>button-type</td><td>Button type</td><td><em>string</em></td><td><code>danger</code></td></tr><tr><td>button-color</td><td>Button color</td><td><em>string</em></td><td>-</td></tr><tr><td>tip</td><td>Tip</td><td><em>string</em></td><td>-</td></tr><tr><td>tip-icon</td><td>Tip left icon</td><td><em>string</em></td><td>-</td></tr><tr><td>currency</td><td>Currency symbol</td><td><em>string</em></td><td><code>¥</code></td></tr><tr><td>disabled</td><td>Whether to disable button</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loading</td><td>Whether to show loading icon</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>safe-area-inset-bottom</td><td>Whether to enable bottom safe area adaptation</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>submit</td><td>Triggered when click submit button</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Custom left content</td></tr><tr><td>button</td><td>Custom button</td></tr><tr><td>top</td><td>Custom top content</td></tr><tr><td>tip</td><td>Custom tips</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-submit-bar-height</td><td><em>50px</em></td><td>-</td></tr><tr><td>–van-submit-bar-z-index</td><td><em>100</em></td><td>-</td></tr><tr><td>–van-submit-bar-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-submit-bar-button-width</td><td><em>110px</em></td><td>-</td></tr><tr><td>–van-submit-bar-price-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-submit-bar-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-submit-bar-text-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-submit-bar-tip-padding</td><td><em>var(–van-padding-xs) var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-submit-bar-tip-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-submit-bar-tip-line-height</td><td><em>1.5</em></td><td>-</td></tr><tr><td>–van-submit-bar-tip-color</td><td><em>#f56723</em></td><td>-</td></tr><tr><td>–van-submit-bar-tip-background-color</td><td><em>#fff7cc</em></td><td>-</td></tr><tr><td>–van-submit-bar-tip-icon-size</td><td><em>12px</em></td><td>-</td></tr><tr><td>–van-submit-bar-button-height</td><td><em>40px</em></td><td>-</td></tr><tr><td>–van-submit-bar-padding</td><td><em>0 var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-submit-bar-price-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-submit-bar-price-integer-font-size</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-submit-bar-price-font-family</td><td><em>var(–van-price-integer-font-family)</em></td><td>-</td></tr></tbody></table></div>',14)],jr={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",ir,hr)))},ur={class:"van-doc-markdown-body"},gr=[t('<h1>Swipe</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to loop a group of pictures or content.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Swipe</span>, <span class="hljs-title class_">SwipeItem</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Swipe</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SwipeItem</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><p>Use <code>autoplay</code> prop to set autoplay interval.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-swipe&quot;</span> <span class="hljs-attr">:autoplay</span>=<span class="hljs-string">&quot;3000&quot;</span> <span class="hljs-attr">indicator-color</span>=<span class="hljs-string">&quot;white&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.my-swipe</span> <span class="hljs-selector-class">.van-swipe-item</span> {\n    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;\n    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span>;\n    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">150px</span>;\n    <span class="hljs-attribute">text-align</span>: center;\n    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#39a9ed</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="lazy-render" tabindex="-1">Lazy Render</h3><p>Use <code>lazy-render</code> prop to enable lazy rendering.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span> <span class="hljs-attr">:autoplay</span>=<span class="hljs-string">&quot;3000&quot;</span> <span class="hljs-attr">lazy-render</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;image in images&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;image&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;image&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> images = [\n      <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-1.jpg&#39;</span>,\n      <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/apple-2.jpg&#39;</span>,\n    ];\n    <span class="hljs-keyword">return</span> { images };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="change-event" tabindex="-1">Change Event</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">index</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Current Swipe index:&#39;</span> + index);\n    <span class="hljs-keyword">return</span> { onChange };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="vertical-scrolling" tabindex="-1">Vertical Scrolling</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span> <span class="hljs-attr">:autoplay</span>=<span class="hljs-string">&quot;3000&quot;</span> <span class="hljs-attr">vertical</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="set-swipeitem-size" tabindex="-1">Set SwipeItem Size</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span> <span class="hljs-attr">:loop</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">:width</span>=<span class="hljs-string">&quot;300&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span>\n</code></pre><blockquote><p>It’s not supported to set SwipeItem size in the loop mode.</p></blockquote></div><div class="van-doc-card"><h3 id="custom-indicator" tabindex="-1">Custom Indicator</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-item</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">indicator</span>=<span class="hljs-string">&quot;{ active }&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;custom-indicator&quot;</span>&gt;</span>{{ active + 1 }}/4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.custom-indicator</span> {\n    <span class="hljs-attribute">position</span>: absolute;\n    <span class="hljs-attribute">right</span>: <span class="hljs-number">5px</span>;\n    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">5px</span>;\n    <span class="hljs-attribute">padding</span>: <span class="hljs-number">2px</span> <span class="hljs-number">5px</span>;\n    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>;\n    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.1</span>);\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="swipe-props" tabindex="-1">Swipe Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>autoplay</td><td>Autoplay interval (ms)</td><td><em>number | string</em></td><td>-</td></tr><tr><td>duration</td><td>Animation duration (ms)</td><td><em>number | string</em></td><td><code>500</code></td></tr><tr><td>initial-swipe</td><td>Index of initial swipe, start from 0</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>width</td><td>Set Swiper Item Width</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>height</td><td>Set Swiper Item Height</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>loop</td><td>Whether to enable loop</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-indicators</td><td>Whether to show indicators</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>vertical</td><td>Whether to be vertical Scrolling</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>touchable</td><td>Whether to allow swipe by touch gesture</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>stop-propagation</td><td>Whether to stop touchmove event propagation</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>lazy-render</td><td>Whether to enable lazy render</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>indicator-color</td><td>Indicator color</td><td><em>string</em></td><td><code>#1989fa</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="swipe-events" tabindex="-1">Swipe Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>change</td><td>Emitted when current swipe changed</td><td>index: index of current swipe</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="swipeitem-events" tabindex="-1">SwipeItem Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when component is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="swipe-methods" tabindex="-1">Swipe Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get Swipe instance and call instance methods…</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>prev</td><td>Swipe to prev item</td><td>-</td><td>-</td></tr><tr><td>next</td><td>Swipe to next item</td><td>-</td><td>-</td></tr><tr><td>swipeTo</td><td>Swipe to target index</td><td><em>index: number, options: SwipeToOptions</em></td><td>-</td></tr><tr><td>resize</td><td>Resize Swipe when container element resized or visibility changed</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">SwipeInstance</span>, <span class="hljs-title class_">SwipeToOptions</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>SwipeInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">SwipeInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> swipeRef = ref&lt;<span class="hljs-title class_">SwipeInstance</span>&gt;();\n\nswipeRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">next</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="swipetooptions" tabindex="-1">SwipeToOptions</h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>immediate</td><td>Whether to skip animation</td><td><em>boolean</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="swipe-slots" tabindex="-1">Swipe Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>default</td><td>Content</td><td>-</td></tr><tr><td>indicator <code>v3.0.16</code></td><td>Custom indicator</td><td><em>{ active: number }</em></td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-swipe-indicator-size</td><td><em>6px</em></td><td>-</td></tr><tr><td>–van-swipe-indicator-margin</td><td><em>var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-swipe-indicator-active-opacity</td><td><em>1</em></td><td>-</td></tr><tr><td>–van-swipe-indicator-inactive-opacity</td><td><em>0.3</em></td><td>-</td></tr><tr><td>–van-swipe-indicator-active-background-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-swipe-indicator-inactive-background-color</td><td><em>var(–van-border-color)</em></td><td>-</td></tr></tbody></table></div>',20)],mr={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",ur,gr)))},vr={class:"van-doc-markdown-body"},br=[t('<h1>SwipeCell</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used for cell components that can slide left and right to display operation buttons.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">SwipeCell</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">SwipeCell</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">left</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Select&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">:border</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Cell&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Cell Content&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Delete&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Collect&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-cell</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-content" tabindex="-1">Custom Content</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-card</span>\n    <span class="hljs-attr">num</span>=<span class="hljs-string">&quot;2&quot;</span>\n    <span class="hljs-attr">price</span>=<span class="hljs-string">&quot;2.00&quot;</span>\n    <span class="hljs-attr">desc</span>=<span class="hljs-string">&quot;Description&quot;</span>\n    <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span>\n    <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;goods-card&quot;</span>\n    <span class="hljs-attr">thumb</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/cat.jpeg&quot;</span>\n  /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Delete&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;delete-button&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-cell</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.goods-card</span> {\n    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;\n    <span class="hljs-attribute">background-color</span>: @white;\n  }\n\n  <span class="hljs-selector-class">.delete-button</span> {\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="before-close" tabindex="-1">Before Close</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-swipe-cell</span> <span class="hljs-attr">:before-close</span>=<span class="hljs-string">&quot;beforeClose&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">left</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Select&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">:border</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Cell&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Cell Content&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">square</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Delete&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-swipe-cell</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Dialog</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">beforeClose</span> = (<span class="hljs-params">{ position }</span>) =&gt; {\n      <span class="hljs-keyword">switch</span> (position) {\n        <span class="hljs-keyword">case</span> <span class="hljs-string">&#39;left&#39;</span>:\n        <span class="hljs-keyword">case</span> <span class="hljs-string">&#39;cell&#39;</span>:\n        <span class="hljs-keyword">case</span> <span class="hljs-string">&#39;outside&#39;</span>:\n          <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n        <span class="hljs-keyword">case</span> <span class="hljs-string">&#39;right&#39;</span>:\n          <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n            <span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">confirm</span>({\n              <span class="hljs-attr">title</span>: <span class="hljs-string">&#39;Are you sure to delete?&#39;</span>,\n            }).<span class="hljs-title function_">then</span>(resolve);\n          });\n      }\n    };\n\n    <span class="hljs-keyword">return</span> { beforeClose };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>name</td><td>Identifier of SwipeCell</td><td><em>number | string</em></td><td>-</td></tr><tr><td>left-width</td><td>Width of the left swipe area</td><td><em>number | string</em></td><td><code>auto</code></td></tr><tr><td>right-width</td><td>Width of the right swipe area</td><td><em>number | string</em></td><td><code>auto</code></td></tr><tr><td>before-close</td><td>Callback function before close</td><td><em>(args) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr><tr><td>disabled</td><td>Whether to disabled swipe</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>stop-propagation</td><td>Whether to stop touchmove event propagation</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>custom content</td></tr><tr><td>left</td><td>content of left scrollable area</td></tr><tr><td>right</td><td>content of right scrollable area</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when SwipeCell is clicked</td><td><em>position: ‘left’ | ‘right’ | ‘cell’ | ‘outside’</em></td></tr><tr><td>open</td><td>Emitted when SwipeCell is opened</td><td><em>{ name: string | number, position: ‘left’ | ‘right’ }</em></td></tr><tr><td>close</td><td>Emitted when SwipeCell is closed</td><td><em>{ name: string | number, position: ‘left’ | ‘right’ | ‘cell’ | ‘outside’ }</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="beforeclose-params" tabindex="-1">beforeClose Params</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>name</td><td>Name</td><td><em>string | number</em></td></tr><tr><td>position</td><td>Click position</td><td><em>‘left’ | ‘right’ | ‘cell’ | ‘outside’</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get SwipeCell instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>open</td><td>open SwipeCell</td><td>position: <code>left | right</code></td><td>-</td></tr><tr><td>close</td><td>close SwipeCell</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">SwipeCellSide</span>, <span class="hljs-title class_">SwipeCellPosition</span>, <span class="hljs-title class_">SwipeCellInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>SwipeCellInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">SwipeCellInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> swipeCellRef = ref&lt;<span class="hljs-title class_">SwipeCellInstance</span>&gt;();\n\nswipeCellRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">close</span>();\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-switch-cell-padding-top</td><td><em>var(–van-cell-vertical-padding) - 1px</em></td><td>-</td></tr><tr><td>–van-switch-cell-padding-bottom</td><td><em>var(–van-cell-vertical-padding) - 1px</em></td><td>-</td></tr><tr><td>–van-switch-cell-large-padding-top</td><td><em>var(–van-cell-large-vertical-padding) - 1px</em></td><td>-</td></tr><tr><td>–van-switch-cell-large-padding-bottom</td><td><em>var(–van-cell-large-vertical-padding) - 1px</em></td><td>-</td></tr></tbody></table></div>',16)],fr={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",vr,br)))},yr={class:"van-doc-markdown-body"},wr=[t('<h1>Switch</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to switch between open and closed states.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Switch</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Switch</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-keyword">return</span> { checked };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="disabled" tabindex="-1">Disabled</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">disabled</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="loading" tabindex="-1">Loading</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">loading</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-size" tabindex="-1">Custom Size</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24px&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-color" tabindex="-1">Custom Color</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> <span class="hljs-attr">inactive-color</span>=<span class="hljs-string">&quot;#dcdee0&quot;</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="async-control" tabindex="-1">Async Control</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">:model-value</span>=<span class="hljs-string">&quot;checked&quot;</span> @<span class="hljs-attr">update:model-value</span>=<span class="hljs-string">&quot;onUpdateValue&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Dialog</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> checked = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onUpdateValue</span> = (<span class="hljs-params">newValue</span>) =&gt; {\n      <span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">confirm</span>({\n        <span class="hljs-attr">title</span>: <span class="hljs-string">&#39;Confirm&#39;</span>,\n        <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Are you sure to toggle switch?&#39;</span>,\n      }).<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> {\n        checked.<span class="hljs-property">value</span> = newValue;\n      });\n    };\n\n    <span class="hljs-keyword">return</span> {\n      checked,\n      onUpdateValue,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="inside-a-cell" tabindex="-1">Inside a Cell</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-cell</span> <span class="hljs-attr">center</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">right-icon</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-switch</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;24&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-cell</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Check status of Switch</td><td><em>ActiveValue | InactiveValue</em></td><td><code>false</code></td></tr><tr><td>loading</td><td>Whether to show loading icon</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disabled</td><td>Whether to disable switch</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>size</td><td>Size of switch</td><td><em>number | string</em></td><td><code>30px</code></td></tr><tr><td>active-color</td><td>Background color when active</td><td><em>string</em></td><td><code>#1989fa</code></td></tr><tr><td>inactive-color</td><td>Background color when inactive</td><td><em>string</em></td><td><code>white</code></td></tr><tr><td>active-value</td><td>Value when active</td><td><em>any</em></td><td><code>true</code></td></tr><tr><td>inactive-value</td><td>Value when inactive</td><td><em>any</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>change</td><td>Emitted when check status changed</td><td><em>value: any</em></td></tr><tr><td>click</td><td>Emitted when component is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-switch-size</td><td><em>30px</em></td><td>-</td></tr><tr><td>–van-switch-width</td><td><em>2em</em></td><td>-</td></tr><tr><td>–van-switch-height</td><td><em>1em</em></td><td>-</td></tr><tr><td>–van-switch-node-size</td><td><em>1em</em></td><td>-</td></tr><tr><td>–van-switch-node-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-switch-node-box-shadow</td><td><em>0 3px 1px 0 rgba(0, 0, 0, 0.05)</em></td><td>-</td></tr><tr><td>–van-switch-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-switch-on-background-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-switch-transition-duration</td><td><em>var(–van-animation-duration-base)</em></td><td>-</td></tr><tr><td>–van-switch-disabled-opacity</td><td><em>var(–van-disabled-opacity)</em></td><td>-</td></tr><tr><td>–van-switch-border</td><td><em>var(–van-border-width-base) solid rgba(0, 0, 0, 0.1)</em></td><td>-</td></tr></tbody></table></div>',16)],qr={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",yr,wr)))},xr={class:"van-doc-markdown-body"},kr=[t('<h1>Tab</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to switch between different content areas.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Tab</span>, <span class="hljs-title class_">Tabs</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tab</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tabs</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><p>The first tab is active by default, you can set <code>v-model:active</code> to active specified tab.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 4&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab&#39; + index&quot;</span>&gt;</span>\n    content of tab {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">2</span>);\n    <span class="hljs-keyword">return</span> { active };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="match-by-name" tabindex="-1">Match By Name</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;activeName&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;tab 1&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;a&quot;</span>&gt;</span>content of tab 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;tab 2&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;b&quot;</span>&gt;</span>content of tab 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;tab 3&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;c&quot;</span>&gt;</span>content of tab 3<span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeName = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;a&#39;</span>);\n    <span class="hljs-keyword">return</span> { activeName };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="swipe-tabs" tabindex="-1">Swipe Tabs</h3><p>By default more than 5 tabs, you can scroll through the tabs. You can set <code>swipe-threshold</code> attribute to customize threshold number.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 8&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab&#39; + index&quot;</span>&gt;</span>\n    content of tab {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="disabled-tab" tabindex="-1">Disabled Tab</h3><p>Use <code>disabled</code> prop to disable a tab.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 3&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab&#39; + index&quot;</span> <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;index === 2&quot;</span>&gt;</span>\n    content of tab {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="card-style" tabindex="-1">Card Style</h3><p>Tabs styled as cards.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;card&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 3&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab&#39; + index&quot;</span>&gt;</span>\n    content of tab {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="click-tab-event" tabindex="-1">Click Tab Event</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> @<span class="hljs-attr">click-tab</span>=<span class="hljs-string">&quot;onClickTab&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 2&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab&#39; + index&quot;</span>&gt;</span>\n    content of tab {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onClickTab</span> = (<span class="hljs-params">{ title }</span>) =&gt; <span class="hljs-title class_">Toast</span>(title);\n    <span class="hljs-keyword">return</span> {\n      onClickTab,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="sticky" tabindex="-1">Sticky</h3><p>In sticky mode, the tab will be fixed to top when scroll to top.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">sticky</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 4&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab &#39; + index&quot;</span>&gt;</span>\n    content {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-title" tabindex="-1">Custom title</h3><p>Use title slot to custom tab title.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">title</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;more-o&quot;</span> /&gt;</span>tab <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    content {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="switch-animation" tabindex="-1">Switch Animation</h3><p>Use <code>animated</code> props to change tabs with animation.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">animated</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 4&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab &#39; + index&quot;</span>&gt;</span>\n    content {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="swipeable" tabindex="-1">Swipeable</h3><p>In swipeable mode, you can switch tabs with swipe gesture in the content.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">swipeable</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 4&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab &#39; + index&quot;</span>&gt;</span>\n    content {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="scrollspy" tabindex="-1">Scrollspy</h3><p>In scrollspy mode, the list of content will be tiled.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">scrollspy</span> <span class="hljs-attr">sticky</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 8&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab &#39; + index&quot;</span>&gt;</span>\n    content {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="before-change" tabindex="-1">Before Change</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabs</span> <span class="hljs-attr">v-model:active</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">:before-change</span>=<span class="hljs-string">&quot;beforeChange&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;index in 4&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#39;tab &#39; + index&quot;</span>&gt;</span>\n    content {{ index }}\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabs</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">beforeChange</span> = (<span class="hljs-params">index</span>) =&gt; {\n      <span class="hljs-comment">// prevent change</span>\n      <span class="hljs-keyword">if</span> (index === <span class="hljs-number">1</span>) {\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n      }\n\n      <span class="hljs-comment">// async</span>\n      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n        <span class="hljs-title function_">resolve</span>(index !== <span class="hljs-number">3</span>);\n      });\n    };\n\n    <span class="hljs-keyword">return</span> {\n      active,\n      beforeChange,\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="tabs-props" tabindex="-1">Tabs Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model:active</td><td>Index of active tab</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>type</td><td>Can be set to <code>line</code> <code>card</code></td><td><em>string</em></td><td><code>line</code></td></tr><tr><td>color</td><td>Tab color</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td>background</td><td>Background color</td><td><em>string</em></td><td><code>white</code></td></tr><tr><td>duration</td><td>Toggle tab’s animation time</td><td><em>number | string</em></td><td><code>0.3</code></td></tr><tr><td>line-width</td><td>Width of tab line</td><td><em>number | string</em></td><td><code>40px</code></td></tr><tr><td>line-height</td><td>Height of tab line</td><td><em>number | string</em></td><td><code>3px</code></td></tr><tr><td>animated</td><td>Whether to change tabs with animation</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>border</td><td>Whether to show border when <code>type=&quot;line&quot;</code></td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>ellipsis</td><td>Whether to ellipsis too long title</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>sticky</td><td>Whether to use sticky mode</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>swipeable</td><td>Whether to enable gestures to slide left and right</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>lazy-render</td><td>Whether to enable tab content lazy render</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>scrollspy</td><td>Whether to use scrollspy mode</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>offset-top</td><td>Sticky offset top , supports <code>px</code> <code>vw</code> <code>vh</code> <code>rem</code> unit, default <code>px</code></td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>swipe-threshold</td><td>Set swipe tabs threshold</td><td><em>number | string</em></td><td><code>5</code></td></tr><tr><td>title-active-color</td><td>Title active color</td><td><em>string</em></td><td>-</td></tr><tr><td>title-inactive-color</td><td>Title inactive color</td><td><em>string</em></td><td>-</td></tr><tr><td>before-change</td><td>Callback function before changing tabs，return <code>false</code> to prevent change，support return Promise</td><td><em>(name: number | string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tab-props" tabindex="-1">Tab Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>title</td><td>Title</td><td><em>string</em></td><td>-</td></tr><tr><td>disabled</td><td>Whether to disable tab</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>dot</td><td>Whether to show red dot on the title</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>badge</td><td>Content of the badge on the title</td><td><em>number | string</em></td><td>-</td></tr><tr><td>name</td><td>Identifier</td><td><em>number | string</em></td><td>Index of tab</td></tr><tr><td>url</td><td>Link</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>Target route of the link, same as to of vue-router</td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>If true, the navigation will not leave a history record</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>title-style</td><td>Custom title style</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>title-class</td><td>Custom title class name</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>show-zero-badge <code>v3.2.2</code></td><td>Whether to show badge when the value is zero</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tabs-events" tabindex="-1">Tabs Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click-tab <code>v3.1.4</code></td><td>Emitted when a tab is clicked</td><td><em>{ name: string | number, title: string, event: MouseEvent, disabled: boolean }</em></td></tr><tr><td>change</td><td>Emitted when active tab changed</td><td><em>name: string | number, title: string</em></td></tr><tr><td>rendered</td><td>Emitted when content first rendered in lazy-render mode</td><td><em>name: string | number, title: string</em></td></tr><tr><td>scroll</td><td>Emitted when tab scrolling in sticky mode</td><td><em>{ scrollTop: number, isFixed: boolean }</em></td></tr></tbody></table><blockquote><p>Tips：click and disabled event is deprecated，place use click-tab event instead.</p></blockquote></div><div class="van-doc-card"><h3 id="tabs-methods" tabindex="-1">Tabs Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get Tabs instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>resize</td><td>Resize Tabs when container element resized or visibility changed</td><td>-</td><td>-</td></tr><tr><td>scrollTo</td><td>Go to specified tab in scrollspy mode</td><td><em>name: string | number</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">TabsType</span>, <span class="hljs-title class_">TabsInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>TabsInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">TabsInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> tabsRef = ref&lt;<span class="hljs-title class_">TabsInstance</span>&gt;();\n\ntabsRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">scrollTo</span>(<span class="hljs-number">0</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="tabs-slots" tabindex="-1">Tabs Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>nav-left</td><td>Custom nav left content</td></tr><tr><td>nav-right</td><td>Custom nav right content</td></tr><tr><td>nav-bottom <code>v3.1.1</code></td><td>Custom nav bottom content</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tab-slots" tabindex="-1">Tab Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Content of tab</td></tr><tr><td>title</td><td>Custom tab title</td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-tab-text-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-tab-active-text-color</td><td><em>var(–van-text-color)</em></td><td>-</td></tr><tr><td>–van-tab-disabled-text-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-tab-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-tab-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-tabs-default-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-tabs-line-height</td><td><em>44px</em></td><td>-</td></tr><tr><td>–van-tabs-card-height</td><td><em>30px</em></td><td>-</td></tr><tr><td>–van-tabs-nav-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-tabs-bottom-bar-width</td><td><em>40px</em></td><td>-</td></tr><tr><td>–van-tabs-bottom-bar-height</td><td><em>3px</em></td><td>-</td></tr><tr><td>–van-tabs-bottom-bar-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr></tbody></table></div>',26)],zr={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",xr,kr)))},_r={class:"van-doc-markdown-body"},Cr=[t('<h1>Tabbar</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to switch between different pages.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Tabbar</span>, <span class="hljs-title class_">TabbarItem</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tabbar</span>);\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">TabbarItem</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;friends-o&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;setting-o&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">return</span> { active };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="match-by-name" tabindex="-1">Match by name</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;home&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;friends&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;friends-o&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;setting&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;setting-o&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#39;home&#39;</span>);\n    <span class="hljs-keyword">return</span> { active };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="show-badge" tabindex="-1">Show Badge</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">dot</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;friends-o&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;setting-o&quot;</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;20&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-icon" tabindex="-1">Custom Icon</h3><p>Use <code>icon</code> slot to custom icon.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">badge</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Custom<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;props&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;props.active ? icon.active : icon.inactive&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;setting-o&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> icon = {\n      <span class="hljs-attr">active</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/user-active.png&#39;</span>,\n      <span class="hljs-attr">inactive</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/user-inactive.png&#39;</span>,\n    };\n    <span class="hljs-keyword">return</span> {\n      icon,\n      active,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-color" tabindex="-1">Custom Color</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span> <span class="hljs-attr">active-color</span>=<span class="hljs-string">&quot;#ee0a24&quot;</span> <span class="hljs-attr">inactive-color</span>=<span class="hljs-string">&quot;#000&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;friends-o&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;setting-o&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="change-event" tabindex="-1">Change Event</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;active&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;onChange&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span>&gt;</span>Tab 1<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span>Tab 2<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;friends-o&quot;</span>&gt;</span>Tab 3<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;setting-o&quot;</span>&gt;</span>Tab 4<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> active = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onChange</span> = (<span class="hljs-params">index</span>) =&gt; <span class="hljs-title class_">Toast</span>(<span class="hljs-string">`Tab <span class="hljs-subst">${index}</span>`</span>);\n    <span class="hljs-keyword">return</span> {\n      icon,\n      onChange,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="route-mode" tabindex="-1">Route Mode</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span> /&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar</span> <span class="hljs-attr">route</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">replace</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/home&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;home-o&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-tabbar-item</span> <span class="hljs-attr">replace</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/search&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span>Tab<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar-item</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tabbar</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="tabbar-props" tabindex="-1">Tabbar Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Identifier of current tab</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>fixed</td><td>Whether to fixed bottom</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>border</td><td>Whether to show border</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>z-index</td><td>Z-index</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td>active-color</td><td>Color of active tab item</td><td><em>string</em></td><td><code>#1989fa</code></td></tr><tr><td>inactive-color</td><td>Color of inactive tab item</td><td><em>string</em></td><td><code>#7d7e80</code></td></tr><tr><td>route</td><td>Whether to enable route mode</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>placeholder</td><td>Whether to generate a placeholder element when fixed</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>safe-area-inset-bottom</td><td>Whether to enable bottom safe area adaptation</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>before-change</td><td>Callback function before changing tab，return <code>false</code> to prevent change，support return Promise</td><td><em>(name: number | string) =&gt; boolean | Promise&lt;boolean&gt;</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tabbar-events" tabindex="-1">Tabbar Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>change</td><td>Emitted when changing active tab</td><td><em>active: number | string</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tabbaritem-props" tabindex="-1">TabbarItem Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>name</td><td>Identifier</td><td><em>number | string</em></td><td>Item index</td></tr><tr><td>icon</td><td>Icon name</td><td><em>string</em></td><td>-</td></tr><tr><td>icon-prefix</td><td>Icon className prefix</td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>dot</td><td>Whether to show red dot</td><td><em>boolean</em></td><td>-</td></tr><tr><td>badge</td><td>Content of the badge</td><td><em>number | string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>url</td><td>Link</td><td><em>string</em></td><td>-</td></tr><tr><td>to</td><td>Target route of the link, same as to of vue-router</td><td><em>string | object</em></td><td>-</td></tr><tr><td>replace</td><td>If true, the navigation will not leave a history record</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tabbaritem-slots" tabindex="-1">TabbarItem Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>icon</td><td>Custom icon</td><td><em>active: boolean</em></td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-tabbar-height</td><td><em>50px</em></td><td>-</td></tr><tr><td>–van-tabbar-z-index</td><td><em>1</em></td><td>-</td></tr><tr><td>–van-tabbar-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-tabbar-item-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-tabbar-item-text-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-tabbar-item-active-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-tabbar-item-active-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-tabbar-item-line-height</td><td><em>1</em></td><td>-</td></tr><tr><td>–van-tabbar-item-icon-size</td><td><em>22px</em></td><td>-</td></tr><tr><td>–van-tabbar-item-icon-margin-bottom</td><td><em>var(–van-padding-base)</em></td><td>-</td></tr></tbody></table></div>',18)],Sr={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",_r,Cr)))},Tr={class:"van-doc-markdown-body"},Ir=[t('<h1>Tag</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to mark keywords and summarize the main content.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Tag</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Tag</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;warning&quot;</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="plain-style" tabindex="-1">Plain style</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">plain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="round-style" tabindex="-1">Round style</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">round</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="mark-style" tabindex="-1">Mark style</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">mark</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="closeable" tabindex="-1">Closeable</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">:show</span>=<span class="hljs-string">&quot;show&quot;</span> <span class="hljs-attr">closeable</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;medium&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">close</span>=<span class="hljs-string">&quot;close&quot;</span>&gt;</span>\n  Tag\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> show = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>);\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">close</span> = (<span class="hljs-params"></span>) =&gt; {\n      show.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;\n    };\n\n    <span class="hljs-keyword">return</span> {\n      show,\n      close,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-size" tabindex="-1">Custom Size</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;medium&quot;</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;large&quot;</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="custom-color" tabindex="-1">Custom Color</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#7232dd&quot;</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#ffe1e1&quot;</span> <span class="hljs-attr">text-color</span>=<span class="hljs-string">&quot;#ad0000&quot;</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">van-tag</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#7232dd&quot;</span> <span class="hljs-attr">plain</span>&gt;</span>Tag<span class="hljs-tag">&lt;/<span class="hljs-name">van-tag</span>&gt;</span>\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>type</td><td>Type, can be set to <code>primary</code> <code>success</code> <code>danger</code> <code>warning</code></td><td><em>string</em></td><td><code>default</code></td></tr><tr><td>size</td><td>Size, can be set to <code>large</code> <code>medium</code></td><td><em>string</em></td><td>-</td></tr><tr><td>color</td><td>Custom color</td><td><em>string</em></td><td>-</td></tr><tr><td>show</td><td>Whether to show tag</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>plain</td><td>Whether to be plain style</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>round</td><td>Whether to be round style</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>mark</td><td>Whether to be mark style</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>text-color</td><td>Text color</td><td><em>string</em></td><td><code>white</code></td></tr><tr><td>closeable</td><td>Whether to be closeable</td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>default</td><td>Default slot</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click</td><td>Emitted when component is clicked</td><td><em>event: MouseEvent</em></td></tr><tr><td>close</td><td>Emitted when close icon is clicked</td><td><em>event: MouseEvent</em></td></tr></tbody></table></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-tag-padding</td><td><em>0 var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-tag-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-tag-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-tag-border-radius</td><td><em>2px</em></td><td>-</td></tr><tr><td>–van-tag-line-height</td><td><em>16px</em></td><td>-</td></tr><tr><td>–van-tag-medium-padding</td><td><em>2px 6px</em></td><td>-</td></tr><tr><td>–van-tag-large-padding</td><td><em>var(–van-padding-base) var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-tag-large-border-radius</td><td><em>var(–van-border-radius-md)</em></td><td>-</td></tr><tr><td>–van-tag-large-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-tag-round-border-radius</td><td><em>var(–van-border-radius-max)</em></td><td>-</td></tr><tr><td>–van-tag-danger-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-tag-primary-color</td><td><em>var(–van-primary-color)</em></td><td>-</td></tr><tr><td>–van-tag-success-color</td><td><em>var(–van-success-color)</em></td><td>-</td></tr><tr><td>–van-tag-warning-color</td><td><em>var(–van-warning-color)</em></td><td>-</td></tr><tr><td>–van-tag-default-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-tag-plain-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr></tbody></table></div>',17)],Pr={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Tr,Ir)))},Dr={class:"van-doc-markdown-body"},Ar=[t('<h1>Toast</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Black semi-transparent pop-up hint in the middle of the page, used for message notification, loading hint, operation result hint and other scenarios.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Toast</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="text" tabindex="-1">Text</h3><pre><code class="language-js"><span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Some messages&#39;</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="loading" tabindex="-1">Loading</h3><pre><code class="language-js"><span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">loading</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Loading...&#39;</span>,\n  <span class="hljs-attr">forbidClick</span>: <span class="hljs-literal">true</span>,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="success-fail" tabindex="-1">Success/Fail</h3><pre><code class="language-js"><span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#39;Success&#39;</span>);\n<span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">fail</span>(<span class="hljs-string">&#39;Fail&#39;</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="custom-icon" tabindex="-1">Custom Icon</h3><pre><code class="language-js"><span class="hljs-title class_">Toast</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Custom Icon&#39;</span>,\n  <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;like-o&#39;</span>,\n});\n\n<span class="hljs-title class_">Toast</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Custom Image&#39;</span>,\n  <span class="hljs-attr">icon</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/logo.png&#39;</span>,\n});\n\n<span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">loading</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Loading...&#39;</span>,\n  <span class="hljs-attr">forbidClick</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">loadingType</span>: <span class="hljs-string">&#39;spinner&#39;</span>,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="custom-position" tabindex="-1">Custom Position</h3><pre><code class="language-js"><span class="hljs-title class_">Toast</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Top&#39;</span>,\n  <span class="hljs-attr">position</span>: <span class="hljs-string">&#39;top&#39;</span>,\n});\n\n<span class="hljs-title class_">Toast</span>({\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Bottom&#39;</span>,\n  <span class="hljs-attr">position</span>: <span class="hljs-string">&#39;bottom&#39;</span>,\n});\n</code></pre></div><div class="van-doc-card"><h3 id="update-message" tabindex="-1">Update Message</h3><pre><code class="language-js"><span class="hljs-keyword">const</span> toast = <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">loading</span>({\n  <span class="hljs-attr">duration</span>: <span class="hljs-number">0</span>,\n  <span class="hljs-attr">forbidClick</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">loadingType</span>: <span class="hljs-string">&#39;spinner&#39;</span>,\n  <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;3 seconds&#39;</span>,\n});\n\n<span class="hljs-keyword">let</span> second = <span class="hljs-number">3</span>;\n<span class="hljs-keyword">const</span> timer = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> {\n  second--;\n  <span class="hljs-keyword">if</span> (second) {\n    toast.<span class="hljs-property">message</span> = <span class="hljs-string">`<span class="hljs-subst">${second}</span> seconds`</span>;\n  } <span class="hljs-keyword">else</span> {\n    <span class="hljs-built_in">clearInterval</span>(timer);\n    <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">clear</span>();\n  }\n}, <span class="hljs-number">1000</span>);\n</code></pre></div><div class="van-doc-card"><h3 id="global-method" tabindex="-1">Global Method</h3><p>After registering the Toast component through <code>app.use</code>, the <code>$toast</code> method will be automatically mounted on all subcomponents of the app.</p><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.$toast(<span class="hljs-string">&#39;Some messages&#39;</span>);\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="singleton" tabindex="-1">Singleton</h3><p>Toast use singleton mode by default, if you need to pop multiple Toast at the same time, you can refer to the following example:</p><pre><code class="language-js"><span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">allowMultiple</span>();\n\n<span class="hljs-keyword">const</span> toast1 = <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;First Toast&#39;</span>);\n<span class="hljs-keyword">const</span> toast2 = <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#39;Second Toast&#39;</span>);\n\ntoast1.<span class="hljs-title function_">clear</span>();\ntoast2.<span class="hljs-title function_">clear</span>();\n</code></pre></div><div class="van-doc-card"><h3 id="set-default-options" tabindex="-1">Set Default Options</h3><p>The Toast default configuration can be globally modified with the <code>Toast.setDefaultOptions</code> function.</p><pre><code class="language-js"><span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">setDefaultOptions</span>({ <span class="hljs-attr">duration</span>: <span class="hljs-number">2000</span> });\n\n<span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">setDefaultOptions</span>(<span class="hljs-string">&#39;loading&#39;</span>, { <span class="hljs-attr">forbidClick</span>: <span class="hljs-literal">true</span> });\n\n<span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">resetDefaultOptions</span>();\n\n<span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">resetDefaultOptions</span>(<span class="hljs-string">&#39;loading&#39;</span>);\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><table><thead><tr><th>Methods</th><th>Attribute</th><th>Return value</th><th>Description</th></tr></thead><tbody><tr><td>Toast</td><td><code>options | message</code></td><td>toast instance</td><td>Show toast</td></tr><tr><td>Toast.loading</td><td><code>options | message</code></td><td>toast instance</td><td>Show loading toast</td></tr><tr><td>Toast.success</td><td><code>options | message</code></td><td>toast instance</td><td>Show success toast</td></tr><tr><td>Toast.fail</td><td><code>options | message</code></td><td>toast instance</td><td>Show fail toast</td></tr><tr><td>Toast.clear</td><td><code>clearAll: boolean</code></td><td><code>void</code></td><td>Close toast</td></tr><tr><td>Toast.allowMultiple</td><td>-</td><td><code>void</code></td><td>Allow multiple toast at the same time</td></tr><tr><td>Toast.setDefaultOptions</td><td><code>type | options</code></td><td><code>void</code></td><td>Set default options of all toasts</td></tr><tr><td>Toast.resetDefaultOptions</td><td><code>type</code></td><td><code>void</code></td><td>Reset default options of all toasts</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="options" tabindex="-1">Options</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>type</td><td>Can be set to <code>loading</code> <code>success</code> <code>fail</code> <code>html</code></td><td><em>ToastType</em></td><td><code>text</code></td></tr><tr><td>position</td><td>Can be set to <code>top</code> <code>middle</code> <code>bottom</code></td><td><em>ToastPosition</em></td><td><code>middle</code></td></tr><tr><td>message</td><td>Message</td><td><em>string</em></td><td><code>&#39;&#39;</code></td></tr><tr><td>icon</td><td>Custom icon</td><td><em>string</em></td><td>-</td></tr><tr><td>iconSize</td><td>Custom icon size</td><td><em>number | string</em></td><td><code>36px</code></td></tr><tr><td>iconPrefix</td><td>Icon className prefix</td><td><em>string</em></td><td><code>van-icon</code></td></tr><tr><td>overlay</td><td>Whether to show overlay</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>forbidClick</td><td>Whether to forbid click background</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>closeOnClick</td><td>Whether to close after clicked</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>closeOnClickOverlay</td><td>Whether to close when overlay is clicked</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>loadingType</td><td>Loading icon type, can be set to <code>spinner</code></td><td><em>string</em></td><td><code>circular</code></td></tr><tr><td>duration</td><td>Toast duration(ms), won’t disappear if value is 0</td><td><em>number</em></td><td><code>2000</code></td></tr><tr><td>className</td><td>Custom className</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>overlayClass <code>v3.0.4</code></td><td>Custom overlay class</td><td><em>string | Array | object</em></td><td>-</td></tr><tr><td>overlayStyle <code>v3.0.4</code></td><td>Custom overlay style</td><td><em>object</em></td><td>-</td></tr><tr><td>onOpened</td><td>Callback function after opened</td><td><em>Function</em></td><td>-</td></tr><tr><td>onClose</td><td>Callback function after close</td><td><em>Function</em></td><td>-</td></tr><tr><td>transition</td><td>Transition, equivalent to <code>name</code> prop of <a href="https://v3.vuejs.org/api/built-in-components.html#transition">transition</a></td><td><em>string</em></td><td><code>van-fade</code></td></tr><tr><td>teleport</td><td>Specifies a target element where Toast will be mounted</td><td><em>string | Element</em></td><td><code>body</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ToastType</span>, <span class="hljs-title class_">ToastOptions</span>, <span class="hljs-title class_">ToastPosition</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-toast-max-width</td><td><em>70%</em></td><td>-</td></tr><tr><td>–van-toast-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-toast-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-toast-loading-icon-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-toast-line-height</td><td><em>var(–van-line-height-md)</em></td><td>-</td></tr><tr><td>–van-toast-border-radius</td><td><em>var(–van-border-radius-lg)</em></td><td>-</td></tr><tr><td>–van-toast-background-color</td><td><em>fade(var(–van-black), 70%)</em></td><td>-</td></tr><tr><td>–van-toast-icon-size</td><td><em>36px</em></td><td>-</td></tr><tr><td>–van-toast-text-min-width</td><td><em>96px</em></td><td>-</td></tr><tr><td>–van-toast-text-padding</td><td><em>var(–van-padding-xs) var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-toast-default-padding</td><td><em>var(–van-padding-md)</em></td><td>-</td></tr><tr><td>–van-toast-default-width</td><td><em>88px</em></td><td>-</td></tr><tr><td>–van-toast-default-min-height</td><td><em>88px</em></td><td>-</td></tr><tr><td>–van-toast-position-top-distance</td><td><em>20%</em></td><td>-</td></tr><tr><td>–van-toast-position-bottom-distance</td><td><em>20%</em></td><td>-</td></tr></tbody></table></div>',19)],Nr={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Dr,Ar)))},Er={class:"van-doc-markdown-body"},Rr=[t('<h1>TreeSelect</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to select from a set of related data sets.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">TreeSelect</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">TreeSelect</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="radio-mode" tabindex="-1">Radio Mode</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tree-select</span>\n  <span class="hljs-attr">v-model:active-id</span>=<span class="hljs-string">&quot;activeId&quot;</span>\n  <span class="hljs-attr">v-model:main-active-index</span>=<span class="hljs-string">&quot;activeIndex&quot;</span>\n  <span class="hljs-attr">:items</span>=<span class="hljs-string">&quot;items&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeId = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>);\n    <span class="hljs-keyword">const</span> activeIndex = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> items = [\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Group 1&#39;</span>,\n        <span class="hljs-attr">children</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Delaware&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">1</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Florida&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">2</span> },\n        ],\n      },\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Group 2&#39;</span>,\n        <span class="hljs-attr">children</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Alabama&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">5</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Kansas&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">6</span> },\n        ],\n      },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      items,\n      activeId,\n      activeIndex,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="multiple-mode" tabindex="-1">Multiple Mode</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tree-select</span>\n  <span class="hljs-attr">v-model:active-id</span>=<span class="hljs-string">&quot;activeIds&quot;</span>\n  <span class="hljs-attr">v-model:main-active-index</span>=<span class="hljs-string">&quot;activeIndex&quot;</span>\n  <span class="hljs-attr">:items</span>=<span class="hljs-string">&quot;items&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeId = <span class="hljs-title function_">ref</span>([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]);\n    <span class="hljs-keyword">const</span> activeIndex = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">const</span> items = [\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Group 1&#39;</span>,\n        <span class="hljs-attr">children</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Delaware&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">1</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Florida&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">2</span> },\n        ],\n      },\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Group 2&#39;</span>,\n        <span class="hljs-attr">children</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Alabama&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">5</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Kansas&#39;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">6</span> },\n        ],\n      },\n    ];\n\n    <span class="hljs-keyword">return</span> {\n      items,\n      activeId,\n      activeIndex,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-content" tabindex="-1">Custom Content</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tree-select</span>\n  <span class="hljs-attr">v-model:main-active-index</span>=<span class="hljs-string">&quot;activeIndex&quot;</span>\n  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;55vw&quot;</span>\n  <span class="hljs-attr">:items</span>=<span class="hljs-string">&quot;items&quot;</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">content</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-image</span>\n      <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;activeIndex === 0&quot;</span>\n      <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/apple-1.jpg&quot;</span>\n    /&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">van-image</span>\n      <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;activeIndex === 1&quot;</span>\n      <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img.yzcdn.cn/vant/apple-2.jpg&quot;</span>\n    /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-tree-select</span>&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeIndex = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">return</span> {\n      activeIndex,\n      <span class="hljs-attr">items</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Group 1&#39;</span> }, { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Group 2&#39;</span> }],\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="show-badge" tabindex="-1">Show Badge</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-tree-select</span>\n  <span class="hljs-attr">v-model:main-active-index</span>=<span class="hljs-string">&quot;activeIndex&quot;</span>\n  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;55vw&quot;</span>\n  <span class="hljs-attr">:items</span>=<span class="hljs-string">&quot;items&quot;</span>\n/&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> activeIndex = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>);\n    <span class="hljs-keyword">return</span> {\n      activeIndex,\n      <span class="hljs-attr">items</span>: [\n        { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Group 1&#39;</span>, <span class="hljs-attr">children</span>: [], <span class="hljs-attr">dot</span>: <span class="hljs-literal">true</span> },\n        { <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Group 2&#39;</span>, <span class="hljs-attr">children</span>: [], <span class="hljs-attr">badge</span>: <span class="hljs-number">5</span> },\n      ],\n    };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>items</td><td>Required datasets for the component</td><td><em>TreeSelectItem[]</em></td><td><code>[]</code></td></tr><tr><td>height</td><td>Height</td><td><em>number | string</em></td><td><code>300</code></td></tr><tr><td>main-active-index</td><td>The index of selected parent node</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>active-id</td><td>Id of selected item</td><td><em>number | string |<br>(number | string)[]</em></td><td><code>0</code></td></tr><tr><td>max</td><td>Maximum number of selected items</td><td><em>number | string</em></td><td><code>Infinity</code></td></tr><tr><td>selected-icon</td><td>Selected icon</td><td><em>string</em></td><td><code>success</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>click-nav</td><td>Emitted when parent node is selected</td><td><em>index: number</em></td></tr><tr><td>click-item</td><td>Emitted when item is selected</td><td><em>item: TreeSelectChild</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>content</td><td>Custom right content</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="data-structure-of-treeselectitem" tabindex="-1">Data Structure of TreeSelectItem</h3><p><code>TreeSelectItem</code> should be an array contains specified tree objects.</p><p>In every tree object, <code>text</code> property defines <code>id</code> stands for the unique key while the <code>children</code> contains sub-tree objects.</p><pre><code class="language-js">[\n  {\n    <span class="hljs-comment">// name of the parent node</span>\n    <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Group 1&#39;</span>,\n    <span class="hljs-comment">// badge</span>\n    <span class="hljs-attr">badge</span>: <span class="hljs-number">3</span>,\n    <span class="hljs-comment">// Whether to show red dot</span>\n    <span class="hljs-attr">dot</span>: <span class="hljs-literal">true</span>,\n    <span class="hljs-comment">// ClassName of parent node</span>\n    <span class="hljs-attr">className</span>: <span class="hljs-string">&#39;my-class&#39;</span>,\n    <span class="hljs-comment">// leaves of this parent node</span>\n    <span class="hljs-attr">children</span>: [\n      {\n        <span class="hljs-comment">// name of the leaf node</span>\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Washington&#39;</span>,\n        <span class="hljs-comment">// id of the leaf node, component highlights leaf node by comparing the activeId with this.</span>\n        <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>,\n        <span class="hljs-comment">// disable options</span>\n        <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>,\n      },\n      {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#39;Baltimore&#39;</span>,\n        <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>,\n      },\n    ],\n  },\n];\n</code></pre></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">TreeSelectItem</span>, <span class="hljs-title class_">TreeSelectChild</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-tree-select-font-size</td><td><em>var(–van-font-size-md)</em></td><td>-</td></tr><tr><td>–van-tree-select-nav-background-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-tree-select-content-background-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-tree-select-nav-item-padding</td><td><em>14px var(–van-padding-sm)</em></td><td>-</td></tr><tr><td>–van-tree-select-item-height</td><td><em>48px</em></td><td>-</td></tr><tr><td>–van-tree-select-item-active-color</td><td><em>var(–van-danger-color)</em></td><td>-</td></tr><tr><td>–van-tree-select-item-disabled-color</td><td><em>var(–van-gray-5)</em></td><td>-</td></tr><tr><td>–van-tree-select-item-selected-size</td><td><em>16px</em></td><td>-</td></tr></tbody></table></div>',16)],Ur={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Er,Rr)))},Br={class:"van-doc-markdown-body"},Vr=[t('<h1>Uploader</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Used to upload a local image or file to the server and display a preview image and upload progress during the upload process. The Uploader component does not currently contain the interface logic for uploading files to the server, this step needs to be implemented by the user.</p></div><div class="van-doc-card"><h3 id="install" tabindex="-1">Install</h3><p>Register component globally via <code>app.use</code>, refer to <a href="#/en-US/advanced-usage#zu-jian-zhu-ce">Component Registration</a> for more registration ways.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Uploader</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();\napp.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Uploader</span>);\n</code></pre></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">:after-read</span>=<span class="hljs-string">&quot;afterRead&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">afterRead</span> = (<span class="hljs-params">file</span>) =&gt; {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(file);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      afterRead,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="preview-file" tabindex="-1">Preview File</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fileList&quot;</span> <span class="hljs-attr">multiple</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> fileList = <span class="hljs-title function_">ref</span>([\n      { <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/leaf.jpg&#39;</span> },\n      { <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://cloud-image&#39;</span>, <span class="hljs-attr">isImage</span>: <span class="hljs-literal">true</span> },\n    ]);\n\n    <span class="hljs-keyword">return</span> {\n      fileList,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="upload-status" tabindex="-1">Upload Status</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fileList&quot;</span> <span class="hljs-attr">:after-read</span>=<span class="hljs-string">&quot;afterRead&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> fileList = <span class="hljs-title function_">ref</span>([\n      {\n        <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/leaf.jpg&#39;</span>,\n        <span class="hljs-attr">status</span>: <span class="hljs-string">&#39;uploading&#39;</span>,\n        <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Uploading...&#39;</span>,\n      },\n      {\n        <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/tree.jpg&#39;</span>,\n        <span class="hljs-attr">status</span>: <span class="hljs-string">&#39;failed&#39;</span>,\n        <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;Failed&#39;</span>,\n      },\n    ]);\n\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">afterRead</span> = (<span class="hljs-params">file</span>) =&gt; {\n      file.<span class="hljs-property">status</span> = <span class="hljs-string">&#39;uploading&#39;</span>;\n      file.<span class="hljs-property">message</span> = <span class="hljs-string">&#39;Uploading...&#39;</span>;\n\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        file.<span class="hljs-property">status</span> = <span class="hljs-string">&#39;failed&#39;</span>;\n        file.<span class="hljs-property">message</span> = <span class="hljs-string">&#39;Failed&#39;</span>;\n      }, <span class="hljs-number">1000</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      fileList,\n      afterRead,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="max-count" tabindex="-1">Max Count</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fileList&quot;</span> <span class="hljs-attr">multiple</span> <span class="hljs-attr">:max-count</span>=<span class="hljs-string">&quot;2&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> fileList = <span class="hljs-title function_">ref</span>([]);\n\n    <span class="hljs-keyword">return</span> {\n      fileList,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="max-size" tabindex="-1">Max Size</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">multiple</span> <span class="hljs-attr">:max-size</span>=<span class="hljs-string">&quot;500 * 1024&quot;</span> @<span class="hljs-attr">oversize</span>=<span class="hljs-string">&quot;onOversize&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">onOversize</span> = (<span class="hljs-params">file</span>) =&gt; {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(file);\n      <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;File size cannot exceed 500kb&#39;</span>);\n    };\n\n    <span class="hljs-keyword">return</span> {\n      onOversize,\n    };\n  },\n};\n</code></pre><p>If you need to make different size limits for different types of files, you can pass a function to the <code>max-size</code> props.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">multiple</span> <span class="hljs-attr">:max-size</span>=<span class="hljs-string">&quot;isOverSize&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">isOverSize</span> = (<span class="hljs-params">file</span>) =&gt; {\n      <span class="hljs-keyword">const</span> maxSize = file.<span class="hljs-property">type</span> === <span class="hljs-string">&#39;image/jpeg&#39;</span> ? <span class="hljs-number">500</span> * <span class="hljs-number">1024</span> : <span class="hljs-number">1000</span> * <span class="hljs-number">1024</span>;\n      <span class="hljs-keyword">return</span> file.<span class="hljs-property">size</span> &gt;= maxSize;\n    };\n    <span class="hljs-keyword">return</span> {\n      isOverSize,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="custom-upload-area" tabindex="-1">Custom Upload Area</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">van-button</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;plus&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Upload Image<span class="hljs-tag">&lt;/<span class="hljs-name">van-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-uploader</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="preview-cover" tabindex="-1">Preview Cover</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fileList&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">preview-cover</span>=<span class="hljs-string">&quot;{ file }&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;preview-cover van-ellipsis&quot;</span>&gt;</span>{{ file.name }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">van-uploader</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css">\n  <span class="hljs-selector-class">.preview-cover</span> {\n    <span class="hljs-attribute">position</span>: absolute;\n    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;\n    <span class="hljs-attribute">box-sizing</span>: border-box;\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;\n    <span class="hljs-attribute">padding</span>: <span class="hljs-number">4px</span>;\n    <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;\n    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>;\n    <span class="hljs-attribute">text-align</span>: center;\n    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.3</span>);\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="before-read" tabindex="-1">Before Read</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">:before-read</span>=<span class="hljs-string">&quot;beforeRead&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-comment">// 返回布尔值</span>\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">beforeRead</span> = (<span class="hljs-params">file</span>) =&gt; {\n      <span class="hljs-keyword">if</span> (file.<span class="hljs-property">type</span> !== <span class="hljs-string">&#39;image/jpeg&#39;</span>) {\n        <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Please upload an image in jpg format&#39;</span>);\n        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;\n      }\n      <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;\n    };\n\n    <span class="hljs-comment">// 返回 Promise</span>\n    <span class="hljs-keyword">const</span> <span class="hljs-title function_">asyncBeforeRead</span> = (<span class="hljs-params">file</span>) =&gt;\n      <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> {\n        <span class="hljs-keyword">if</span> (file.<span class="hljs-property">type</span> !== <span class="hljs-string">&#39;image/jpeg&#39;</span>) {\n          <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Please upload an image in jpg format&#39;</span>);\n          <span class="hljs-title function_">reject</span>();\n        } <span class="hljs-keyword">else</span> {\n          <span class="hljs-keyword">const</span> img = <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>([<span class="hljs-string">&#39;foo&#39;</span>], <span class="hljs-string">&#39;bar.jpg&#39;</span>, {\n            <span class="hljs-attr">type</span>: <span class="hljs-string">&#39;image/jpeg&#39;</span>,\n          });\n          <span class="hljs-title function_">resolve</span>(img);\n        }\n      });\n\n    <span class="hljs-keyword">return</span> {\n      beforeRead,\n      asyncBeforeRead,\n    };\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="disable-uploader" tabindex="-1">Disable Uploader</h3><p>Use <code>disabled</code> prop to disable uploader.</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">disabled</span> /&gt;</span>\n</code></pre></div><div class="van-doc-card"><h3 id="customize-single-preview-image-style" tabindex="-1">Customize Single Preview Image Style</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-uploader</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;fileList&quot;</span> <span class="hljs-attr">:deletable</span>=<span class="hljs-string">&quot;false&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Toast</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> fileList = <span class="hljs-title function_">ref</span>([\n      { <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/leaf.jpg&#39;</span> },\n      {\n        <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/sand.jpg&#39;</span>,\n        <span class="hljs-attr">deletable</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-attr">beforeDelete</span>: <span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-title class_">Toast</span>(<span class="hljs-string">&#39;Customize the events and styles of a single preview image&#39;</span>);\n        },\n      },\n      {\n        <span class="hljs-attr">url</span>: <span class="hljs-string">&#39;https://img.yzcdn.cn/vant/tree.jpg&#39;</span>,\n        <span class="hljs-attr">deletable</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-attr">imageFit</span>: <span class="hljs-string">&#39;contain&#39;</span>,\n        <span class="hljs-attr">previewSize</span>: <span class="hljs-number">120</span>,\n      },\n    ]);\n\n    <span class="hljs-keyword">return</span> { fileList };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>List of uploaded files</td><td><em>FileListItem[]</em></td><td>-</td></tr><tr><td>accept</td><td>Accepted <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Unique_file_type_specifiers">file type</a></td><td><em>string</em></td><td><code>image/*</code></td></tr><tr><td>name</td><td>Input name</td><td><em>number | string</em></td><td>-</td></tr><tr><td>preview-size</td><td>Size of preview image</td><td><em>number | string</em></td><td><code>80px</code></td></tr><tr><td>preview-image</td><td>Whether to show image preview</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>preview-full-image</td><td>Whether to show full screen image preview when image is clicked</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>preview-options</td><td>Options of full screen image preview，see <a href="#/en-US/image-preview">ImagePreview</a></td><td><em>object</em></td><td>-</td></tr><tr><td>multiple</td><td>Whether to enable multiple selection pictures</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>disabled</td><td>Whether to disabled the upload</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>readonly <code>v3.1.5</code></td><td>Whether to make upload area readonly</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>deletable</td><td>Whether to show delete icon</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-upload</td><td>Whether to show upload area</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>lazy-load</td><td>Whether to enable lazy load，should register <a href="#/en-US/lazyload">Lazyload</a> component</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>capture</td><td>Capture，can be set to <code>camera</code></td><td><em>string</em></td><td>-</td></tr><tr><td>after-read</td><td>Hook after reading the file</td><td><em>Function</em></td><td>-</td></tr><tr><td>before-read</td><td>Hook before reading the file, return false to stop reading the file, can return Promise</td><td><em>Function</em></td><td>-</td></tr><tr><td>before-delete</td><td>Hook before delete the file, return false to stop reading the file, can return Promise</td><td><em>Function</em></td><td>-</td></tr><tr><td>max-size <code>v3.0.17</code></td><td>Max size of file</td><td><em>number | string | (file: File) =&gt; boolean</em></td><td>-</td></tr><tr><td>max-count</td><td>Max count of image</td><td><em>number | string</em></td><td>-</td></tr><tr><td>result-type</td><td>Type of file read result, can be set to <code>file</code> <code>text</code></td><td><em>string</em></td><td><code>dataUrl</code></td></tr><tr><td>upload-text</td><td>Upload text</td><td><em>string</em></td><td>-</td></tr><tr><td>image-fit</td><td>Preview image fit mode</td><td><em>string</em></td><td><code>cover</code></td></tr><tr><td>upload-icon</td><td>Upload icon</td><td><em>string</em></td><td><code>photograph</code></td></tr></tbody></table><blockquote><p>Tips: accept, capture and multiple are the attributes of the native input tag, there may be some compatibility issues under different systems and WebView.</p></blockquote></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>Event</th><th>Description</th><th>Arguments</th></tr></thead><tbody><tr><td>oversize</td><td>Emitted when file size over limit</td><td>Same as after-read</td></tr><tr><td>click-upload <code>v3.1.5</code></td><td>Emitted when click upload area</td><td><em>event: MouseEvent</em></td></tr><tr><td>click-preview</td><td>Emitted when preview image is clicked</td><td>Same as after-read</td></tr><tr><td>close-preview</td><td>Emitted when the full screen image preview is closed</td><td>-</td></tr><tr><td>delete</td><td>Emitted when preview file is deleted</td><td>Same as after-read</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>Name</th><th>Description</th><th>SlotProps</th></tr></thead><tbody><tr><td>default</td><td>Custom icon</td><td>-</td></tr><tr><td>preview-cover</td><td>Custom content that covers the image preview</td><td><code>item: FileListItem</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="parameters-of-before-read-after-read-before-delete" tabindex="-1">Parameters of before-read、after-read、before-delete</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>file</td><td>File object</td><td><em>object</em></td></tr><tr><td>detail</td><td>Detail info, contains name and index</td><td><em>object</em></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="resulttype" tabindex="-1">ResultType</h3><table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>file</td><td>Result contains File object</td></tr><tr><td>text</td><td>Result contains File object and text content</td></tr><tr><td>dataUrl</td><td>Result contains File object and base64 content</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="methods" tabindex="-1">Methods</h3><p>Use <a href="https://v3.vuejs.org/guide/component-template-refs.html">ref</a> to get Uploader instance and call instance methods.</p><table><thead><tr><th>Name</th><th>Description</th><th>Attribute</th><th>Return value</th></tr></thead><tbody><tr><td>closeImagePreview</td><td>Close full screen image preview</td><td>-</td><td>-</td></tr><tr><td>chooseFile</td><td>Trigger choosing files, works with the user action context only because of browser security</td><td>-</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="types" tabindex="-1">Types</h3><p>The component exports the following type definitions:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> {\n  <span class="hljs-title class_">UploaderInstance</span>,\n  <span class="hljs-title class_">UploaderResultType</span>,\n  <span class="hljs-title class_">UploaderFileListItem</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n</code></pre><p><code>UploaderInstance</code> is the type of component instance:</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">UploaderInstance</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;\n\n<span class="hljs-keyword">const</span> uploaderRef = ref&lt;<span class="hljs-title class_">UploaderInstance</span>&gt;();\n\nuploaderRef.<span class="hljs-property">value</span>?.<span class="hljs-title function_">chooseFile</span>();\n</code></pre></div><h2 id="theming" tabindex="-1">Theming</h2><div class="van-doc-card"><h3 id="css-variables" tabindex="-1">CSS Variables</h3><p>The component provides the following CSS variables, which can be used to customize styles. Please refer to <a href="#/en-US/config-provider">ConfigProvider component</a>.</p><table><thead><tr><th>Name</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>–van-uploader-size</td><td><em>80px</em></td><td>-</td></tr><tr><td>–van-uploader-icon-size</td><td><em>24px</em></td><td>-</td></tr><tr><td>–van-uploader-icon-color</td><td><em>var(–van-gray-4)</em></td><td>-</td></tr><tr><td>–van-uploader-text-color</td><td><em>var(–van-gray-6)</em></td><td>-</td></tr><tr><td>–van-uploader-text-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-uploader-upload-background-color</td><td><em>var(–van-gray-1)</em></td><td>-</td></tr><tr><td>–van-uploader-upload-active-color</td><td><em>var(–van-active-color)</em></td><td>-</td></tr><tr><td>–van-uploader-delete-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-uploader-delete-icon-size</td><td><em>14px</em></td><td>-</td></tr><tr><td>–van-uploader-delete-background-color</td><td><em>rgba(0, 0, 0, 0.7)</em></td><td>-</td></tr><tr><td>–van-uploader-file-background-color</td><td><em>var(–van-background-color)</em></td><td>-</td></tr><tr><td>–van-uploader-file-icon-size</td><td><em>20px</em></td><td>-</td></tr><tr><td>–van-uploader-file-icon-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-uploader-file-name-padding</td><td><em>0 var(–van-padding-base)</em></td><td>-</td></tr><tr><td>–van-uploader-file-name-margin-top</td><td><em>var(–van-padding-xs)</em></td><td>-</td></tr><tr><td>–van-uploader-file-name-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-uploader-file-name-text-color</td><td><em>var(–van-gray-7)</em></td><td>-</td></tr><tr><td>–van-uploader-mask-text-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-uploader-mask-background-color</td><td><em>fade(var(–van-gray-8), 88%)</em></td><td>-</td></tr><tr><td>–van-uploader-mask-icon-size</td><td><em>22px</em></td><td>-</td></tr><tr><td>–van-uploader-mask-message-font-size</td><td><em>var(–van-font-size-sm)</em></td><td>-</td></tr><tr><td>–van-uploader-mask-message-line-height</td><td><em>var(–van-line-height-xs)</em></td><td>-</td></tr><tr><td>–van-uploader-loading-icon-size</td><td><em>22px</em></td><td>-</td></tr><tr><td>–van-uploader-loading-icon-color</td><td><em>var(–van-white)</em></td><td>-</td></tr><tr><td>–van-uploader-disabled-opacity</td><td><em>var(–van-disabled-opacity)</em></td><td>-</td></tr></tbody></table></div>',24)],Lr={name:"vant",build:{srcDir:"src",namedExport:!0,skipInstall:["lazyload"],site:{publicPath:"undefined"==typeof window&&{}.PUBLIC_PATH||"/vant/v3/"},vetur:{tagPrefix:"van-"}},site:{defaultLang:"en-US",versions:[{label:"v1",link:"/vant/v1/"},{label:"v2",link:"/vant/"}],baiduAnalytics:{seed:"ad6b5732c36321f2dafed737ac2da92f"},htmlMeta:{"docsearch:version":"v3"},locales:{"zh-CN":{title:"Vant",description:"轻量、可靠的移动端组件库",logo:"https://img.yzcdn.cn/vant/logo.png",langLabel:"中",links:[{logo:"https://b.yzcdn.cn/vant/logo/weapp.svg",url:"https://vant-contrib.gitee.io/vant-weapp/"},{logo:"https://b.yzcdn.cn/vant/logo/github.svg",url:"https://github.com/youzan/vant"}],searchConfig:{apiKey:"90067aecdaa2c85220e2783cd305caac",indexName:"vant",searchParameters:{facetFilters:["lang:zh-CN","version:v3"]},transformItems:s=>("youzan.github.io"!==location.hostname&&s.forEach((s=>{s.url&&(s.url=s.url&&s.url.replace("youzan.github.io",location.hostname))})),s)},nav:[{title:"开发指南",items:[{path:"home",title:"介绍"},{path:"quickstart",title:"快速上手"},{path:"advanced-usage",title:"进阶用法"},{path:"changelog",title:"更新日志"},{path:"migrate-from-v2",title:"从 v2 升级"},{path:"contribution",title:"贡献指南"},{path:"design",title:"设计资源"},{path:"style-guide",title:"风格指南"},{path:"locale",title:"国际化"}]},{title:"基础组件",items:[{path:"button",title:"Button 按钮"},{path:"cell",title:"Cell 单元格"},{path:"config-provider",title:"ConfigProvider 全局配置"},{path:"icon",title:"Icon 图标"},{path:"image",title:"Image 图片"},{path:"col",title:"Layout 布局"},{path:"popup",title:"Popup 弹出层"},{path:"style",title:"Style 内置样式"},{path:"toast",title:"Toast 轻提示"}]},{title:"表单组件",items:[{path:"calendar",title:"Calendar 日历"},{path:"cascader",title:"Cascader 级联选择"},{path:"checkbox",title:"Checkbox 复选框"},{path:"datetime-picker",title:"DatetimePicker 时间选择"},{path:"field",title:"Field 输入框"},{path:"form",title:"Form 表单"},{path:"number-keyboard",title:"NumberKeyboard 数字键盘"},{path:"password-input",title:"PasswordInput 密码输入框"},{path:"picker",title:"Picker 选择器"},{path:"radio",title:"Radio 单选框"},{path:"rate",title:"Rate 评分"},{path:"search",title:"Search 搜索"},{path:"slider",title:"Slider 滑块"},{path:"stepper",title:"Stepper 步进器"},{path:"switch",title:"Switch 开关"},{path:"uploader",title:"Uploader 文件上传"}]},{title:"反馈组件",items:[{path:"action-sheet",title:"ActionSheet 动作面板"},{path:"dialog",title:"Dialog 弹出框"},{path:"dropdown-menu",title:"DropdownMenu 下拉菜单"},{path:"loading",title:"Loading 加载"},{path:"notify",title:"Notify 消息通知"},{path:"overlay",title:"Overlay 遮罩层"},{path:"pull-refresh",title:"PullRefresh 下拉刷新"},{path:"share-sheet",title:"ShareSheet 分享面板"},{path:"swipe-cell",title:"SwipeCell 滑动单元格"}]},{title:"展示组件",items:[{path:"badge",title:"Badge 徽标"},{path:"circle",title:"Circle 环形进度条"},{path:"collapse",title:"Collapse 折叠面板"},{path:"count-down",title:"CountDown 倒计时"},{path:"divider",title:"Divider 分割线"},{path:"empty",title:"Empty 空状态"},{path:"image-preview",title:"ImagePreview 图片预览"},{path:"lazyload",title:"Lazyload 懒加载"},{path:"list",title:"List 列表"},{path:"notice-bar",title:"NoticeBar 通知栏"},{path:"popover",title:"Popover 气泡弹出框"},{path:"progress",title:"Progress 进度条"},{path:"skeleton",title:"Skeleton 骨架屏"},{path:"steps",title:"Steps 步骤条"},{path:"sticky",title:"Sticky 粘性布局"},{path:"swipe",title:"Swipe 轮播"},{path:"tag",title:"Tag 标签"}]},{title:"导航组件",items:[{path:"action-bar",title:"ActionBar 动作栏"},{path:"grid",title:"Grid 宫格"},{path:"index-bar",title:"IndexBar 索引栏"},{path:"nav-bar",title:"NavBar 导航栏"},{path:"pagination",title:"Pagination 分页"},{path:"sidebar",title:"Sidebar 侧边导航"},{path:"tab",title:"Tab 标签页"},{path:"tabbar",title:"Tabbar 标签栏"},{path:"tree-select",title:"TreeSelect 分类选择"}]},{title:"业务组件",items:[{path:"address-edit",title:"AddressEdit 地址编辑"},{path:"address-list",title:"AddressList 地址列表"},{path:"area",title:"Area 省市区选择"},{path:"card",title:"Card 商品卡片"},{path:"contact-card",title:"ContactCard 联系人卡片"},{path:"contact-edit",title:"ContactEdit 联系人编辑"},{path:"contact-list",title:"ContactList 联系人列表"},{path:"coupon-list",title:"Coupon 优惠券"},{path:"submit-bar",title:"SubmitBar 提交订单栏"}]},{title:"组合式 API",items:[{path:"vant-use-intro",title:"介绍"},{path:"use-toggle",title:"useToggle"},{path:"use-count-down",title:"useCountDown"},{path:"use-custom-field-value",title:"useCustomFieldValue"},{path:"use-rect",title:"useRect"},{path:"use-event-listener",title:"useEventListener"},{path:"use-page-visibility",title:"usePageVisibility"},{path:"use-scroll-parent",title:"useScrollParent"},{path:"use-window-size",title:"useWindowSize"},{path:"use-relation",title:"useRelation"},{path:"use-click-away",title:"useClickAway"}]},{title:"废弃",items:[{path:"theme",title:"定制主题"}]}]},"en-US":{title:"Vant",description:"Mobile UI Components built on Vue",logo:"https://img.yzcdn.cn/vant/logo.png",langLabel:"EN",links:[{logo:"https://b.yzcdn.cn/vant/logo/github.svg",url:"https://github.com/youzan/vant"}],searchConfig:{apiKey:"90067aecdaa2c85220e2783cd305caac",indexName:"vant",searchParameters:{facetFilters:["lang:en-US","version:v3"]}},nav:[{title:"Essentials",items:[{path:"home",title:"Introduction"},{path:"quickstart",title:"Quickstart"},{path:"advanced-usage",title:"Advanced Usage"},{path:"changelog",title:"Changelog"},{path:"design",title:"Design Resources"},{path:"locale",title:"Internationalization"}]},{title:"Basic Components",items:[{path:"button",title:"Button"},{path:"cell",title:"Cell"},{path:"config-provider",title:"ConfigProvider"},{path:"icon",title:"Icon"},{path:"image",title:"Image"},{path:"col",title:"Layout"},{path:"popup",title:"Popup"},{path:"style",title:"Built-in style"},{path:"toast",title:"Toast"}]},{title:"Form Components",items:[{path:"calendar",title:"Calendar"},{path:"cascader",title:"Cascader"},{path:"checkbox",title:"Checkbox"},{path:"datetime-picker",title:"DatetimePicker"},{path:"field",title:"Field"},{path:"form",title:"Form"},{path:"number-keyboard",title:"NumberKeyboard"},{path:"password-input",title:"PasswordInput"},{path:"picker",title:"Picker"},{path:"radio",title:"Radio"},{path:"rate",title:"Rate"},{path:"search",title:"Search"},{path:"slider",title:"Slider"},{path:"stepper",title:"Stepper"},{path:"switch",title:"Switch"},{path:"uploader",title:"Uploader"}]},{title:"Action Components",items:[{path:"action-sheet",title:"ActionSheet"},{path:"dialog",title:"Dialog"},{path:"dropdown-menu",title:"DropdownMenu"},{path:"loading",title:"Loading"},{path:"notify",title:"Notify"},{path:"overlay",title:"Overlay"},{path:"pull-refresh",title:"PullRefresh"},{path:"share-sheet",title:"ShareSheet"},{path:"swipe-cell",title:"SwipeCell"}]},{title:"Display Components",items:[{path:"badge",title:"Badge"},{path:"circle",title:"Circle"},{path:"collapse",title:"Collapse"},{path:"count-down",title:"CountDown"},{path:"divider",title:"Divider"},{path:"empty",title:"Empty"},{path:"image-preview",title:"ImagePreview"},{path:"lazyload",title:"Lazyload"},{path:"list",title:"List"},{path:"notice-bar",title:"NoticeBar"},{path:"popover",title:"Popover"},{path:"progress",title:"Progress"},{path:"skeleton",title:"Skeleton"},{path:"steps",title:"Steps"},{path:"sticky",title:"Sticky"},{path:"swipe",title:"Swipe"},{path:"tag",title:"Tag"}]},{title:"Navigation Components",items:[{path:"action-bar",title:"ActionBar"},{path:"grid",title:"Grid"},{path:"index-bar",title:"IndexBar"},{path:"nav-bar",title:"NavBar"},{path:"pagination",title:"Pagination"},{path:"sidebar",title:"Sidebar"},{path:"tab",title:"Tab"},{path:"tabbar",title:"Tabbar"},{path:"tree-select",title:"TreeSelect"}]},{title:"Business Components",items:[{path:"address-edit",title:"AddressEdit"},{path:"address-list",title:"AddressList"},{path:"area",title:"Area"},{path:"card",title:"Card"},{path:"contact-card",title:"ContactCard"},{path:"contact-edit",title:"ContactEdit"},{path:"contact-list",title:"ContactList"},{path:"coupon-list",title:"Coupon"},{path:"submit-bar",title:"SubmitBar"}]},{title:"Composables",items:[{path:"vant-use-intro",title:"Intro"},{path:"use-toggle",title:"useToggle"},{path:"use-count-down",title:"useCountDown"},{path:"use-custom-field-value",title:"useCustomFieldValue"}]},{title:"Deprecated",items:[{path:"theme",title:"Custom Theme"}]}]}}}},Fr={AdvancedUsage_en_US:e,AdvancedUsage_zh_CN:c,Changelog_en_US:i,Changelog_zh_CN:u,Contribution_zh_CN:v,Design_en_US:y,Design_zh_CN:k,Home_en_US:S,Home_zh_CN:D,MigrateFromV2_zh_CN:R,Quickstart_en_US:L,Quickstart_zh_CN:O,StyleGuide_zh_CN:$,Theme_en_US:Z,Theme_zh_CN:ts,UseClickAway_en_US:ds,UseClickAway_zh_CN:rs,UseCountDown_en_US:us,UseCountDown_zh_CN:bs,UseCustomFieldValue_en_US:qs,UseCustomFieldValue_zh_CN:_s,UseEventListener_zh_CN:Is,UsePageVisibility_zh_CN:Ns,UseRect_zh_CN:Bs,UseRelation_zh_CN:Ws,UseScrollParent_zh_CN:Hs,UseToggle_en_US:Xs,UseToggle_zh_CN:sa,UseWindowSize_zh_CN:la,VantUseIntro_en_US:ca,VantUseIntro_zh_CN:ha,ActionBar_zh_CN:ma,ActionSheet_zh_CN:ya,AddressEdit_zh_CN:ka,AddressList_zh_CN:Sa,Area_zh_CN:Da,Badge_zh_CN:Ra,Button_zh_CN:La,Calendar_zh_CN:Oa,Card_zh_CN:$a,Cascader_zh_CN:Za,Cell_zh_CN:tt,Checkbox_zh_CN:dt,Circle_zh_CN:rt,Col_zh_CN:ut,Collapse_zh_CN:bt,ConfigProvider_zh_CN:qt,ContactCard_zh_CN:_t,ContactEdit_zh_CN:It,ContactList_zh_CN:Nt,CountDown_zh_CN:Bt,CouponList_zh_CN:Wt,DatetimePicker_zh_CN:Ht,Dialog_zh_CN:Xt,Divider_zh_CN:sn,DropdownMenu_zh_CN:ln,Empty_zh_CN:cn,Field_zh_CN:jn,Form_zh_CN:vn,Grid_zh_CN:wn,Icon_zh_CN:zn,Image_zh_CN:Tn,ImagePreview_zh_CN:An,IndexBar_zh_CN:Un,Lazyload_zh_CN:Fn,List_zh_CN:Gn,Loading_zh_CN:Jn,Locale_zh_CN:Qn,NavBar_zh_CN:nl,NoticeBar_zh_CN:pl,Notify_zh_CN:il,NumberKeyboard_zh_CN:gl,Overlay_zh_CN:fl,Pagination_zh_CN:xl,PasswordInput_zh_CN:Cl,Picker_zh_CN:Pl,Popover_zh_CN:El,Popup_zh_CN:Vl,Progress_zh_CN:Ml,PullRefresh_zh_CN:Kl,Radio_zh_CN:Yl,Rate_zh_CN:ae,Search_zh_CN:ee,ShareSheet_zh_CN:oe,Sidebar_zh_CN:je,Skeleton_zh_CN:ve,Slider_zh_CN:we,Stepper_zh_CN:ze,Steps_zh_CN:Te,Sticky_zh_CN:Ae,Style_zh_CN:Ue,SubmitBar_zh_CN:Fe,Swipe_zh_CN:Ge,SwipeCell_zh_CN:Je,Switch_zh_CN:Qe,Tab_zh_CN:nd,Tabbar_zh_CN:pd,Tag_zh_CN:id,Toast_zh_CN:gd,TreeSelect_zh_CN:fd,Uploader_zh_CN:xd,ActionBar_en_US:Cd,ActionSheet_en_US:Pd,AddressEdit_en_US:Ed,AddressList_en_US:Vd,Area_en_US:Md,Badge_en_US:Kd,Button_en_US:Yd,Calendar_en_US:ap,Card_en_US:ep,Cascader_en_US:op,Cell_en_US:jp,Checkbox_en_US:vp,Circle_en_US:wp,Col_en_US:zp,Collapse_en_US:Tp,ConfigProvider_en_US:Ap,ContactCard_en_US:Up,ContactEdit_en_US:Fp,ContactList_en_US:Gp,CountDown_en_US:Jp,CouponList_en_US:Qp,DatetimePicker_en_US:nc,Dialog_en_US:dc,Divider_en_US:oc,DropdownMenu_en_US:hc,Empty_en_US:gc,Field_en_US:bc,Form_en_US:wc,Grid_en_US:kc,Icon_en_US:Cc,Image_en_US:Ic,ImagePreview_en_US:Ac,IndexBar_en_US:Rc,Lazyload_en_US:Vc,List_en_US:Wc,Loading_en_US:Gc,Locale_en_US:$c,NavBar_en_US:Yc,NoticeBar_en_US:so,Notify_en_US:no,NumberKeyboard_en_US:po,Overlay_en_US:ro,Pagination_en_US:jo,PasswordInput_en_US:mo,Picker_en_US:fo,Popover_en_US:qo,Popup_en_US:zo,Progress_en_US:So,PullRefresh_en_US:Po,Radio_en_US:No,Rate_en_US:Uo,Search_en_US:Lo,ShareSheet_en_US:Mo,Sidebar_en_US:Ho,Skeleton_en_US:Jo,Slider_en_US:Zo,Stepper_en_US:ar,Steps_en_US:lr,Sticky_en_US:pr,Style_en_US:rr,SubmitBar_en_US:jr,Swipe_en_US:mr,SwipeCell_en_US:fr,Switch_en_US:qr,Tab_en_US:zr,Tabbar_en_US:Sr,Tag_en_US:Pr,Toast_en_US:Nr,TreeSelect_en_US:Ur,Uploader_en_US:{setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(s(),a("div",Br,Vr)))}},Wr="3.2.2";let Mr="zh-CN";function Or(){return Mr}function Gr(s){Mr=s,localStorage.setItem("vant-cli-lang",s)}function Hr(s){const a=localStorage.getItem("vant-cli-lang");Mr=a||(navigator.language&&-1!==navigator.language.indexOf("zh-")?"zh-CN":s||"en-US")}const Kr=navigator.userAgent.toLowerCase(),$r=/ios|iphone|ipod|ipad|android/.test(Kr);function Jr(s,a="-"){return s.replace(/([a-z\d])([A-Z])/g,"$1"+a+"$2").replace(/([A-Z]+)([A-Z][a-z\d]+)/g,"$1"+a+"$2").toLowerCase()}let Xr=[],Yr=!1;function Zr(){var s,a;const t=window.vueRouter,{path:n}=t.currentRoute.value;return(null==(s=Lr.site.simulator)?void 0:s.routeMapper)?null==(a=Lr.site.simulator)?void 0:a.routeMapper(n):n}function Qr(){window.top.postMessage({type:"replacePath",value:Zr()},"*")}function si(){const s=document.querySelector("iframe");var a;s&&(a=()=>{s.contentWindow.postMessage({type:"replacePath",value:Zr()},"*")},Yr?a():Xr.push(a))}function ai(s){window.addEventListener("message",(a=>{var t,n;if("replacePath"!==(null==(t=a.data)?void 0:t.type))return;const l=(null==(n=a.data)?void 0:n.value)||"";s.currentRoute.value.path!==l&&s.replace(l).catch((()=>{}))}))}window.top===window?window.addEventListener("message",(s=>{"iframeReady"===s.data.type&&(Yr=!0,Xr.forEach((s=>s())),Xr=[])})):window.top.postMessage({type:"iframeReady"},"*");export{Hr as a,si as b,Lr as c,Fr as d,Jr as e,Qr as f,Or as g,$r as i,ai as l,Wr as p,Gr as s};
